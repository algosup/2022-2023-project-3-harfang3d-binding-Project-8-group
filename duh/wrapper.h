#ifdef __cplusplus
extern "C" {
#endif
#include "fabgen.h"

extern int Getfuture_status(const int id);
extern unsigned int GetLogLevel(const int id);
extern uint8_t GetRotationOrder(const int id);
extern uint8_t GetAxis(const int id);
extern uint8_t GetAxisLock(const int id);
extern uint8_t GetFrustumType(const int id);
extern uint8_t GetVisibility(const int id);
extern uint8_t GetMonitorRotation(const int id);
extern int GetPictureFormat(const int id);
extern int GetBrushMode(const int id);
extern int GetPenMode(const int id);
extern int GetPenCap(const int id);
extern int GetLineJoin(const int id);
extern int GetInnerJoin(const int id);
extern int GetPictureFilter(const int id);
extern int GetValueType(const int id);
extern int GetDocumentFormat(const int id);
extern int GetSeekRef(const int id);
extern int GetFileMode(const int id);
extern int GetFileDriverCaps(const int id);
extern uint8_t GetShaderType(const int id);
extern uint8_t GetShaderTypePrecision(const int id);
extern uint8_t GetVertexSemantic(const int id);
extern uint8_t GetTextureUV(const int id);
extern uint8_t GetTextureFilter(const int id);
extern uint8_t GetShaderSemantic(const int id);
extern uint8_t GetIndexType(const int id);
extern uint8_t GetVertexType(const int id);
extern uint8_t GetGpuPrimitiveType(const int id);
extern int GetGpuBufferUsage(const int id);
extern int GetGpuBufferType(const int id);
extern int GetTextureUsage(const int id);
extern uint8_t GetTextureFormat(const int id);
extern uint8_t GetTextureAA(const int id);
extern int GetFillMode(const int id);
extern int GetCullFunc(const int id);
extern int GetDepthFunc(const int id);
extern int GetBlendFunc(const int id);
extern int GetClearFunction(const int id);
extern int GetEye(const int id);
extern int GetCullMode(const int id);
extern int GetBlendMode(const int id);
extern int GetRenderTechnique(const int id);
extern int GetRenderPass(const int id);
extern int GetRenderPassShader(const int id);
extern uint8_t GetAudioFormatEncoding(const int id);
extern uint8_t GetAudioFormatType(const int id);
extern int GetAudioDataState(const int id);
extern uint8_t GetMixerLoopMode(const int id);
extern uint8_t GetMixerPlayState(const int id);
extern int GetMovieFrameFormat(const int id);
extern uint8_t GetComponentState(const int id);
extern int GetModel(const int id);
extern int GetShadow(const int id);
extern int GetRigidBodyType(const int id);
extern int GetScriptExecutionMode(const int id);
extern int GetAnimLoop(const int id);
extern int GetInputDeviceType(const int id);
extern int GetKey(const int id);
extern int GetButton(const int id);
extern int GetAnalogInput(const int id);
extern int GetInputDeviceEffect(const int id);
extern int GetInputDeviceMatrix(const int id);
extern int GetAppEndCondition(const int id);
extern int GetImGuiWindowFlags(const int id);
extern int GetImGuiCond(const int id);
extern int GetImGuiHoveredFlags(const int id);
extern int GetImGuiFocusedFlags(const int id);
extern int GetImGuiColorEditFlags(const int id);
extern int GetImGuiInputTextFlags(const int id);
extern int GetImGuiTreeNodeFlags(const int id);
extern int GetImGuiSelectableFlags(const int id);
extern int GetImGuiCol(const int id);
extern int GetImGuiStyleVar(const int id);
extern int GetImDrawCornerFlags(const int id);
extern int GetImGuiComboFlags(const int id);
extern int GetLuaTaskState(const int id);
extern int GetNoiseType(const int id);
extern int GetInterp(const int id);
extern int GetFractalType(const int id);
extern int GetCellularDistanceFunction(const int id);
extern int GetCellularReturnType(const int id);
typedef void* harfang_void_pointer;
typedef void* harfang_future_void;
typedef void* harfang_future_bool;
typedef void* harfang_future_int;
typedef void* harfang_future_float;
typedef void* harfang_future_u_int;
typedef void* harfang_future_size;
typedef void* harfang_char_list;
typedef void* harfang_int_list;
typedef void* harfang_int8_t_list;
typedef void* harfang_int16_t_list;
typedef void* harfang_int32_t_list;
typedef void* harfang_int64_t_list;
typedef void* harfang_uint8_t_list;
typedef void* harfang_uint16_t_list;
typedef void* harfang_unsigned_int_list;
typedef void* harfang_uint64_t_list;
typedef void* harfang_float_list;
typedef void* harfang_double_list;
typedef void* harfang_string_list;
typedef void* harfang_binary_data;
typedef void* harfang_future_time;
typedef void* harfang_vector3;
typedef void* harfang_vector4;
typedef void* harfang_matrix3;
typedef void* harfang_matrix4;
typedef void* harfang_matrix44;
typedef void* harfang_quaternion;
typedef void* harfang_min_max;
typedef void* harfang_vector2;
typedef void* harfang_int_vector2;
typedef void* harfang_rect;
typedef void* harfang_int_rect;
typedef void* harfang_plane;
typedef void* harfang_future_vector2;
typedef void* harfang_future_int_vector2;
typedef void* harfang_future_vector3;
typedef void* harfang_future_vector4;
typedef void* harfang_future_matrix3;
typedef void* harfang_future_matrix4;
typedef void* harfang_future_matrix44;
typedef void* harfang_future_float_rect;
typedef void* harfang_future_int_rect;
typedef void* harfang_vector2_list;
typedef void* harfang_intvector2_list;
typedef void* harfang_vector3_list;
typedef void* harfang_vector4_list;
typedef void* harfang_matrix3_list;
typedef void* harfang_matrix4_list;
typedef void* harfang_matrix44_list;
typedef void* harfang_frustum;
typedef void* harfang_frustum_planes;
typedef void* harfang_surface;
typedef void* harfang_monitor_mode;
typedef void* harfang_monitormode_list;
typedef void* harfang_monitor;
typedef void* harfang_monitor_list;
typedef void* harfang_window;
typedef void* harfang_future_window;
typedef void* harfang_future_surface;
typedef void* harfang_color;
typedef void* harfang_color_list;
typedef void* harfang_font_engine;
typedef void* harfang_picture;
typedef void* harfang_document_reader;
typedef void* harfang_document_writer;
typedef void* harfang_file_driver;
typedef void* harfang_file_handle;
typedef void* harfang_std_file_driver;
typedef void* harfang_zip_file_driver;
typedef void* harfang_buffer_file_driver;
typedef void* harfang_filesystem;
typedef void* harfang_type_value;
typedef void* harfang_typevalue_list;
typedef void* harfang_shader;
typedef void* harfang_shader_variable;
typedef void* harfang_texture_unit_config;
typedef void* harfang_shader_value;
typedef void* harfang_material_value;
typedef void* harfang_material;
typedef void* harfang_geometry;
typedef void* harfang_geometry_list;
typedef void* harfang_vertex_layout_attribute;
typedef void* harfang_vertex_layout;
typedef void* harfang_gpu_buffer;
typedef void* harfang_gpu_resource;
typedef void* harfang_texture;
typedef void* harfang_texture_list;
typedef void* harfang_render_target;
typedef void* harfang_future_render_target;
typedef void* harfang_gpu_hardware_info;
typedef void* harfang_gpu_shader;
typedef void* harfang_future_gpu_shader;
typedef void* harfang_gpu_shader_value;
typedef void* harfang_gpu_shader_variable;
typedef void* harfang_texture_cache;
typedef void* harfang_shader_cache;
typedef void* harfang_renderer;
typedef void* harfang_renderer_async;
typedef void* harfang_render_system;
typedef void* harfang_surface_shader;
typedef void* harfang_render_material;
typedef void* harfang_render_geometry;
typedef void* harfang_render_statistics;
typedef void* harfang_view_state;
typedef void* harfang_future_render_technique;
typedef void* harfang_render_system_async;
typedef void* harfang_raster_font;
typedef void* harfang_simple_graphic_engine;
typedef void* harfang_iso_surface;
typedef void* harfang_frame_renderer;
typedef void* harfang_audio_format;
typedef void* harfang_audio_data;
typedef void* harfang_audio_io;
typedef void* harfang_mixer_channel_state;
typedef void* harfang_mixer_channel_location;
typedef void* harfang_sound;
typedef void* harfang_mixer;
typedef void* harfang_mixer_async;
typedef void* harfang_future_mixer_channel;
typedef void* harfang_future_mixer_channel_state;
typedef void* harfang_future_mixer_channel_location;
typedef void* harfang_future_mixer_play_state;
typedef void* harfang_movie;
typedef void* harfang_node;
typedef void* harfang_scene;
typedef void* harfang_scene_system;
typedef void* harfang_group;
typedef void* harfang_component;
typedef void* harfang_instance;
typedef void* harfang_metadata;
typedef void* harfang_target;
typedef void* harfang_environment;
typedef void* harfang_simple_graphic_scene_overlay;
typedef void* harfang_transform;
typedef void* harfang_camera;
typedef void* harfang_object;
typedef void* harfang_light;
typedef void* harfang_decorator;
typedef void* harfang_rigid_body;
typedef void* harfang_collision;
typedef void* harfang_box_collision;
typedef void* harfang_mesh_collision;
typedef void* harfang_sphere_collision;
typedef void* harfang_capsule_collision;
typedef void* harfang_convex_collision;
typedef void* harfang_joint_limit;
typedef void* harfang_joint;
typedef void* harfang_spherical_joint;
typedef void* harfang_d6_joint;
typedef void* harfang_terrain;
typedef void* harfang_post_process_component;
typedef void* harfang_sharpen_post_process;
typedef void* harfang_radial_blur_post_process;
typedef void* harfang_chromatic_dispersion_post_process;
typedef void* harfang_hsl_post_process;
typedef void* harfang_motion_blur_post_process;
typedef void* harfang_sao_post_process;
typedef void* harfang_bloom_post_process;
typedef void* harfang_script_env;
typedef void* harfang_script;
typedef void* harfang_render_script;
typedef void* harfang_logic_script;
typedef void* harfang_navigation_path;
typedef void* harfang_navigation_layer;
typedef void* harfang_navigationlayer_list;
typedef void* harfang_navigation_config;
typedef void* harfang_navigation_system;
typedef void* harfang_navigation_geometry;
typedef void* harfang_navigation;
typedef void* harfang_component_list;
typedef void* harfang_script_system;
typedef void* harfang_lua_system;
typedef void* harfang_node_list;
typedef void* harfang_renderable_system;
typedef void* harfang_transform_system;
typedef void* harfang_physic_trace;
typedef void* harfang_physic_system;
typedef void* harfang_collision_pair;
typedef void* harfang_collisionpair_list;
typedef void* harfang_scene_bound_anim;
typedef void* harfang_anim_track;
typedef void* harfang_anim_key_float;
typedef void* harfang_anim_key_vector3;
typedef void* harfang_anim_track_float;
typedef void* harfang_anim_track_vector3;
typedef void* harfang_anim_track_rotation;
typedef void* harfang_anim;
typedef void* harfang_anim_take;
typedef void* harfang_animtake_list;
typedef void* harfang_group_list;
typedef void* harfang_scene_picking;
typedef void* harfang_input_device;
typedef void* harfang_input_system;
typedef void* harfang_render_window;
typedef void* harfang_plus;
typedef void* harfang_fps_controller;
typedef void* harfang_im_font;
typedef void* harfang_im_draw_list;
typedef void* harfang_lua_task_handle;
typedef void* harfang_lua_task;
typedef void* harfang_lua_task_system;
typedef void* harfang_fast_noise;
extern void harfang_void_pointer_free(harfang_void_pointer);
extern void harfang_future_void_free(harfang_future_void);
extern void harfang_get_future_void(harfang_future_void this_);
extern bool  harfang_valid_future_void(harfang_future_void this_);
extern void harfang_wait_future_void(harfang_future_void this_);
extern void harfang_future_bool_free(harfang_future_bool);
extern bool  harfang_get_future_bool(harfang_future_bool this_);
extern bool  harfang_valid_future_bool(harfang_future_bool this_);
extern void harfang_wait_future_bool(harfang_future_bool this_);
extern void harfang_future_int_free(harfang_future_int);
extern int  harfang_get_future_int(harfang_future_int this_);
extern bool  harfang_valid_future_int(harfang_future_int this_);
extern void harfang_wait_future_int(harfang_future_int this_);
extern void harfang_future_float_free(harfang_future_float);
extern float  harfang_get_future_float(harfang_future_float this_);
extern bool  harfang_valid_future_float(harfang_future_float this_);
extern void harfang_wait_future_float(harfang_future_float this_);
extern void harfang_future_u_int_free(harfang_future_u_int);
extern unsigned int harfang_get_future_u_int(harfang_future_u_int this_);
extern bool  harfang_valid_future_u_int(harfang_future_u_int this_);
extern void harfang_wait_future_u_int(harfang_future_u_int this_);
extern void harfang_future_size_free(harfang_future_size);
extern size_t  harfang_get_future_size(harfang_future_size this_);
extern bool  harfang_valid_future_size(harfang_future_size this_);
extern void harfang_wait_future_size(harfang_future_size this_);
extern void harfang_char_list_free(harfang_char_list);
extern void harfang_push_back_char_list(harfang_char_list this_ ,char  v);
extern size_t  harfang_size_char_list(harfang_char_list this_);
extern char  harfang_at_char_list(harfang_char_list this_ ,size_t  idx);
extern void harfang_int_list_free(harfang_int_list);
extern void harfang_push_back_int_list(harfang_int_list this_ ,int  v);
extern size_t  harfang_size_int_list(harfang_int_list this_);
extern int  harfang_at_int_list(harfang_int_list this_ ,size_t  idx);
extern void harfang_int8_t_list_free(harfang_int8_t_list);
extern void harfang_push_back_int8_t_list(harfang_int8_t_list this_ ,int8_t  v);
extern size_t  harfang_size_int8_t_list(harfang_int8_t_list this_);
extern int8_t  harfang_at_int8_t_list(harfang_int8_t_list this_ ,size_t  idx);
extern void harfang_int16_t_list_free(harfang_int16_t_list);
extern void harfang_push_back_int16_t_list(harfang_int16_t_list this_ ,int16_t  v);
extern size_t  harfang_size_int16_t_list(harfang_int16_t_list this_);
extern int16_t  harfang_at_int16_t_list(harfang_int16_t_list this_ ,size_t  idx);
extern void harfang_int32_t_list_free(harfang_int32_t_list);
extern void harfang_push_back_int32_t_list(harfang_int32_t_list this_ ,int32_t  v);
extern size_t  harfang_size_int32_t_list(harfang_int32_t_list this_);
extern int32_t  harfang_at_int32_t_list(harfang_int32_t_list this_ ,size_t  idx);
extern void harfang_int64_t_list_free(harfang_int64_t_list);
extern void harfang_push_back_int64_t_list(harfang_int64_t_list this_ ,int64_t  v);
extern size_t  harfang_size_int64_t_list(harfang_int64_t_list this_);
extern int64_t  harfang_at_int64_t_list(harfang_int64_t_list this_ ,size_t  idx);
extern void harfang_uint8_t_list_free(harfang_uint8_t_list);
extern void harfang_push_back_uint8_t_list(harfang_uint8_t_list this_ ,uint8_t  v);
extern size_t  harfang_size_uint8_t_list(harfang_uint8_t_list this_);
extern uint8_t  harfang_at_uint8_t_list(harfang_uint8_t_list this_ ,size_t  idx);
extern void harfang_uint16_t_list_free(harfang_uint16_t_list);
extern void harfang_push_back_uint16_t_list(harfang_uint16_t_list this_ ,uint16_t  v);
extern size_t  harfang_size_uint16_t_list(harfang_uint16_t_list this_);
extern uint16_t  harfang_at_uint16_t_list(harfang_uint16_t_list this_ ,size_t  idx);
extern void harfang_unsigned_int_list_free(harfang_unsigned_int_list);
extern void harfang_push_back_unsigned_int_list(harfang_unsigned_int_list this_ ,unsigned int v);
extern size_t  harfang_size_unsigned_int_list(harfang_unsigned_int_list this_);
extern unsigned int harfang_at_unsigned_int_list(harfang_unsigned_int_list this_ ,size_t  idx);
extern void harfang_uint64_t_list_free(harfang_uint64_t_list);
extern void harfang_push_back_uint64_t_list(harfang_uint64_t_list this_ ,uint64_t  v);
extern size_t  harfang_size_uint64_t_list(harfang_uint64_t_list this_);
extern uint64_t  harfang_at_uint64_t_list(harfang_uint64_t_list this_ ,size_t  idx);
extern void harfang_float_list_free(harfang_float_list);
extern void harfang_push_back_float_list(harfang_float_list this_ ,float  v);
extern size_t  harfang_size_float_list(harfang_float_list this_);
extern float  harfang_at_float_list(harfang_float_list this_ ,size_t  idx);
extern void harfang_double_list_free(harfang_double_list);
extern void harfang_push_back_double_list(harfang_double_list this_ ,double  v);
extern size_t  harfang_size_double_list(harfang_double_list this_);
extern double  harfang_at_double_list(harfang_double_list this_ ,size_t  idx);
extern void harfang_string_list_free(harfang_string_list);
extern void harfang_push_back_string_list(harfang_string_list this_ ,const char* v);
extern size_t  harfang_size_string_list(harfang_string_list this_);
extern const char* harfang_at_string_list(harfang_string_list this_ ,size_t  idx);
extern harfang_binary_data  harfang_constructor_binary_data();
extern harfang_binary_data  harfang_constructor_binary_data_with_data(const harfang_binary_data  data);
extern void harfang_binary_data_free(harfang_binary_data);
extern size_t  harfang_get_data_size_binary_data(harfang_binary_data this_);
extern size_t  harfang_get_cursor_binary_data(harfang_binary_data this_);
extern void harfang_set_cursor_binary_data(harfang_binary_data this_ ,size_t  position);
extern const char * harfang_get_cursor_ptr_binary_data(harfang_binary_data this_);
extern size_t  harfang_get_data_size_at_cursor_binary_data(harfang_binary_data this_);
extern void harfang_reset_binary_data(harfang_binary_data this_);
extern void harfang_commit_binary_data(harfang_binary_data this_ ,size_t  size);
extern void harfang_grow_binary_data(harfang_binary_data this_ ,size_t  size);
extern void harfang_skip_binary_data(harfang_binary_data this_ ,size_t  size);
extern void harfang_write_int8_binary_data(harfang_binary_data this_ ,const int8_t  v);
extern void harfang_write_int8s_binary_data(harfang_binary_data this_ ,const harfang_int8_t_list  vs);
extern void harfang_write_int16_binary_data(harfang_binary_data this_ ,const int16_t  v);
extern void harfang_write_int16s_binary_data(harfang_binary_data this_ ,const harfang_int16_t_list  vs);
extern void harfang_write_int32_binary_data(harfang_binary_data this_ ,const int32_t  v);
extern void harfang_write_int32s_binary_data(harfang_binary_data this_ ,const harfang_int32_t_list  vs);
extern void harfang_write_int64_binary_data(harfang_binary_data this_ ,const int64_t  v);
extern void harfang_write_int64s_binary_data(harfang_binary_data this_ ,const harfang_int64_t_list  vs);
extern void harfang_write_u_int8_binary_data(harfang_binary_data this_ ,const uint8_t  v);
extern void harfang_write_u_int8s_binary_data(harfang_binary_data this_ ,const harfang_uint8_t_list  vs);
extern void harfang_write_u_int16_binary_data(harfang_binary_data this_ ,const uint16_t  v);
extern void harfang_write_u_int16s_binary_data(harfang_binary_data this_ ,const harfang_uint16_t_list  vs);
extern void harfang_write_u_int32_binary_data(harfang_binary_data this_ ,unsigned int v);
extern void harfang_write_u_int32s_binary_data(harfang_binary_data this_ ,const harfang_unsigned_int_list  vs);
extern void harfang_write_u_int64_binary_data(harfang_binary_data this_ ,const uint64_t  v);
extern void harfang_write_u_int64s_binary_data(harfang_binary_data this_ ,const harfang_uint64_t_list  vs);
extern void harfang_write_float_binary_data(harfang_binary_data this_ ,const float  v);
extern void harfang_write_floats_binary_data(harfang_binary_data this_ ,const harfang_float_list  vs);
extern void harfang_write_double_binary_data(harfang_binary_data this_ ,const double  v);
extern void harfang_write_doubles_binary_data(harfang_binary_data this_ ,const harfang_double_list  vs);
extern void harfang_write_int8_at_binary_data(harfang_binary_data this_ ,const int8_t  v ,size_t  position);
extern void harfang_write_int16_at_binary_data(harfang_binary_data this_ ,const int16_t  v ,size_t  position);
extern void harfang_write_int32_at_binary_data(harfang_binary_data this_ ,const int32_t  v ,size_t  position);
extern void harfang_write_int64_at_binary_data(harfang_binary_data this_ ,const int64_t  v ,size_t  position);
extern void harfang_write_u_int8_at_binary_data(harfang_binary_data this_ ,const uint8_t  v ,size_t  position);
extern void harfang_write_u_int16_at_binary_data(harfang_binary_data this_ ,const uint16_t  v ,size_t  position);
extern void harfang_write_u_int32_at_binary_data(harfang_binary_data this_ ,unsigned int v ,size_t  position);
extern void harfang_write_u_int64_at_binary_data(harfang_binary_data this_ ,const uint64_t  v ,size_t  position);
extern void harfang_write_float_at_binary_data(harfang_binary_data this_ ,const float  v ,size_t  position);
extern void harfang_write_double_at_binary_data(harfang_binary_data this_ ,const double  v ,size_t  position);
extern void harfang_write_data_binary_data(harfang_binary_data this_ ,intptr_t  ptr ,size_t  size);
extern intptr_t  harfang_get_data_binary_data(harfang_binary_data this_);
extern void harfang_free_binary_data(harfang_binary_data this_);
extern void harfang_future_time_free(harfang_future_time);
extern int64_t  harfang_get_future_time(harfang_future_time this_);
extern bool  harfang_valid_future_time(harfang_future_time this_);
extern void harfang_wait_future_time(harfang_future_time this_);
extern harfang_vector3  harfang_vector3_get_zero();
extern harfang_vector3  harfang_vector3_get_one();
extern harfang_vector3  harfang_vector3_get_left();
extern harfang_vector3  harfang_vector3_get_right();
extern harfang_vector3  harfang_vector3_get_up();
extern harfang_vector3  harfang_vector3_get_down();
extern harfang_vector3  harfang_vector3_get_front();
extern harfang_vector3  harfang_vector3_get_back();
extern float  harfang_vector3_get_x(harfang_vector3 h);
extern void harfang_vector3_set_x(harfang_vector3 h, float  v);
extern float  harfang_vector3_get_y(harfang_vector3 h);
extern void harfang_vector3_set_y(harfang_vector3 h, float  v);
extern float  harfang_vector3_get_z(harfang_vector3 h);
extern void harfang_vector3_set_z(harfang_vector3 h, float  v);
extern harfang_vector3  harfang_constructor_vector3();
extern harfang_vector3  harfang_constructor_vector3_with_xyz(float  x ,float  y ,float  z);
extern harfang_vector3  harfang_constructor_vector3_with_v(const harfang_vector2  v);
extern harfang_vector3  harfang_constructor_vector3_with_int_vector2_v(const harfang_int_vector2  v);
extern harfang_vector3  harfang_constructor_vector3_with_vector3_v(const harfang_vector3  v);
extern harfang_vector3  harfang_constructor_vector3_with_vector4_v(const harfang_vector4  v);
extern void harfang_vector3_free(harfang_vector3);
extern harfang_vector3  harfang_add_vector3(harfang_vector3 this_ ,harfang_vector3  v);
extern harfang_vector3  harfang_add_vector3_with_k(harfang_vector3 this_ ,float  k);
extern harfang_vector3  harfang_sub_vector3(harfang_vector3 this_ ,harfang_vector3  v);
extern harfang_vector3  harfang_sub_vector3_with_k(harfang_vector3 this_ ,float  k);
extern harfang_vector3  harfang_div_vector3(harfang_vector3 this_ ,harfang_vector3  v);
extern harfang_vector3  harfang_div_vector3_with_k(harfang_vector3 this_ ,float  k);
extern harfang_vector3  harfang_mul_vector3(harfang_vector3 this_ ,const harfang_vector3  v);
extern harfang_vector3  harfang_mul_vector3_with_k(harfang_vector3 this_ ,float  k);
extern harfang_vector3  harfang_mul_vector3_with_m(harfang_vector3 this_ ,const harfang_matrix3  m);
extern harfang_vector3  harfang_mul_vector3_with_matrix4_m(harfang_vector3 this_ ,const harfang_matrix4  m);
extern harfang_vector3  harfang_mul_vector3_with_matrix44_m(harfang_vector3 this_ ,const harfang_matrix44  m);
extern void harfang_inplace_add_vector3(harfang_vector3 this_ ,harfang_vector3  v);
extern void harfang_inplace_add_vector3_with_k(harfang_vector3 this_ ,float  k);
extern void harfang_inplace_sub_vector3(harfang_vector3 this_ ,harfang_vector3  v);
extern void harfang_inplace_sub_vector3_with_k(harfang_vector3 this_ ,float  k);
extern void harfang_inplace_mul_vector3(harfang_vector3 this_ ,harfang_vector3  v);
extern void harfang_inplace_mul_vector3_with_k(harfang_vector3 this_ ,float  k);
extern void harfang_inplace_div_vector3(harfang_vector3 this_ ,harfang_vector3  v);
extern void harfang_inplace_div_vector3_with_k(harfang_vector3 this_ ,float  k);
extern bool  harfang_eq_vector3(harfang_vector3 this_ ,const harfang_vector3  v);
extern bool  harfang_ne_vector3(harfang_vector3 this_ ,const harfang_vector3  v);
extern void harfang_reverse_vector3(harfang_vector3 this_);
extern void harfang_inverse_vector3(harfang_vector3 this_);
extern void harfang_normalize_vector3(harfang_vector3 this_);
extern harfang_vector3  harfang_normalized_vector3(harfang_vector3 this_);
extern harfang_vector3  harfang_clamped_vector3(harfang_vector3 this_ ,float  min ,float  max);
extern harfang_vector3  harfang_clamped_vector3_with_min_max(harfang_vector3 this_ ,const harfang_vector3  min ,const harfang_vector3  max);
extern harfang_vector3  harfang_clamped_magnitude_vector3(harfang_vector3 this_ ,float  min ,float  max);
extern harfang_vector3  harfang_reversed_vector3(harfang_vector3 this_);
extern harfang_vector3  harfang_inversed_vector3(harfang_vector3 this_);
extern harfang_vector3  harfang_abs_vector3(harfang_vector3 this_);
extern harfang_vector3  harfang_sign_vector3(harfang_vector3 this_);
extern harfang_vector3  harfang_maximum_vector3(harfang_vector3 this_ ,const harfang_vector3  left ,const harfang_vector3  right);
extern harfang_vector3  harfang_minimum_vector3(harfang_vector3 this_ ,const harfang_vector3  left ,const harfang_vector3  right);
extern float  harfang_len2_vector3(harfang_vector3 this_);
extern float  harfang_len_vector3(harfang_vector3 this_);
extern harfang_vector3  harfang_floor_vector3(harfang_vector3 this_);
extern harfang_vector3  harfang_ceil_vector3(harfang_vector3 this_);
extern void harfang_set_vector3(harfang_vector3 this_ ,float  x ,float  y ,float  z);
extern float  harfang_vector4_get_x(harfang_vector4 h);
extern void harfang_vector4_set_x(harfang_vector4 h, float  v);
extern float  harfang_vector4_get_y(harfang_vector4 h);
extern void harfang_vector4_set_y(harfang_vector4 h, float  v);
extern float  harfang_vector4_get_z(harfang_vector4 h);
extern void harfang_vector4_set_z(harfang_vector4 h, float  v);
extern float  harfang_vector4_get_w(harfang_vector4 h);
extern void harfang_vector4_set_w(harfang_vector4 h, float  v);
extern harfang_vector4  harfang_constructor_vector4();
extern harfang_vector4  harfang_constructor_vector4_with_xyzw(float  x ,float  y ,float  z ,float  w);
extern harfang_vector4  harfang_constructor_vector4_with_v(const harfang_vector2  v);
extern harfang_vector4  harfang_constructor_vector4_with_int_vector2_v(const harfang_int_vector2  v);
extern harfang_vector4  harfang_constructor_vector4_with_vector3_v(const harfang_vector3  v);
extern harfang_vector4  harfang_constructor_vector4_with_vector4_v(const harfang_vector4  v);
extern void harfang_vector4_free(harfang_vector4);
extern harfang_vector4  harfang_add_vector4(harfang_vector4 this_ ,harfang_vector4  v);
extern harfang_vector4  harfang_add_vector4_with_k(harfang_vector4 this_ ,float  k);
extern harfang_vector4  harfang_sub_vector4(harfang_vector4 this_ ,harfang_vector4  v);
extern harfang_vector4  harfang_sub_vector4_with_k(harfang_vector4 this_ ,float  k);
extern harfang_vector4  harfang_div_vector4(harfang_vector4 this_ ,harfang_vector4  v);
extern harfang_vector4  harfang_div_vector4_with_k(harfang_vector4 this_ ,float  k);
extern harfang_vector4  harfang_mul_vector4(harfang_vector4 this_ ,harfang_vector4  v);
extern harfang_vector4  harfang_mul_vector4_with_k(harfang_vector4 this_ ,float  k);
extern harfang_vector4  harfang_mul_vector4_with_m(harfang_vector4 this_ ,const harfang_matrix4  m);
extern harfang_vector4  harfang_mul_vector4_with_matrix44_m(harfang_vector4 this_ ,const harfang_matrix44  m);
extern void harfang_inplace_add_vector4(harfang_vector4 this_ ,harfang_vector4  v);
extern void harfang_inplace_add_vector4_with_k(harfang_vector4 this_ ,float  k);
extern void harfang_inplace_sub_vector4(harfang_vector4 this_ ,harfang_vector4  v);
extern void harfang_inplace_sub_vector4_with_k(harfang_vector4 this_ ,float  k);
extern void harfang_inplace_mul_vector4(harfang_vector4 this_ ,harfang_vector4  v);
extern void harfang_inplace_mul_vector4_with_k(harfang_vector4 this_ ,float  k);
extern void harfang_inplace_div_vector4(harfang_vector4 this_ ,harfang_vector4  v);
extern void harfang_inplace_div_vector4_with_k(harfang_vector4 this_ ,float  k);
extern harfang_vector4  harfang_abs_vector4(harfang_vector4 this_);
extern harfang_vector4  harfang_normalized_vector4(harfang_vector4 this_);
extern void harfang_set_vector4(harfang_vector4 this_ ,float  x ,float  y ,float  z);
extern void harfang_set_vector4_with_w(harfang_vector4 this_ ,float  x ,float  y ,float  z ,float  w);
extern harfang_matrix3  harfang_matrix3_get_zero();
extern harfang_matrix3  harfang_matrix3_get_identity();
extern harfang_matrix3  harfang_constructor_matrix3();
extern harfang_matrix3  harfang_constructor_matrix3_with_m(const harfang_matrix4  m);
extern harfang_matrix3  harfang_constructor_matrix3_with_xyz(const harfang_vector3  x ,const harfang_vector3  y ,const harfang_vector3  z);
extern void harfang_matrix3_free(harfang_matrix3);
extern harfang_matrix3  harfang_add_matrix3(harfang_matrix3 this_ ,harfang_matrix3  m);
extern harfang_matrix3  harfang_sub_matrix3(harfang_matrix3 this_ ,harfang_matrix3  m);
extern harfang_matrix3  harfang_mul_matrix3(harfang_matrix3 this_ ,const float  v);
extern harfang_vector2  harfang_mul_matrix3_with_v(harfang_matrix3 this_ ,const harfang_vector2  v);
extern harfang_vector3  harfang_mul_matrix3_with_vector3_v(harfang_matrix3 this_ ,const harfang_vector3  v);
extern harfang_vector4  harfang_mul_matrix3_with_vector4_v(harfang_matrix3 this_ ,const harfang_vector4  v);
extern harfang_matrix3  harfang_mul_matrix3_with_m(harfang_matrix3 this_ ,const harfang_matrix3  m);
extern void harfang_inplace_add_matrix3(harfang_matrix3 this_ ,const harfang_matrix3  m);
extern void harfang_inplace_sub_matrix3(harfang_matrix3 this_ ,const harfang_matrix3  m);
extern void harfang_inplace_mul_matrix3(harfang_matrix3 this_ ,const float  k);
extern void harfang_inplace_mul_matrix3_with_m(harfang_matrix3 this_ ,const harfang_matrix3  m);
extern bool  harfang_eq_matrix3(harfang_matrix3 this_ ,const harfang_matrix3  m);
extern bool  harfang_ne_matrix3(harfang_matrix3 this_ ,const harfang_matrix3  m);
extern harfang_matrix3  harfang_vector_matrix_matrix3(harfang_matrix3 this_ ,const harfang_vector3  V);
extern harfang_matrix3  harfang_translation_matrix_matrix3(harfang_matrix3 this_ ,const harfang_vector2  T);
extern harfang_matrix3  harfang_translation_matrix_matrix3_with_t(harfang_matrix3 this_ ,const harfang_vector3  T);
extern harfang_matrix3  harfang_scale_matrix_matrix3(harfang_matrix3 this_ ,const harfang_vector2  S);
extern harfang_matrix3  harfang_scale_matrix_matrix3_with_s(harfang_matrix3 this_ ,const harfang_vector3  S);
extern harfang_matrix3  harfang_cross_product_matrix_matrix3(harfang_matrix3 this_ ,const harfang_vector3  V);
extern harfang_matrix3  harfang_rotation_matrix_x_axis_matrix3(harfang_matrix3 this_ ,float  angle);
extern harfang_matrix3  harfang_rotation_matrix_y_axis_matrix3(harfang_matrix3 this_ ,float  angle);
extern harfang_matrix3  harfang_rotation_matrix_z_axis_matrix3(harfang_matrix3 this_ ,float  angle);
extern harfang_matrix3  harfang_rotation_matrix2_d_matrix3(harfang_matrix3 this_ ,float  angle ,const harfang_vector2  pivot);
extern harfang_matrix3  harfang_from_euler_matrix3_with_xyz(harfang_matrix3 this_ ,float  x ,float  y ,float  z);
extern harfang_matrix3  harfang_from_euler_matrix3_with_xyz_rotation_order(harfang_matrix3 this_ ,float  x ,float  y ,float  z ,uint8_t rotation_order);
extern harfang_matrix3  harfang_from_euler_matrix3(harfang_matrix3 this_ ,const harfang_vector3  euler);
extern harfang_matrix3  harfang_from_euler_matrix3_with_rotation_order(harfang_matrix3 this_ ,const harfang_vector3  euler ,uint8_t rotation_order);
extern harfang_matrix3  harfang_look_at_matrix3(harfang_matrix3 this_ ,const harfang_vector3  front);
extern harfang_matrix3  harfang_look_at_matrix3_with_up(harfang_matrix3 this_ ,const harfang_vector3  front ,const harfang_vector3  up);
extern float  harfang_det_matrix3(harfang_matrix3 this_);
extern bool  harfang_inverse_matrix3(harfang_matrix3 this_ ,harfang_matrix3  I);
extern harfang_matrix3  harfang_transposed_matrix3(harfang_matrix3 this_);
extern harfang_vector3  harfang_get_row_matrix3(harfang_matrix3 this_ ,unsigned int n);
extern harfang_vector3  harfang_get_column_matrix3(harfang_matrix3 this_ ,unsigned int n);
extern void harfang_set_row_matrix3(harfang_matrix3 this_ ,unsigned int n ,const harfang_vector3  row);
extern void harfang_set_column_matrix3(harfang_matrix3 this_ ,unsigned int n ,const harfang_vector3  column);
extern harfang_vector3  harfang_get_x_matrix3(harfang_matrix3 this_);
extern harfang_vector3  harfang_get_y_matrix3(harfang_matrix3 this_);
extern harfang_vector3  harfang_get_z_matrix3(harfang_matrix3 this_);
extern harfang_vector3  harfang_get_translation_matrix3(harfang_matrix3 this_);
extern harfang_vector3  harfang_get_scale_matrix3(harfang_matrix3 this_);
extern void harfang_set_x_matrix3(harfang_matrix3 this_ ,const harfang_vector3  X);
extern void harfang_set_y_matrix3(harfang_matrix3 this_ ,const harfang_vector3  Y);
extern void harfang_set_z_matrix3(harfang_matrix3 this_ ,const harfang_vector3  Z);
extern void harfang_set_translation_matrix3(harfang_matrix3 this_ ,const harfang_vector3  T);
extern void harfang_set_translation_matrix3_with_t(harfang_matrix3 this_ ,const harfang_vector2  T);
extern void harfang_set_scale_matrix3(harfang_matrix3 this_ ,const harfang_vector3  S);
extern void harfang_set_matrix3(harfang_matrix3 this_ ,const harfang_vector3  X ,const harfang_vector3  Y ,const harfang_vector3  Z);
extern harfang_matrix3  harfang_normalized_matrix3(harfang_matrix3 this_);
extern harfang_matrix3  harfang_orthonormalized_matrix3(harfang_matrix3 this_);
extern harfang_vector3  harfang_to_euler_matrix3(harfang_matrix3 this_);
extern harfang_vector3  harfang_to_euler_matrix3_with_rotation_order(harfang_matrix3 this_ ,uint8_t rotation_order);
extern harfang_matrix4  harfang_matrix4_get_zero();
extern harfang_matrix4  harfang_matrix4_get_identity();
extern harfang_matrix4  harfang_constructor_matrix4();
extern harfang_matrix4  harfang_constructor_matrix4_with_m(const harfang_matrix3  m);
extern void harfang_matrix4_free(harfang_matrix4);
extern harfang_matrix4  harfang_add_matrix4(harfang_matrix4 this_ ,harfang_matrix4  m);
extern harfang_matrix4  harfang_sub_matrix4(harfang_matrix4 this_ ,harfang_matrix4  m);
extern harfang_matrix4  harfang_mul_matrix4(harfang_matrix4 this_ ,const float  v);
extern harfang_matrix4  harfang_mul_matrix4_with_m(harfang_matrix4 this_ ,const harfang_matrix4  m);
extern harfang_vector3  harfang_mul_matrix4_with_v(harfang_matrix4 this_ ,const harfang_vector3  v);
extern harfang_vector4  harfang_mul_matrix4_with_vector4_v(harfang_matrix4 this_ ,const harfang_vector4  v);
extern harfang_matrix44  harfang_mul_matrix4_with_matrix44_m(harfang_matrix4 this_ ,const harfang_matrix44  m);
extern bool  harfang_eq_matrix4(harfang_matrix4 this_ ,const harfang_matrix4  m);
extern bool  harfang_ne_matrix4(harfang_matrix4 this_ ,const harfang_matrix4  m);
extern harfang_matrix4  harfang_lerp_as_orthonormal_base_matrix4(harfang_matrix4 this_ ,const harfang_matrix4  from ,const harfang_matrix4  to ,float  k);
extern harfang_matrix4  harfang_lerp_as_orthonormal_base_matrix4_with_fast(harfang_matrix4 this_ ,const harfang_matrix4  from ,const harfang_matrix4  to ,float  k ,bool  fast);
extern harfang_matrix4  harfang_translation_matrix_matrix4(harfang_matrix4 this_ ,const harfang_vector3  t);
extern harfang_matrix4  harfang_rotation_matrix_matrix4(harfang_matrix4 this_ ,const harfang_vector3  euler);
extern harfang_matrix4  harfang_rotation_matrix_matrix4_with_order(harfang_matrix4 this_ ,const harfang_vector3  euler ,uint8_t order);
extern harfang_matrix4  harfang_scale_matrix_matrix4(harfang_matrix4 this_ ,const harfang_vector3  scale);
extern harfang_matrix4  harfang_scale_matrix_matrix4_with_scale(harfang_matrix4 this_ ,float  scale);
extern harfang_matrix4  harfang_transformation_matrix_matrix4(harfang_matrix4 this_ ,const harfang_vector3  position ,const harfang_vector3  rotation);
extern harfang_matrix4  harfang_transformation_matrix_matrix4_with_euler_scale(harfang_matrix4 this_ ,const harfang_vector3  euler ,const harfang_vector3  rotation ,const harfang_vector3  scale);
extern harfang_matrix4  harfang_transformation_matrix_matrix4_with_rotation(harfang_matrix4 this_ ,const harfang_vector3  position ,const harfang_matrix3  rotation);
extern harfang_matrix4  harfang_transformation_matrix_matrix4_with_euler_rotation_scale(harfang_matrix4 this_ ,const harfang_vector3  euler ,const harfang_matrix3  rotation ,const harfang_vector3  scale);
extern harfang_matrix4  harfang_look_toward_matrix4(harfang_matrix4 this_ ,const harfang_vector3  position ,const harfang_vector3  direction);
extern harfang_matrix4  harfang_look_toward_matrix4_with_scale(harfang_matrix4 this_ ,const harfang_vector3  position ,const harfang_vector3  direction ,const harfang_vector3  scale);
extern harfang_matrix4  harfang_look_toward_up_matrix4(harfang_matrix4 this_ ,const harfang_vector3  position ,const harfang_vector3  direction ,const harfang_vector3  up);
extern harfang_matrix4  harfang_look_toward_up_matrix4_with_scale(harfang_matrix4 this_ ,const harfang_vector3  position ,const harfang_vector3  direction ,const harfang_vector3  up ,const harfang_vector3  scale);
extern harfang_vector3  harfang_get_row_matrix4(harfang_matrix4 this_ ,unsigned int n);
extern harfang_vector4  harfang_get_column_matrix4(harfang_matrix4 this_ ,unsigned int n);
extern void harfang_set_row_matrix4(harfang_matrix4 this_ ,unsigned int n ,const harfang_vector3  v);
extern void harfang_set_column_matrix4(harfang_matrix4 this_ ,unsigned int n ,const harfang_vector4  v);
extern harfang_vector3  harfang_get_x_matrix4(harfang_matrix4 this_);
extern harfang_vector3  harfang_get_y_matrix4(harfang_matrix4 this_);
extern harfang_vector3  harfang_get_z_matrix4(harfang_matrix4 this_);
extern harfang_vector3  harfang_get_t_matrix4(harfang_matrix4 this_);
extern harfang_vector3  harfang_get_translation_matrix4(harfang_matrix4 this_);
extern harfang_vector3  harfang_get_rotation_matrix4(harfang_matrix4 this_);
extern harfang_vector3  harfang_get_rotation_matrix4_with_rotation_order(harfang_matrix4 this_ ,uint8_t rotation_order);
extern harfang_matrix3  harfang_get_rotation_matrix_matrix4(harfang_matrix4 this_);
extern harfang_vector3  harfang_get_scale_matrix4(harfang_matrix4 this_);
extern void harfang_set_x_matrix4(harfang_matrix4 this_ ,const harfang_vector3  X);
extern void harfang_set_y_matrix4(harfang_matrix4 this_ ,const harfang_vector3  Y);
extern void harfang_set_z_matrix4(harfang_matrix4 this_ ,const harfang_vector3  Z);
extern void harfang_set_translation_matrix4(harfang_matrix4 this_ ,const harfang_vector3  T);
extern void harfang_set_scale_matrix4(harfang_matrix4 this_ ,const harfang_vector3  scale);
extern bool  harfang_inverse_matrix4(harfang_matrix4 this_ ,harfang_matrix4  out);
extern harfang_matrix4  harfang_inversed_fast_matrix4(harfang_matrix4 this_);
extern harfang_matrix4  harfang_orthonormalized_matrix4(harfang_matrix4 this_);
extern void harfang_decompose_matrix4(harfang_matrix4 this_ ,harfang_vector3  position ,harfang_vector3  scale ,harfang_vector3  rotation);
extern void harfang_decompose_matrix4_with_rotation_order(harfang_matrix4 this_ ,harfang_vector3  position ,harfang_vector3  scale ,harfang_vector3  rotation ,uint8_t rotation_order);
extern harfang_matrix4  harfang_look_at_matrix4(harfang_matrix4 this_ ,const harfang_vector3  at);
extern harfang_matrix4  harfang_look_at_matrix4_with_up(harfang_matrix4 this_ ,const harfang_vector3  at ,const harfang_vector3  up);
extern harfang_matrix44  harfang_matrix44_get_zero();
extern harfang_matrix44  harfang_matrix44_get_identity();
extern harfang_matrix44  harfang_constructor_matrix44();
extern harfang_matrix44  harfang_constructor_matrix44_with_m00_m10_m20_m30_m01_m11_m21_m31_m02_m12_m22_m32_m03_m13_m23_m33(float  m00 ,float  m10 ,float  m20 ,float  m30 ,float  m01 ,float  m11 ,float  m21 ,float  m31 ,float  m02 ,float  m12 ,float  m22 ,float  m32 ,float  m03 ,float  m13 ,float  m23 ,float  m33);
extern void harfang_matrix44_free(harfang_matrix44);
extern harfang_matrix44  harfang_mul_matrix44(harfang_matrix44 this_ ,const harfang_matrix4  m);
extern harfang_matrix44  harfang_mul_matrix44_with_m(harfang_matrix44 this_ ,const harfang_matrix44  m);
extern harfang_matrix44  harfang_inverse_matrix44(harfang_matrix44 this_ ,bool * result);
extern harfang_vector4  harfang_get_row_matrix44(harfang_matrix44 this_ ,unsigned int idx);
extern harfang_vector4  harfang_get_column_matrix44(harfang_matrix44 this_ ,unsigned int idx);
extern void harfang_set_row_matrix44(harfang_matrix44 this_ ,unsigned int idx ,const harfang_vector4  v);
extern void harfang_set_column_matrix44(harfang_matrix44 this_ ,unsigned int idx ,const harfang_vector4  v);
extern float  harfang_quaternion_get_x(harfang_quaternion h);
extern void harfang_quaternion_set_x(harfang_quaternion h, float  v);
extern float  harfang_quaternion_get_y(harfang_quaternion h);
extern void harfang_quaternion_set_y(harfang_quaternion h, float  v);
extern float  harfang_quaternion_get_z(harfang_quaternion h);
extern void harfang_quaternion_set_z(harfang_quaternion h, float  v);
extern float  harfang_quaternion_get_w(harfang_quaternion h);
extern void harfang_quaternion_set_w(harfang_quaternion h, float  v);
extern harfang_quaternion  harfang_constructor_quaternion();
extern harfang_quaternion  harfang_constructor_quaternion_with_xyzw(float  x ,float  y ,float  z ,float  w);
extern harfang_quaternion  harfang_constructor_quaternion_with_q(const harfang_quaternion  q);
extern void harfang_quaternion_free(harfang_quaternion);
extern harfang_quaternion  harfang_add_quaternion(harfang_quaternion this_ ,float  v);
extern harfang_quaternion  harfang_add_quaternion_with_q(harfang_quaternion this_ ,harfang_quaternion  q);
extern harfang_quaternion  harfang_sub_quaternion(harfang_quaternion this_ ,float  v);
extern harfang_quaternion  harfang_sub_quaternion_with_q(harfang_quaternion this_ ,harfang_quaternion  q);
extern harfang_quaternion  harfang_mul_quaternion(harfang_quaternion this_ ,float  v);
extern harfang_quaternion  harfang_mul_quaternion_with_q(harfang_quaternion this_ ,harfang_quaternion  q);
extern harfang_quaternion  harfang_div_quaternion(harfang_quaternion this_ ,float  v);
extern void harfang_inplace_add_quaternion(harfang_quaternion this_ ,float  v);
extern void harfang_inplace_add_quaternion_with_q(harfang_quaternion this_ ,const harfang_quaternion  q);
extern void harfang_inplace_sub_quaternion(harfang_quaternion this_ ,float  v);
extern void harfang_inplace_sub_quaternion_with_q(harfang_quaternion this_ ,const harfang_quaternion  q);
extern void harfang_inplace_mul_quaternion(harfang_quaternion this_ ,float  v);
extern void harfang_inplace_mul_quaternion_with_q(harfang_quaternion this_ ,const harfang_quaternion  q);
extern void harfang_inplace_div_quaternion(harfang_quaternion this_ ,float  v);
extern float  harfang_distance_quaternion(harfang_quaternion this_ ,const harfang_quaternion  a ,const harfang_quaternion  b);
extern harfang_quaternion  harfang_slerp_quaternion(harfang_quaternion this_ ,float  t ,const harfang_quaternion  a ,const harfang_quaternion  b);
extern harfang_quaternion  harfang_from_euler_quaternion(harfang_quaternion this_ ,float  x ,float  y ,float  z);
extern harfang_quaternion  harfang_from_euler_quaternion_with_rotation_order(harfang_quaternion this_ ,float  x ,float  y ,float  z ,uint8_t rotation_order);
extern harfang_quaternion  harfang_look_at_quaternion(harfang_quaternion this_ ,const harfang_vector3  at);
extern harfang_quaternion  harfang_from_matrix3_quaternion(harfang_quaternion this_ ,const harfang_matrix3  m);
extern harfang_quaternion  harfang_from_axis_angle_quaternion(harfang_quaternion this_ ,float  angle ,const harfang_vector3  axis);
extern harfang_quaternion  harfang_inversed_quaternion(harfang_quaternion this_);
extern harfang_quaternion  harfang_normalized_quaternion(harfang_quaternion this_);
extern harfang_matrix3  harfang_to_matrix3_quaternion(harfang_quaternion this_);
extern harfang_vector3  harfang_to_euler_quaternion(harfang_quaternion this_);
extern harfang_vector3  harfang_to_euler_quaternion_with_rotation_order(harfang_quaternion this_ ,uint8_t rotation_order);
extern harfang_vector3  harfang_min_max_get_mn(harfang_min_max h);
extern void harfang_min_max_set_mn(harfang_min_max h, harfang_vector3  v);
extern harfang_vector3  harfang_min_max_get_mx(harfang_min_max h);
extern void harfang_min_max_set_mx(harfang_min_max h, harfang_vector3  v);
extern harfang_min_max  harfang_constructor_min_max();
extern harfang_min_max  harfang_constructor_min_max_with_min_max(const harfang_vector3  min ,const harfang_vector3  max);
extern void harfang_min_max_free(harfang_min_max);
extern harfang_min_max  harfang_mul_min_max(harfang_min_max this_ ,const harfang_matrix4  m);
extern bool  harfang_eq_min_max(harfang_min_max this_ ,const harfang_min_max  minmax);
extern bool  harfang_ne_min_max(harfang_min_max this_ ,const harfang_min_max  minmax);
extern float  harfang_get_area_min_max(harfang_min_max this_);
extern harfang_vector3  harfang_get_center_min_max(harfang_min_max this_);
extern harfang_vector2  harfang_vector2_get_zero();
extern harfang_vector2  harfang_vector2_get_one();
extern float  harfang_vector2_get_x(harfang_vector2 h);
extern void harfang_vector2_set_x(harfang_vector2 h, float  v);
extern float  harfang_vector2_get_y(harfang_vector2 h);
extern void harfang_vector2_set_y(harfang_vector2 h, float  v);
extern harfang_vector2  harfang_constructor_vector2();
extern harfang_vector2  harfang_constructor_vector2_with_xy(float  x ,float  y);
extern harfang_vector2  harfang_constructor_vector2_with_v(const harfang_vector2  v);
extern harfang_vector2  harfang_constructor_vector2_with_vector3_v(const harfang_vector3  v);
extern harfang_vector2  harfang_constructor_vector2_with_vector4_v(const harfang_vector4  v);
extern void harfang_vector2_free(harfang_vector2);
extern harfang_vector2  harfang_add_vector2(harfang_vector2 this_ ,const harfang_vector2  v);
extern harfang_vector2  harfang_add_vector2_with_k(harfang_vector2 this_ ,const float  k);
extern harfang_vector2  harfang_sub_vector2(harfang_vector2 this_ ,const harfang_vector2  v);
extern harfang_vector2  harfang_sub_vector2_with_k(harfang_vector2 this_ ,const float  k);
extern harfang_vector2  harfang_div_vector2(harfang_vector2 this_ ,const harfang_vector2  v);
extern harfang_vector2  harfang_div_vector2_with_k(harfang_vector2 this_ ,const float  k);
extern harfang_vector2  harfang_mul_vector2(harfang_vector2 this_ ,const harfang_vector2  v);
extern harfang_vector2  harfang_mul_vector2_with_k(harfang_vector2 this_ ,const float  k);
extern harfang_vector2  harfang_mul_vector2_with_m(harfang_vector2 this_ ,const harfang_matrix3  m);
extern void harfang_inplace_add_vector2(harfang_vector2 this_ ,const harfang_vector2  v);
extern void harfang_inplace_add_vector2_with_k(harfang_vector2 this_ ,const float  k);
extern void harfang_inplace_sub_vector2(harfang_vector2 this_ ,const harfang_vector2  v);
extern void harfang_inplace_sub_vector2_with_k(harfang_vector2 this_ ,const float  k);
extern void harfang_inplace_mul_vector2(harfang_vector2 this_ ,const harfang_vector2  v);
extern void harfang_inplace_mul_vector2_with_k(harfang_vector2 this_ ,const float  k);
extern void harfang_inplace_div_vector2(harfang_vector2 this_ ,const harfang_vector2  v);
extern void harfang_inplace_div_vector2_with_k(harfang_vector2 this_ ,const float  k);
extern float  harfang_dist2_vector2(harfang_vector2 this_ ,const harfang_vector2  a ,const harfang_vector2  b);
extern float  harfang_dist_vector2(harfang_vector2 this_ ,const harfang_vector2  a ,const harfang_vector2  b);
extern harfang_vector2  harfang_min_vector2(harfang_vector2 this_ ,const harfang_vector2  v);
extern harfang_vector2  harfang_max_vector2(harfang_vector2 this_ ,const harfang_vector2  v);
extern float  harfang_len2_vector2(harfang_vector2 this_);
extern float  harfang_len_vector2(harfang_vector2 this_);
extern float  harfang_dot_vector2(harfang_vector2 this_ ,const harfang_vector2  v);
extern void harfang_normalize_vector2(harfang_vector2 this_);
extern harfang_vector2  harfang_normalized_vector2(harfang_vector2 this_);
extern harfang_vector2  harfang_reversed_vector2(harfang_vector2 this_);
extern void harfang_set_vector2(harfang_vector2 this_ ,float  x ,float  y);
extern harfang_int_vector2  harfang_int_vector2_get_zero();
extern harfang_int_vector2  harfang_int_vector2_get_one();
extern int  harfang_int_vector2_get_x(harfang_int_vector2 h);
extern void harfang_int_vector2_set_x(harfang_int_vector2 h, int  v);
extern int  harfang_int_vector2_get_y(harfang_int_vector2 h);
extern void harfang_int_vector2_set_y(harfang_int_vector2 h, int  v);
extern harfang_int_vector2  harfang_constructor_int_vector2();
extern harfang_int_vector2  harfang_constructor_int_vector2_with_xy(int  x ,int  y);
extern harfang_int_vector2  harfang_constructor_int_vector2_with_v(const harfang_int_vector2  v);
extern harfang_int_vector2  harfang_constructor_int_vector2_with_vector3_v(const harfang_vector3  v);
extern harfang_int_vector2  harfang_constructor_int_vector2_with_vector4_v(const harfang_vector4  v);
extern void harfang_int_vector2_free(harfang_int_vector2);
extern harfang_int_vector2  harfang_add_int_vector2(harfang_int_vector2 this_ ,const harfang_int_vector2  v);
extern harfang_int_vector2  harfang_add_int_vector2_with_k(harfang_int_vector2 this_ ,const int  k);
extern harfang_int_vector2  harfang_sub_int_vector2(harfang_int_vector2 this_ ,const harfang_int_vector2  v);
extern harfang_int_vector2  harfang_sub_int_vector2_with_k(harfang_int_vector2 this_ ,const int  k);
extern harfang_int_vector2  harfang_div_int_vector2(harfang_int_vector2 this_ ,const harfang_int_vector2  v);
extern harfang_int_vector2  harfang_div_int_vector2_with_k(harfang_int_vector2 this_ ,const int  k);
extern harfang_int_vector2  harfang_mul_int_vector2(harfang_int_vector2 this_ ,const harfang_int_vector2  v);
extern harfang_int_vector2  harfang_mul_int_vector2_with_k(harfang_int_vector2 this_ ,const int  k);
extern harfang_int_vector2  harfang_mul_int_vector2_with_m(harfang_int_vector2 this_ ,const harfang_matrix3  m);
extern void harfang_inplace_add_int_vector2(harfang_int_vector2 this_ ,const harfang_int_vector2  v);
extern void harfang_inplace_add_int_vector2_with_k(harfang_int_vector2 this_ ,const int  k);
extern void harfang_inplace_sub_int_vector2(harfang_int_vector2 this_ ,const harfang_int_vector2  v);
extern void harfang_inplace_sub_int_vector2_with_k(harfang_int_vector2 this_ ,const int  k);
extern void harfang_inplace_mul_int_vector2(harfang_int_vector2 this_ ,const harfang_int_vector2  v);
extern void harfang_inplace_mul_int_vector2_with_k(harfang_int_vector2 this_ ,const int  k);
extern void harfang_inplace_div_int_vector2(harfang_int_vector2 this_ ,const harfang_int_vector2  v);
extern void harfang_inplace_div_int_vector2_with_k(harfang_int_vector2 this_ ,const int  k);
extern int  harfang_dist2_int_vector2(harfang_int_vector2 this_ ,const harfang_int_vector2  a ,const harfang_int_vector2  b);
extern int  harfang_dist_int_vector2(harfang_int_vector2 this_ ,const harfang_int_vector2  a ,const harfang_int_vector2  b);
extern harfang_int_vector2  harfang_min_int_vector2(harfang_int_vector2 this_ ,const harfang_int_vector2  v);
extern harfang_int_vector2  harfang_max_int_vector2(harfang_int_vector2 this_ ,const harfang_int_vector2  v);
extern int  harfang_len2_int_vector2(harfang_int_vector2 this_);
extern int  harfang_len_int_vector2(harfang_int_vector2 this_);
extern int  harfang_dot_int_vector2(harfang_int_vector2 this_ ,const harfang_int_vector2  v);
extern void harfang_normalize_int_vector2(harfang_int_vector2 this_);
extern harfang_int_vector2  harfang_normalized_int_vector2(harfang_int_vector2 this_);
extern harfang_int_vector2  harfang_reversed_int_vector2(harfang_int_vector2 this_);
extern void harfang_set_int_vector2(harfang_int_vector2 this_ ,int  x ,int  y);
extern float  harfang_rect_get_sx(harfang_rect h);
extern void harfang_rect_set_sx(harfang_rect h, float  v);
extern float  harfang_rect_get_sy(harfang_rect h);
extern void harfang_rect_set_sy(harfang_rect h, float  v);
extern float  harfang_rect_get_ex(harfang_rect h);
extern void harfang_rect_set_ex(harfang_rect h, float  v);
extern float  harfang_rect_get_ey(harfang_rect h);
extern void harfang_rect_set_ey(harfang_rect h, float  v);
extern harfang_rect  harfang_constructor_rect();
extern harfang_rect  harfang_constructor_rect_with_usx_usy(float  usx ,float  usy);
extern harfang_rect  harfang_constructor_rect_with_usx_usy_uex_uey(float  usx ,float  usy ,float  uex ,float  uey);
extern harfang_rect  harfang_constructor_rect_with_rect(const harfang_rect  rect);
extern void harfang_rect_free(harfang_rect);
extern harfang_rect  harfang_from_width_height_rect(harfang_rect this_ ,float  x ,float  y ,float  w ,float  h);
extern float  harfang_get_x_rect(harfang_rect this_);
extern float  harfang_get_y_rect(harfang_rect this_);
extern void harfang_set_x_rect(harfang_rect this_ ,float  x);
extern void harfang_set_y_rect(harfang_rect this_ ,float  y);
extern float  harfang_get_width_rect(harfang_rect this_);
extern float  harfang_get_height_rect(harfang_rect this_);
extern void harfang_set_width_rect(harfang_rect this_ ,float  width);
extern void harfang_set_height_rect(harfang_rect this_ ,float  height);
extern harfang_vector2  harfang_get_size_rect(harfang_rect this_);
extern bool  harfang_inside_rect(harfang_rect this_ ,float  x ,float  y);
extern bool  harfang_fits_inside_rect(harfang_rect this_ ,const harfang_rect  rect);
extern bool  harfang_intersects_rect(harfang_rect this_ ,const harfang_rect  rect);
extern harfang_rect  harfang_intersection_rect(harfang_rect this_ ,const harfang_rect  rect);
extern harfang_rect  harfang_grow_rect(harfang_rect this_ ,float  border);
extern harfang_rect  harfang_offset_rect(harfang_rect this_ ,float  x ,float  y);
extern harfang_rect  harfang_cropped_rect(harfang_rect this_ ,float  osx ,float  osy ,float  oex ,float  oey);
extern int  harfang_int_rect_get_sx(harfang_int_rect h);
extern void harfang_int_rect_set_sx(harfang_int_rect h, int  v);
extern int  harfang_int_rect_get_sy(harfang_int_rect h);
extern void harfang_int_rect_set_sy(harfang_int_rect h, int  v);
extern int  harfang_int_rect_get_ex(harfang_int_rect h);
extern void harfang_int_rect_set_ex(harfang_int_rect h, int  v);
extern int  harfang_int_rect_get_ey(harfang_int_rect h);
extern void harfang_int_rect_set_ey(harfang_int_rect h, int  v);
extern harfang_int_rect  harfang_constructor_int_rect();
extern harfang_int_rect  harfang_constructor_int_rect_with_usx_usy(int  usx ,int  usy);
extern harfang_int_rect  harfang_constructor_int_rect_with_usx_usy_uex_uey(int  usx ,int  usy ,int  uex ,int  uey);
extern harfang_int_rect  harfang_constructor_int_rect_with_rect(const harfang_int_rect  rect);
extern void harfang_int_rect_free(harfang_int_rect);
extern harfang_int_rect  harfang_from_width_height_int_rect(harfang_int_rect this_ ,int  x ,int  y ,int  w ,int  h);
extern int  harfang_get_x_int_rect(harfang_int_rect this_);
extern int  harfang_get_y_int_rect(harfang_int_rect this_);
extern void harfang_set_x_int_rect(harfang_int_rect this_ ,int  x);
extern void harfang_set_y_int_rect(harfang_int_rect this_ ,int  y);
extern int  harfang_get_width_int_rect(harfang_int_rect this_);
extern int  harfang_get_height_int_rect(harfang_int_rect this_);
extern void harfang_set_width_int_rect(harfang_int_rect this_ ,int  width);
extern void harfang_set_height_int_rect(harfang_int_rect this_ ,int  height);
extern harfang_int_vector2  harfang_get_size_int_rect(harfang_int_rect this_);
extern bool  harfang_inside_int_rect(harfang_int_rect this_ ,int  x ,int  y);
extern bool  harfang_fits_inside_int_rect(harfang_int_rect this_ ,const harfang_int_rect  rect);
extern bool  harfang_intersects_int_rect(harfang_int_rect this_ ,const harfang_int_rect  rect);
extern harfang_int_rect  harfang_intersection_int_rect(harfang_int_rect this_ ,const harfang_int_rect  rect);
extern harfang_int_rect  harfang_grow_int_rect(harfang_int_rect this_ ,int  border);
extern harfang_int_rect  harfang_offset_int_rect(harfang_int_rect this_ ,int  x ,int  y);
extern harfang_int_rect  harfang_cropped_int_rect(harfang_int_rect this_ ,int  osx ,int  osy ,int  oex ,int  oey);
extern harfang_vector3  harfang_plane_get_n(harfang_plane h);
extern void harfang_plane_set_n(harfang_plane h, harfang_vector3  v);
extern float  harfang_plane_get_d(harfang_plane h);
extern void harfang_plane_set_d(harfang_plane h, float  v);
extern harfang_plane  harfang_constructor_plane();
extern harfang_plane  harfang_constructor_plane_with_pn(const harfang_vector3  p ,const harfang_vector3  n);
extern harfang_plane  harfang_constructor_plane_with_pn_transform(const harfang_vector3  p ,const harfang_vector3  n ,const harfang_matrix4  transform);
extern void harfang_plane_free(harfang_plane);
extern float  harfang_distance_to_plane_plane(harfang_plane this_ ,const harfang_vector3  p);
extern void harfang_set_plane(harfang_plane this_ ,const harfang_vector3  p ,const harfang_vector3  n);
extern void harfang_set_plane_with_transform(harfang_plane this_ ,const harfang_vector3  p ,const harfang_vector3  n ,const harfang_matrix4  transform);
extern void harfang_set_plane_with_p0_p1_p2(harfang_plane this_ ,const harfang_vector3  p0 ,const harfang_vector3  p1 ,const harfang_vector3  p2);
extern void harfang_set_plane_with_p0_p1_p2_transform(harfang_plane this_ ,const harfang_vector3  p0 ,const harfang_vector3  p1 ,const harfang_vector3  p2 ,const harfang_matrix4  transform);
extern void harfang_future_vector2_free(harfang_future_vector2);
extern harfang_vector2  harfang_get_future_vector2(harfang_future_vector2 this_);
extern bool  harfang_valid_future_vector2(harfang_future_vector2 this_);
extern void harfang_wait_future_vector2(harfang_future_vector2 this_);
extern void harfang_future_int_vector2_free(harfang_future_int_vector2);
extern harfang_int_vector2  harfang_get_future_int_vector2(harfang_future_int_vector2 this_);
extern bool  harfang_valid_future_int_vector2(harfang_future_int_vector2 this_);
extern void harfang_wait_future_int_vector2(harfang_future_int_vector2 this_);
extern void harfang_future_vector3_free(harfang_future_vector3);
extern harfang_vector3  harfang_get_future_vector3(harfang_future_vector3 this_);
extern bool  harfang_valid_future_vector3(harfang_future_vector3 this_);
extern void harfang_wait_future_vector3(harfang_future_vector3 this_);
extern void harfang_future_vector4_free(harfang_future_vector4);
extern harfang_vector4  harfang_get_future_vector4(harfang_future_vector4 this_);
extern bool  harfang_valid_future_vector4(harfang_future_vector4 this_);
extern void harfang_wait_future_vector4(harfang_future_vector4 this_);
extern void harfang_future_matrix3_free(harfang_future_matrix3);
extern harfang_matrix3  harfang_get_future_matrix3(harfang_future_matrix3 this_);
extern bool  harfang_valid_future_matrix3(harfang_future_matrix3 this_);
extern void harfang_wait_future_matrix3(harfang_future_matrix3 this_);
extern void harfang_future_matrix4_free(harfang_future_matrix4);
extern harfang_matrix4  harfang_get_future_matrix4(harfang_future_matrix4 this_);
extern bool  harfang_valid_future_matrix4(harfang_future_matrix4 this_);
extern void harfang_wait_future_matrix4(harfang_future_matrix4 this_);
extern void harfang_future_matrix44_free(harfang_future_matrix44);
extern harfang_matrix44  harfang_get_future_matrix44(harfang_future_matrix44 this_);
extern bool  harfang_valid_future_matrix44(harfang_future_matrix44 this_);
extern void harfang_wait_future_matrix44(harfang_future_matrix44 this_);
extern void harfang_future_float_rect_free(harfang_future_float_rect);
extern harfang_rect  harfang_get_future_float_rect(harfang_future_float_rect this_);
extern bool  harfang_valid_future_float_rect(harfang_future_float_rect this_);
extern void harfang_wait_future_float_rect(harfang_future_float_rect this_);
extern void harfang_future_int_rect_free(harfang_future_int_rect);
extern harfang_int_rect  harfang_get_future_int_rect(harfang_future_int_rect this_);
extern bool  harfang_valid_future_int_rect(harfang_future_int_rect this_);
extern void harfang_wait_future_int_rect(harfang_future_int_rect this_);
extern void harfang_vector2_list_free(harfang_vector2_list);
extern void harfang_push_back_vector2_list(harfang_vector2_list this_ ,harfang_vector2  v);
extern size_t  harfang_size_vector2_list(harfang_vector2_list this_);
extern harfang_vector2  harfang_at_vector2_list(harfang_vector2_list this_ ,size_t  idx);
extern void harfang_intvector2_list_free(harfang_intvector2_list);
extern void harfang_push_back_intvector2_list(harfang_intvector2_list this_ ,harfang_int_vector2  v);
extern size_t  harfang_size_intvector2_list(harfang_intvector2_list this_);
extern harfang_int_vector2  harfang_at_intvector2_list(harfang_intvector2_list this_ ,size_t  idx);
extern void harfang_vector3_list_free(harfang_vector3_list);
extern void harfang_push_back_vector3_list(harfang_vector3_list this_ ,harfang_vector3  v);
extern size_t  harfang_size_vector3_list(harfang_vector3_list this_);
extern harfang_vector3  harfang_at_vector3_list(harfang_vector3_list this_ ,size_t  idx);
extern void harfang_vector4_list_free(harfang_vector4_list);
extern void harfang_push_back_vector4_list(harfang_vector4_list this_ ,harfang_vector4  v);
extern size_t  harfang_size_vector4_list(harfang_vector4_list this_);
extern harfang_vector4  harfang_at_vector4_list(harfang_vector4_list this_ ,size_t  idx);
extern void harfang_matrix3_list_free(harfang_matrix3_list);
extern void harfang_push_back_matrix3_list(harfang_matrix3_list this_ ,harfang_matrix3  v);
extern size_t  harfang_size_matrix3_list(harfang_matrix3_list this_);
extern harfang_matrix3  harfang_at_matrix3_list(harfang_matrix3_list this_ ,size_t  idx);
extern void harfang_matrix4_list_free(harfang_matrix4_list);
extern void harfang_push_back_matrix4_list(harfang_matrix4_list this_ ,harfang_matrix4  v);
extern size_t  harfang_size_matrix4_list(harfang_matrix4_list this_);
extern harfang_matrix4  harfang_at_matrix4_list(harfang_matrix4_list this_ ,size_t  idx);
extern void harfang_matrix44_list_free(harfang_matrix44_list);
extern void harfang_push_back_matrix44_list(harfang_matrix44_list this_ ,harfang_matrix44  v);
extern size_t  harfang_size_matrix44_list(harfang_matrix44_list this_);
extern harfang_matrix44  harfang_at_matrix44_list(harfang_matrix44_list this_ ,size_t  idx);
extern uint8_t harfang_frustum_get_type(harfang_frustum h);
extern void harfang_frustum_set_type(harfang_frustum h, uint8_t v);
extern float  harfang_frustum_get_fov_size(harfang_frustum h);
extern void harfang_frustum_set_fov_size(harfang_frustum h, float  v);
extern harfang_vector2  harfang_frustum_get_aspect_ratio(harfang_frustum h);
extern void harfang_frustum_set_aspect_ratio(harfang_frustum h, harfang_vector2  v);
extern float  harfang_frustum_get_znear(harfang_frustum h);
extern void harfang_frustum_set_znear(harfang_frustum h, float  v);
extern float  harfang_frustum_get_zfar(harfang_frustum h);
extern void harfang_frustum_set_zfar(harfang_frustum h, float  v);
extern harfang_matrix4  harfang_frustum_get_world(harfang_frustum h);
extern void harfang_frustum_set_world(harfang_frustum h, harfang_matrix4  v);
extern void harfang_frustum_free(harfang_frustum);
extern void harfang_frustum_planes_free(harfang_frustum_planes);
extern harfang_plane  harfang_get_top_frustum_planes(harfang_frustum_planes this_);
extern void harfang_set_top_frustum_planes(harfang_frustum_planes this_ ,const harfang_plane  plane);
extern harfang_plane  harfang_get_bottom_frustum_planes(harfang_frustum_planes this_);
extern void harfang_set_bottom_frustum_planes(harfang_frustum_planes this_ ,const harfang_plane  plane);
extern harfang_plane  harfang_get_left_frustum_planes(harfang_frustum_planes this_);
extern void harfang_set_left_frustum_planes(harfang_frustum_planes this_ ,const harfang_plane  plane);
extern harfang_plane  harfang_get_right_frustum_planes(harfang_frustum_planes this_);
extern void harfang_set_right_frustum_planes(harfang_frustum_planes this_ ,const harfang_plane  plane);
extern harfang_plane  harfang_get_near_frustum_planes(harfang_frustum_planes this_);
extern void harfang_set_near_frustum_planes(harfang_frustum_planes this_ ,const harfang_plane  plane);
extern harfang_plane  harfang_get_far_frustum_planes(harfang_frustum_planes this_);
extern void harfang_set_far_frustum_planes(harfang_frustum_planes this_ ,const harfang_plane  plane);
extern void harfang_surface_free(harfang_surface);
extern const char* harfang_monitor_mode_get_name(harfang_monitor_mode h);
extern void harfang_monitor_mode_set_name(harfang_monitor_mode h, const char* v);
extern harfang_int_rect  harfang_monitor_mode_get_rect(harfang_monitor_mode h);
extern void harfang_monitor_mode_set_rect(harfang_monitor_mode h, harfang_int_rect  v);
extern int  harfang_monitor_mode_get_frequency(harfang_monitor_mode h);
extern void harfang_monitor_mode_set_frequency(harfang_monitor_mode h, int  v);
extern uint8_t harfang_monitor_mode_get_rotation(harfang_monitor_mode h);
extern void harfang_monitor_mode_set_rotation(harfang_monitor_mode h, uint8_t v);
extern uint8_t  harfang_monitor_mode_get_supported_rotations(harfang_monitor_mode h);
extern void harfang_monitor_mode_set_supported_rotations(harfang_monitor_mode h, uint8_t  v);
extern void harfang_monitor_mode_free(harfang_monitor_mode);
extern void harfang_monitormode_list_free(harfang_monitormode_list);
extern void harfang_push_back_monitormode_list(harfang_monitormode_list this_ ,harfang_monitor_mode  v);
extern size_t  harfang_size_monitormode_list(harfang_monitormode_list this_);
extern harfang_monitor_mode  harfang_at_monitormode_list(harfang_monitormode_list this_ ,size_t  idx);
extern void harfang_monitor_free(harfang_monitor);
extern void harfang_monitor_list_free(harfang_monitor_list);
extern void harfang_push_back_monitor_list(harfang_monitor_list this_ ,harfang_monitor  v);
extern size_t  harfang_size_monitor_list(harfang_monitor_list this_);
extern harfang_monitor  harfang_at_monitor_list(harfang_monitor_list this_ ,size_t  idx);
extern void harfang_window_free(harfang_window);
extern void harfang_future_window_free(harfang_future_window);
extern harfang_window  harfang_get_future_window(harfang_future_window this_);
extern bool  harfang_valid_future_window(harfang_future_window this_);
extern void harfang_wait_future_window(harfang_future_window this_);
extern void harfang_future_surface_free(harfang_future_surface);
extern harfang_surface  harfang_get_future_surface(harfang_future_surface this_);
extern bool  harfang_valid_future_surface(harfang_future_surface this_);
extern void harfang_wait_future_surface(harfang_future_surface this_);
extern harfang_color  harfang_color_get_zero();
extern harfang_color  harfang_color_get_one();
extern harfang_color  harfang_color_get_white();
extern harfang_color  harfang_color_get_grey();
extern harfang_color  harfang_color_get_black();
extern harfang_color  harfang_color_get_red();
extern harfang_color  harfang_color_get_green();
extern harfang_color  harfang_color_get_blue();
extern harfang_color  harfang_color_get_yellow();
extern harfang_color  harfang_color_get_orange();
extern harfang_color  harfang_color_get_purple();
extern harfang_color  harfang_color_get_transparent();
extern float  harfang_color_get_r(harfang_color h);
extern void harfang_color_set_r(harfang_color h, float  v);
extern float  harfang_color_get_g(harfang_color h);
extern void harfang_color_set_g(harfang_color h, float  v);
extern float  harfang_color_get_b(harfang_color h);
extern void harfang_color_set_b(harfang_color h, float  v);
extern float  harfang_color_get_a(harfang_color h);
extern void harfang_color_set_a(harfang_color h, float  v);
extern harfang_color  harfang_constructor_color();
extern harfang_color  harfang_constructor_color_with_color(const harfang_color  color);
extern harfang_color  harfang_constructor_color_with_rgb(float  r ,float  g ,float  b);
extern harfang_color  harfang_constructor_color_with_rgba(float  r ,float  g ,float  b ,float  a);
extern void harfang_color_free(harfang_color);
extern harfang_color  harfang_add_color(harfang_color this_ ,const harfang_color  color);
extern harfang_color  harfang_add_color_with_k(harfang_color this_ ,float  k);
extern harfang_color  harfang_sub_color(harfang_color this_ ,const harfang_color  color);
extern harfang_color  harfang_sub_color_with_k(harfang_color this_ ,float  k);
extern harfang_color  harfang_div_color(harfang_color this_ ,const harfang_color  color);
extern harfang_color  harfang_div_color_with_k(harfang_color this_ ,float  k);
extern harfang_color  harfang_mul_color(harfang_color this_ ,const harfang_color  color);
extern harfang_color  harfang_mul_color_with_k(harfang_color this_ ,float  k);
extern void harfang_inplace_add_color(harfang_color this_ ,harfang_color  color);
extern void harfang_inplace_add_color_with_k(harfang_color this_ ,float  k);
extern void harfang_inplace_sub_color(harfang_color this_ ,harfang_color  color);
extern void harfang_inplace_sub_color_with_k(harfang_color this_ ,float  k);
extern void harfang_inplace_mul_color(harfang_color this_ ,harfang_color  color);
extern void harfang_inplace_mul_color_with_k(harfang_color this_ ,float  k);
extern void harfang_inplace_div_color(harfang_color this_ ,harfang_color  color);
extern void harfang_inplace_div_color_with_k(harfang_color this_ ,float  k);
extern bool  harfang_eq_color(harfang_color this_ ,const harfang_color  color);
extern bool  harfang_ne_color(harfang_color this_ ,const harfang_color  color);
extern void harfang_color_list_free(harfang_color_list);
extern void harfang_push_back_color_list(harfang_color_list this_ ,harfang_color  v);
extern size_t  harfang_size_color_list(harfang_color_list this_);
extern harfang_color  harfang_at_color_list(harfang_color_list this_ ,size_t  idx);
extern harfang_font_engine  harfang_constructor_font_engine();
extern void harfang_font_engine_free(harfang_font_engine);
extern bool  harfang_set_font_font_engine(harfang_font_engine this_ ,const char * path);
extern bool  harfang_set_font_font_engine_with_autohint(harfang_font_engine this_ ,const char * path ,bool  autohint);
extern void harfang_set_size_font_engine(harfang_font_engine this_ ,float  size);
extern harfang_int_rect  harfang_get_glyph_info_font_engine(harfang_font_engine this_ ,char32_t  codepoint ,harfang_vector2  advance);
extern harfang_rect  harfang_get_text_rect_font_engine(harfang_font_engine this_ ,const char * utf8 ,float  x ,float  y);
extern harfang_rect  harfang_get_text_rect_font_engine_with_codepoints_count_xy(harfang_font_engine this_ ,const char32_t  codepoints ,unsigned int count ,float  x ,float  y);
extern bool  harfang_get_kerning_font_engine(harfang_font_engine this_ ,char32_t  first_codepoint ,char32_t  second_codepoint ,float * kerning_x ,float * kerning_y);
extern harfang_picture  harfang_constructor_picture();
extern harfang_picture  harfang_constructor_picture_with_picture(const harfang_picture_nobind  picture);
extern harfang_picture  harfang_constructor_picture_with_width_height_format(unsigned int width ,unsigned int height ,int format);
extern void harfang_picture_free(harfang_picture);
extern unsigned int harfang_get_width_picture(harfang_picture this_);
extern unsigned int harfang_get_height_picture(harfang_picture this_);
extern harfang_vector2  harfang_get_center_picture(harfang_picture this_);
extern size_t  harfang_get_stride_picture(harfang_picture this_);
extern int harfang_get_format_picture(harfang_picture this_);
extern harfang_int_rect  harfang_get_rect_picture(harfang_picture this_);
extern bool  harfang_alloc_as_picture_with_width_height_format(harfang_picture this_ ,unsigned int width ,unsigned int height ,int format);
extern bool  harfang_alloc_as_picture(harfang_picture this_ ,const harfang_picture_nobind  picture);
extern void harfang_free_picture(harfang_picture this_);
extern intptr_t  harfang_get_data_pointer_picture(harfang_picture this_);
extern size_t  harfang_get_data_size_picture(harfang_picture this_);
extern void harfang_clear_clipping_picture(harfang_picture this_);
extern void harfang_set_clipping_picture(harfang_picture this_ ,int  start_x ,int  start_y ,int  end_x ,int  end_y);
extern void harfang_clear_rgba_picture(harfang_picture this_ ,float  r ,float  g ,float  b);
extern void harfang_clear_rgba_picture_with_a(harfang_picture this_ ,float  r ,float  g ,float  b ,float  a);
extern harfang_vector4  harfang_get_pixel_rgba_picture(harfang_picture this_ ,int  x ,int  y);
extern void harfang_put_pixel_rgba_picture(harfang_picture this_ ,int  x ,int  y ,float  r ,float  g ,float  b);
extern void harfang_put_pixel_rgba_picture_with_a(harfang_picture this_ ,int  x ,int  y ,float  r ,float  g ,float  b ,float  a);
extern void harfang_blend_pixel_rgba_picture(harfang_picture this_ ,int  x ,int  y ,float  r ,float  g ,float  b);
extern void harfang_blend_pixel_rgba_picture_with_a(harfang_picture this_ ,int  x ,int  y ,float  r ,float  g ,float  b ,float  a);
extern void harfang_set_fill_color_rgba_picture(harfang_picture this_ ,float  r ,float  g ,float  b);
extern void harfang_set_fill_color_rgba_picture_with_a(harfang_picture this_ ,float  r ,float  g ,float  b ,float  a);
extern void harfang_set_pen_color_rgba_picture(harfang_picture this_ ,float  r ,float  g ,float  b);
extern void harfang_set_pen_color_rgba_picture_with_a(harfang_picture this_ ,float  r ,float  g ,float  b ,float  a);
extern bool  harfang_blit_copy_picture(harfang_picture this_ ,const harfang_picture_nobind  src ,harfang_int_rect  src_rect ,harfang_int_vector2  dst_pos);
extern bool  harfang_blit_picture(harfang_picture this_ ,const harfang_picture_nobind  src ,harfang_int_rect  src_rect ,harfang_int_vector2  dst_pos);
extern bool  harfang_blit_picture_with_dst_rect(harfang_picture this_ ,const harfang_picture_nobind  src ,harfang_int_rect  src_rect ,harfang_int_rect  dst_rect);
extern bool  harfang_blit_picture_with_dst_rect_filter(harfang_picture this_ ,const harfang_picture_nobind  src ,harfang_int_rect  src_rect ,harfang_int_rect  dst_rect ,int filter);
extern bool  harfang_blit_transform_picture(harfang_picture this_ ,const harfang_picture_nobind  src ,harfang_int_rect  dst_rect ,const harfang_matrix3  m);
extern bool  harfang_blit_transform_picture_with_filter(harfang_picture this_ ,const harfang_picture_nobind  src ,harfang_int_rect  dst_rect ,const harfang_matrix3  m ,int filter);
extern void harfang_flip_picture(harfang_picture this_ ,bool  horizontal ,bool  vertical);
extern bool  harfang_reframe_picture(harfang_picture this_ ,int32_t  top ,int32_t  bottom ,int32_t  left ,int32_t  right);
extern bool  harfang_crop_picture(harfang_picture this_ ,int32_t  start_x ,int32_t  start_y ,int32_t  end_x ,int32_t  end_y);
extern bool  harfang_resize_picture(harfang_picture this_ ,unsigned int width ,unsigned int height);
extern bool  harfang_resize_picture_with_filter(harfang_picture this_ ,unsigned int width ,unsigned int height ,int filter);
extern bool  harfang_convert_picture(harfang_picture this_ ,int format);
extern void harfang_set_fill_mode_picture(harfang_picture this_ ,int brush_mode);
extern void harfang_set_pen_mode_picture(harfang_picture this_ ,int pen_mode);
extern void harfang_set_pen_width_picture(harfang_picture this_ ,float  width);
extern void harfang_set_pen_cap_picture(harfang_picture this_ ,int cap);
extern void harfang_set_line_join_picture(harfang_picture this_ ,int join);
extern void harfang_set_inner_join_picture(harfang_picture this_ ,int join);
extern void harfang_move_to_picture(harfang_picture this_ ,float  x ,float  y);
extern void harfang_line_to_picture(harfang_picture this_ ,float  x ,float  y);
extern void harfang_close_polygon_picture(harfang_picture this_);
extern void harfang_add_rounded_rect_picture(harfang_picture this_ ,float  start_x ,float  start_y ,float  end_x ,float  end_y ,float  radius);
extern void harfang_add_ellipse_picture(harfang_picture this_ ,float  x ,float  y ,float  radius_x ,float  radius_y);
extern void harfang_add_circle_picture(harfang_picture this_ ,float  x ,float  y ,float  radius);
extern void harfang_draw_path_picture(harfang_picture this_);
extern void harfang_draw_line_picture(harfang_picture this_ ,float  start_x ,float  start_y ,float  end_x ,float  end_y);
extern void harfang_draw_rect_picture(harfang_picture this_ ,float  start_x ,float  start_y ,float  end_x ,float  end_y);
extern void harfang_draw_rounded_rect_picture(harfang_picture this_ ,float  start_x ,float  start_y ,float  end_x ,float  end_y ,float  radius);
extern void harfang_draw_ellipse_picture(harfang_picture this_ ,float  x ,float  y ,float  radius_x ,float  radius_y);
extern void harfang_draw_circle_picture(harfang_picture this_ ,float  x ,float  y ,float  radius);
extern void harfang_draw_glyph_picture(harfang_picture this_ ,harfang_font_engine  font_engine ,char32_t  glyph_utf32 ,float  x ,float  y);
extern void harfang_draw_text_picture(harfang_picture this_ ,harfang_font_engine  font_engine ,const char* text ,float  x ,float  y);
extern bool  harfang_compare_picture(harfang_picture this_ ,const harfang_picture_nobind  picture);
extern bool  harfang_compare_picture_with_threshold(harfang_picture this_ ,const harfang_picture_nobind  picture ,float  threshold);
extern void harfang_document_reader_free(harfang_document_reader);
extern const char* harfang_get_scope_name_document_reader(harfang_document_reader this_);
extern unsigned int harfang_get_child_count_document_reader(harfang_document_reader this_);
extern unsigned int harfang_get_child_count_document_reader_with_name(harfang_document_reader this_ ,const char * name);
extern bool  harfang_enter_scope_document_reader(harfang_document_reader this_ ,const char * name);
extern bool  harfang_enter_scope_multiple_document_reader(harfang_document_reader this_ ,const char * name);
extern bool  harfang_exit_scope_multiple_document_reader(harfang_document_reader this_ ,unsigned int count);
extern bool  harfang_enter_first_child_document_reader(harfang_document_reader this_);
extern bool  harfang_enter_sibling_document_reader(harfang_document_reader this_);
extern bool  harfang_exit_scope_document_reader(harfang_document_reader this_);
extern bool  harfang_get_first_key_document_reader(harfang_document_reader this_ ,const char* key ,int* type);
extern bool  harfang_get_next_key_document_reader(harfang_document_reader this_ ,const char* key ,int* type);
extern bool  harfang_read_bool_document_reader(harfang_document_reader this_ ,const char* name ,bool * v);
extern bool  harfang_read_int8_document_reader(harfang_document_reader this_ ,const char* name ,char * v);
extern bool  harfang_read_u_int8_document_reader(harfang_document_reader this_ ,const char* name ,uint8_t * v);
extern bool  harfang_read_int16_document_reader(harfang_document_reader this_ ,const char* name ,short * v);
extern bool  harfang_read_u_int16_document_reader(harfang_document_reader this_ ,const char* name ,uint16_t * v);
extern bool  harfang_read_int32_document_reader(harfang_document_reader this_ ,const char* name ,int32_t * v);
extern bool  harfang_read_u_int32_document_reader(harfang_document_reader this_ ,const char* name ,unsigned int* v);
extern bool  harfang_read_float_document_reader(harfang_document_reader this_ ,const char* name ,float * v);
extern bool  harfang_read_string_document_reader(harfang_document_reader this_ ,const char* name ,const char** v);
extern bool  harfang_has_binary_support_document_reader(harfang_document_reader this_);
extern bool  harfang_load_document_reader(harfang_document_reader this_ ,const char* path);
extern void harfang_document_writer_free(harfang_document_writer);
extern bool  harfang_enter_scope_document_writer(harfang_document_writer this_ ,const char* name);
extern bool  harfang_enter_scope_multiple_document_writer(harfang_document_writer this_ ,const char* name);
extern bool  harfang_exit_scope_multiple_document_writer(harfang_document_writer this_ ,unsigned int count);
extern bool  harfang_exit_scope_document_writer(harfang_document_writer this_);
extern bool  harfang_write_bool_document_writer(harfang_document_writer this_ ,const char* name ,bool  v);
extern bool  harfang_write_int8_document_writer(harfang_document_writer this_ ,const char* name ,char  v);
extern bool  harfang_write_u_int8_document_writer(harfang_document_writer this_ ,const char* name ,uint8_t  v);
extern bool  harfang_write_int16_document_writer(harfang_document_writer this_ ,const char* name ,short  v);
extern bool  harfang_write_u_int16_document_writer(harfang_document_writer this_ ,const char* name ,uint16_t  v);
extern bool  harfang_write_int32_document_writer(harfang_document_writer this_ ,const char* name ,int32_t  v);
extern bool  harfang_write_u_int32_document_writer(harfang_document_writer this_ ,const char* name ,unsigned int v);
extern bool  harfang_write_float_document_writer(harfang_document_writer this_ ,const char* name ,float  v);
extern bool  harfang_write_string_document_writer(harfang_document_writer this_ ,const char* name ,const char* v);
extern bool  harfang_has_binary_support_document_writer(harfang_document_writer this_);
extern bool  harfang_save_document_writer(harfang_document_writer this_ ,const char* path);
extern void harfang_file_driver_free(harfang_file_driver);
extern const char* harfang_file_hash_file_driver(harfang_file_driver this_ ,const char* path);
extern const char* harfang_map_to_absolute_file_driver(harfang_file_driver this_ ,const char* path);
extern const char* harfang_map_to_relative_file_driver(harfang_file_driver this_ ,const char* path);
extern int harfang_get_caps_file_driver(harfang_file_driver this_);
extern harfang_file_handle  harfang_open_file_driver(harfang_file_driver this_ ,const char* path ,int mode);
extern void harfang_close_file_driver(harfang_file_driver this_ ,harfang_file_handle_nobind  handle);
extern bool  harfang_delete_file_driver(harfang_file_driver this_ ,const char* path);
extern size_t  harfang_tell_file_driver(harfang_file_driver this_ ,harfang_file_handle_nobind  handle);
extern size_t  harfang_seek_file_driver(harfang_file_driver this_ ,harfang_file_handle_nobind  handle ,int  offset ,int ref);
extern size_t  harfang_size_file_driver(harfang_file_driver this_ ,harfang_file_handle_nobind  handle);
extern bool  harfang_is_eof_file_driver(harfang_file_driver this_ ,harfang_file_handle_nobind  handle);
extern bool  harfang_mk_dir_file_driver(harfang_file_driver this_ ,const char* path);
extern bool  harfang_is_dir_file_driver(harfang_file_driver this_ ,const char* path);
extern void harfang_file_handle_free(harfang_file_handle);
extern size_t  harfang_get_size_file_handle(harfang_file_handle this_);
extern size_t  harfang_rewind_file_handle(harfang_file_handle this_);
extern bool  harfang_is_eof_file_handle(harfang_file_handle this_);
extern size_t  harfang_tell_file_handle(harfang_file_handle this_);
extern size_t  harfang_seek_file_handle(harfang_file_handle this_ ,int  offset ,int ref);
extern size_t  harfang_write_file_handle(harfang_file_handle this_ ,harfang_binary_data  data);
extern harfang_file_driver  harfang_get_driver_file_handle(harfang_file_handle this_);
extern harfang_std_file_driver  harfang_constructor_std_file_driver();
extern harfang_std_file_driver  harfang_constructor_std_file_driver_with_root_path(const char* root_path);
extern harfang_std_file_driver  harfang_constructor_std_file_driver_with_root_path_sandbox(const char* root_path ,bool  sandbox);
extern void harfang_std_file_driver_free(harfang_std_file_driver);
extern void harfang_set_root_path_std_file_driver(harfang_std_file_driver this_ ,const char* path);
extern void harfang_set_root_path_std_file_driver_with_sandbox(harfang_std_file_driver this_ ,const char* path ,bool  sandbox);
extern const char* harfang_file_hash_std_file_driver(harfang_std_file_driver this_ ,const char* path);
extern const char* harfang_map_to_absolute_std_file_driver(harfang_std_file_driver this_ ,const char* path);
extern const char* harfang_map_to_relative_std_file_driver(harfang_std_file_driver this_ ,const char* path);
extern int harfang_get_caps_std_file_driver(harfang_std_file_driver this_);
extern harfang_file_handle  harfang_open_std_file_driver(harfang_std_file_driver this_ ,const char* path ,int mode);
extern void harfang_close_std_file_driver(harfang_std_file_driver this_ ,harfang_file_handle_nobind  handle);
extern bool  harfang_delete_std_file_driver(harfang_std_file_driver this_ ,const char* path);
extern size_t  harfang_tell_std_file_driver(harfang_std_file_driver this_ ,harfang_file_handle_nobind  handle);
extern size_t  harfang_seek_std_file_driver(harfang_std_file_driver this_ ,harfang_file_handle_nobind  handle ,int  offset ,int ref);
extern size_t  harfang_size_std_file_driver(harfang_std_file_driver this_ ,harfang_file_handle_nobind  handle);
extern bool  harfang_is_eof_std_file_driver(harfang_std_file_driver this_ ,harfang_file_handle_nobind  handle);
extern bool  harfang_mk_dir_std_file_driver(harfang_std_file_driver this_ ,const char* path);
extern bool  harfang_is_dir_std_file_driver(harfang_std_file_driver this_ ,const char* path);
extern harfang_zip_file_driver  harfang_constructor_zip_file_driver(harfang_file_handle  archive);
extern harfang_zip_file_driver  harfang_constructor_zip_file_driver_with_password(harfang_file_handle  archive ,const char* password);
extern void harfang_zip_file_driver_free(harfang_zip_file_driver);
extern bool  harfang_set_archive_zip_file_driver(harfang_zip_file_driver this_ ,harfang_file_handle  archive);
extern bool  harfang_set_archive_zip_file_driver_with_password(harfang_zip_file_driver this_ ,harfang_file_handle  archive ,const char* password);
extern const char* harfang_file_hash_zip_file_driver(harfang_zip_file_driver this_ ,const char* path);
extern const char* harfang_map_to_absolute_zip_file_driver(harfang_zip_file_driver this_ ,const char* path);
extern const char* harfang_map_to_relative_zip_file_driver(harfang_zip_file_driver this_ ,const char* path);
extern int harfang_get_caps_zip_file_driver(harfang_zip_file_driver this_);
extern harfang_file_handle  harfang_open_zip_file_driver(harfang_zip_file_driver this_ ,const char* path ,int mode);
extern void harfang_close_zip_file_driver(harfang_zip_file_driver this_ ,harfang_file_handle_nobind  handle);
extern bool  harfang_delete_zip_file_driver(harfang_zip_file_driver this_ ,const char* path);
extern size_t  harfang_tell_zip_file_driver(harfang_zip_file_driver this_ ,harfang_file_handle_nobind  handle);
extern size_t  harfang_seek_zip_file_driver(harfang_zip_file_driver this_ ,harfang_file_handle_nobind  handle ,int  offset ,int ref);
extern size_t  harfang_size_zip_file_driver(harfang_zip_file_driver this_ ,harfang_file_handle_nobind  handle);
extern bool  harfang_is_eof_zip_file_driver(harfang_zip_file_driver this_ ,harfang_file_handle_nobind  handle);
extern bool  harfang_mk_dir_zip_file_driver(harfang_zip_file_driver this_ ,const char* path);
extern bool  harfang_is_dir_zip_file_driver(harfang_zip_file_driver this_ ,const char* path);
extern harfang_buffer_file_driver  harfang_constructor_buffer_file_driver(harfang_file_driver  driver);
extern harfang_buffer_file_driver  harfang_constructor_buffer_file_driver_with_read_buffer_size_write_buffer_size(harfang_file_driver  driver ,size_t  read_buffer_size ,size_t  write_buffer_size);
extern void harfang_buffer_file_driver_free(harfang_buffer_file_driver);
extern const char* harfang_file_hash_buffer_file_driver(harfang_buffer_file_driver this_ ,const char* path);
extern const char* harfang_map_to_absolute_buffer_file_driver(harfang_buffer_file_driver this_ ,const char* path);
extern const char* harfang_map_to_relative_buffer_file_driver(harfang_buffer_file_driver this_ ,const char* path);
extern int harfang_get_caps_buffer_file_driver(harfang_buffer_file_driver this_);
extern harfang_file_handle  harfang_open_buffer_file_driver(harfang_buffer_file_driver this_ ,const char* path ,int mode);
extern void harfang_close_buffer_file_driver(harfang_buffer_file_driver this_ ,harfang_file_handle_nobind  handle);
extern bool  harfang_delete_buffer_file_driver(harfang_buffer_file_driver this_ ,const char* path);
extern size_t  harfang_tell_buffer_file_driver(harfang_buffer_file_driver this_ ,harfang_file_handle_nobind  handle);
extern size_t  harfang_seek_buffer_file_driver(harfang_buffer_file_driver this_ ,harfang_file_handle_nobind  handle ,int  offset ,int ref);
extern size_t  harfang_size_buffer_file_driver(harfang_buffer_file_driver this_ ,harfang_file_handle_nobind  handle);
extern bool  harfang_is_eof_buffer_file_driver(harfang_buffer_file_driver this_ ,harfang_file_handle_nobind  handle);
extern bool  harfang_mk_dir_buffer_file_driver(harfang_buffer_file_driver this_ ,const char* path);
extern bool  harfang_is_dir_buffer_file_driver(harfang_buffer_file_driver this_ ,const char* path);
extern void harfang_filesystem_free(harfang_filesystem);
extern bool  harfang_mount_filesystem(harfang_filesystem this_ ,harfang_file_driver  driver);
extern bool  harfang_mount_filesystem_with_prefix(harfang_filesystem this_ ,harfang_file_driver  driver ,const char* prefix);
extern bool  harfang_is_prefix_mounted_filesystem(harfang_filesystem this_ ,const char* prefix);
extern void harfang_unmount_filesystem(harfang_filesystem this_ ,const char* prefix);
extern void harfang_unmount_filesystem_with_driver(harfang_filesystem this_ ,const harfang_file_driver  driver);
extern void harfang_unmount_all_filesystem(harfang_filesystem this_);
extern const char* harfang_map_to_absolute_filesystem(harfang_filesystem this_ ,const char* path);
extern const char* harfang_map_to_relative_filesystem(harfang_filesystem this_ ,const char* path);
extern const char* harfang_strip_prefix_filesystem(harfang_filesystem this_ ,const char* path);
extern harfang_file_handle  harfang_open_filesystem(harfang_filesystem this_ ,const char* path ,int mode);
extern void harfang_close_filesystem(harfang_filesystem this_ ,harfang_file_handle_nobind  handle);
extern bool  harfang_mk_dir_filesystem(harfang_filesystem this_ ,const char* path);
extern bool  harfang_exists_filesystem(harfang_filesystem this_ ,const char* path);
extern bool  harfang_delete_filesystem(harfang_filesystem this_ ,const char* path);
extern bool  harfang_file_load_filesystem(harfang_filesystem this_ ,const char* path ,harfang_char_list  out);
extern bool  harfang_file_load_filesystem_with_out(harfang_filesystem this_ ,const char* path ,harfang_binary_data  out);
extern bool  harfang_file_save_filesystem(harfang_filesystem this_ ,const char* path ,const harfang_char_list  in);
extern bool  harfang_file_save_filesystem_with_in(harfang_filesystem this_ ,const char* path ,const harfang_binary_data  in);
extern size_t  harfang_file_size_filesystem(harfang_filesystem this_ ,const char* path);
extern bool  harfang_file_copy_filesystem(harfang_filesystem this_ ,const char* src ,const char* dst);
extern bool  harfang_file_move_filesystem(harfang_filesystem this_ ,const char* src ,const char* dst);
extern const char* harfang_file_to_string_filesystem(harfang_filesystem this_ ,const char* path);
extern bool  harfang_string_to_file_filesystem(harfang_filesystem this_ ,const char* path ,const char* text);
extern void harfang_type_value_free(harfang_type_value);
extern void harfang_typevalue_list_free(harfang_typevalue_list);
extern void harfang_push_back_typevalue_list(harfang_typevalue_list this_ ,harfang_type_value  v);
extern size_t  harfang_size_typevalue_list(harfang_typevalue_list this_);
extern harfang_type_value  harfang_at_typevalue_list(harfang_typevalue_list this_ ,size_t  idx);
extern const char* harfang_shader_get_name(harfang_shader h);
extern void harfang_shader_set_name(harfang_shader h, const char* v);
extern uint8_t  harfang_shader_get_surface_attributes(harfang_shader h);
extern void harfang_shader_set_surface_attributes(harfang_shader h, uint8_t  v);
extern uint16_t  harfang_shader_get_surface_draw_state(harfang_shader h);
extern void harfang_shader_set_surface_draw_state(harfang_shader h, uint16_t  v);
extern uint8_t  harfang_shader_get_alpha_threshold(harfang_shader h);
extern void harfang_shader_set_alpha_threshold(harfang_shader h, uint8_t  v);
extern void harfang_shader_free(harfang_shader);
extern const char* harfang_shader_variable_get_name(harfang_shader_variable h);
extern void harfang_shader_variable_set_name(harfang_shader_variable h, const char* v);
extern const char* harfang_shader_variable_get_hint(harfang_shader_variable h);
extern void harfang_shader_variable_set_hint(harfang_shader_variable h, const char* v);
extern uint8_t harfang_shader_variable_get_type(harfang_shader_variable h);
extern void harfang_shader_variable_set_type(harfang_shader_variable h, uint8_t v);
extern uint8_t harfang_shader_variable_get_precision(harfang_shader_variable h);
extern void harfang_shader_variable_set_precision(harfang_shader_variable h, uint8_t v);
extern uint8_t  harfang_shader_variable_get_array_size(harfang_shader_variable h);
extern void harfang_shader_variable_set_array_size(harfang_shader_variable h, uint8_t  v);
extern void harfang_shader_variable_free(harfang_shader_variable);
extern uint8_t harfang_texture_unit_config_get_wrap_u(harfang_texture_unit_config h);
extern void harfang_texture_unit_config_set_wrap_u(harfang_texture_unit_config h, uint8_t v);
extern uint8_t harfang_texture_unit_config_get_wrap_v(harfang_texture_unit_config h);
extern void harfang_texture_unit_config_set_wrap_v(harfang_texture_unit_config h, uint8_t v);
extern uint8_t harfang_texture_unit_config_get_min_filter(harfang_texture_unit_config h);
extern void harfang_texture_unit_config_set_min_filter(harfang_texture_unit_config h, uint8_t v);
extern uint8_t harfang_texture_unit_config_get_mag_filter(harfang_texture_unit_config h);
extern void harfang_texture_unit_config_set_mag_filter(harfang_texture_unit_config h, uint8_t v);
extern harfang_texture_unit_config  harfang_constructor_texture_unit_config();
extern harfang_texture_unit_config  harfang_constructor_texture_unit_config_with_wrap_u_wrap_v_min_filter_mag_filter(uint8_t wrap_u ,uint8_t wrap_v ,uint8_t min_filter ,uint8_t mag_filter);
extern void harfang_texture_unit_config_free(harfang_texture_unit_config);
extern bool  harfang_eq_texture_unit_config(harfang_texture_unit_config this_ ,const harfang_texture_unit_config  config);
extern const char* harfang_shader_value_get_path(harfang_shader_value h);
extern void harfang_shader_value_set_path(harfang_shader_value h, const char* v);
extern harfang_texture_unit_config  harfang_shader_value_get_tex_unit_cfg(harfang_shader_value h);
extern void harfang_shader_value_set_tex_unit_cfg(harfang_shader_value h, harfang_texture_unit_config  v);
extern void harfang_shader_value_free(harfang_shader_value);
extern float  harfang_get_float_shader_value(harfang_shader_value this_);
extern void harfang_set_float_shader_value(harfang_shader_value this_ ,float  v);
extern void harfang_get_float2_shader_value(harfang_shader_value this_ ,float * v0 ,float * v1);
extern void harfang_set_float2_shader_value(harfang_shader_value this_ ,float  v0 ,float  v1);
extern void harfang_get_float3_shader_value(harfang_shader_value this_ ,float * v0 ,float * v1 ,float * v2);
extern void harfang_set_float3_shader_value(harfang_shader_value this_ ,float  v0 ,float  v1 ,float  v2);
extern void harfang_get_float4_shader_value(harfang_shader_value this_ ,float * v0 ,float * v1 ,float * v2 ,float * v3);
extern void harfang_set_float4_shader_value(harfang_shader_value this_ ,float  v0 ,float  v1 ,float  v2 ,float  v3);
extern void harfang_set_matrix4_shader_value(harfang_shader_value this_ ,harfang_matrix4  o);
extern void harfang_get_matrix4_shader_value(harfang_shader_value this_ ,harfang_matrix4  o);
extern void harfang_set_matrix44_shader_value(harfang_shader_value this_ ,harfang_matrix44  o);
extern void harfang_get_matrix44_shader_value(harfang_shader_value this_ ,harfang_matrix44  o);
extern int32_t  harfang_get_int_shader_value(harfang_shader_value this_);
extern void harfang_set_int_shader_value(harfang_shader_value this_ ,int32_t  v);
extern void harfang_get_int2_shader_value(harfang_shader_value this_ ,int32_t * v0 ,int32_t * v1);
extern void harfang_set_int2_shader_value(harfang_shader_value this_ ,int32_t  v0 ,int32_t  v1);
extern void harfang_get_int3_shader_value(harfang_shader_value this_ ,int32_t * v0 ,int32_t * v1 ,int32_t * v2);
extern void harfang_set_int3_shader_value(harfang_shader_value this_ ,int32_t  v0 ,int32_t  v1 ,int32_t  v2);
extern void harfang_get_int4_shader_value(harfang_shader_value this_ ,int32_t * v0 ,int32_t * v1 ,int32_t * v2 ,int32_t * v3);
extern void harfang_set_int4_shader_value(harfang_shader_value this_ ,int32_t  v0 ,int32_t  v1 ,int32_t  v2 ,int32_t  v3);
extern unsigned int harfang_get_unsigned_shader_value(harfang_shader_value this_);
extern void harfang_set_unsigned_shader_value(harfang_shader_value this_ ,unsigned int v);
extern void harfang_get_unsigned2_shader_value(harfang_shader_value this_ ,unsigned int* v0 ,unsigned int* v1);
extern void harfang_set_unsigned2_shader_value(harfang_shader_value this_ ,unsigned int v0 ,unsigned int v1);
extern void harfang_get_unsigned3_shader_value(harfang_shader_value this_ ,unsigned int* v0 ,unsigned int* v1 ,unsigned int* v2);
extern void harfang_set_unsigned3_shader_value(harfang_shader_value this_ ,unsigned int v0 ,unsigned int v1 ,unsigned int v2);
extern void harfang_get_unsigned4_shader_value(harfang_shader_value this_ ,unsigned int* v0 ,unsigned int* v1 ,unsigned int* v2 ,unsigned int* v3);
extern void harfang_set_unsigned4_shader_value(harfang_shader_value this_ ,unsigned int v0 ,unsigned int v1 ,unsigned int v2 ,unsigned int v3);
extern const char* harfang_material_value_get_name(harfang_material_value h);
extern void harfang_material_value_set_name(harfang_material_value h, const char* v);
extern uint8_t harfang_material_value_get_type(harfang_material_value h);
extern void harfang_material_value_set_type(harfang_material_value h, uint8_t v);
extern const char* harfang_material_value_get_path(harfang_material_value h);
extern void harfang_material_value_set_path(harfang_material_value h, const char* v);
extern harfang_texture_unit_config  harfang_material_value_get_tex_unit_cfg(harfang_material_value h);
extern void harfang_material_value_set_tex_unit_cfg(harfang_material_value h, harfang_texture_unit_config  v);
extern void harfang_material_value_free(harfang_material_value);
extern float  harfang_get_float_material_value(harfang_material_value this_);
extern void harfang_set_float_material_value(harfang_material_value this_ ,float  v);
extern void harfang_get_float2_material_value(harfang_material_value this_ ,float * v0 ,float * v1);
extern void harfang_set_float2_material_value(harfang_material_value this_ ,float  v0 ,float  v1);
extern void harfang_get_float3_material_value(harfang_material_value this_ ,float * v0 ,float * v1 ,float * v2);
extern void harfang_set_float3_material_value(harfang_material_value this_ ,float  v0 ,float  v1 ,float  v2);
extern void harfang_get_float4_material_value(harfang_material_value this_ ,float * v0 ,float * v1 ,float * v2 ,float * v3);
extern void harfang_set_float4_material_value(harfang_material_value this_ ,float  v0 ,float  v1 ,float  v2 ,float  v3);
extern void harfang_set_matrix4_material_value(harfang_material_value this_ ,harfang_matrix4  o);
extern void harfang_get_matrix4_material_value(harfang_material_value this_ ,harfang_matrix4  o);
extern void harfang_set_matrix44_material_value(harfang_material_value this_ ,harfang_matrix44  o);
extern void harfang_get_matrix44_material_value(harfang_material_value this_ ,harfang_matrix44  o);
extern int32_t  harfang_get_int_material_value(harfang_material_value this_);
extern void harfang_set_int_material_value(harfang_material_value this_ ,int32_t  v);
extern void harfang_get_int2_material_value(harfang_material_value this_ ,int32_t * v0 ,int32_t * v1);
extern void harfang_set_int2_material_value(harfang_material_value this_ ,int32_t  v0 ,int32_t  v1);
extern void harfang_get_int3_material_value(harfang_material_value this_ ,int32_t * v0 ,int32_t * v1 ,int32_t * v2);
extern void harfang_set_int3_material_value(harfang_material_value this_ ,int32_t  v0 ,int32_t  v1 ,int32_t  v2);
extern void harfang_get_int4_material_value(harfang_material_value this_ ,int32_t * v0 ,int32_t * v1 ,int32_t * v2 ,int32_t * v3);
extern void harfang_set_int4_material_value(harfang_material_value this_ ,int32_t  v0 ,int32_t  v1 ,int32_t  v2 ,int32_t  v3);
extern unsigned int harfang_get_unsigned_material_value(harfang_material_value this_);
extern void harfang_set_unsigned_material_value(harfang_material_value this_ ,unsigned int v);
extern void harfang_get_unsigned2_material_value(harfang_material_value this_ ,unsigned int* v0 ,unsigned int* v1);
extern void harfang_set_unsigned2_material_value(harfang_material_value this_ ,unsigned int v0 ,unsigned int v1);
extern void harfang_get_unsigned3_material_value(harfang_material_value this_ ,unsigned int* v0 ,unsigned int* v1 ,unsigned int* v2);
extern void harfang_set_unsigned3_material_value(harfang_material_value this_ ,unsigned int v0 ,unsigned int v1 ,unsigned int v2);
extern void harfang_get_unsigned4_material_value(harfang_material_value this_ ,unsigned int* v0 ,unsigned int* v1 ,unsigned int* v2 ,unsigned int* v3);
extern void harfang_set_unsigned4_material_value(harfang_material_value this_ ,unsigned int v0 ,unsigned int v1 ,unsigned int v2 ,unsigned int v3);
extern const char* harfang_material_get_name(harfang_material h);
extern void harfang_material_set_name(harfang_material h, const char* v);
extern const char* harfang_material_get_shader(harfang_material h);
extern void harfang_material_set_shader(harfang_material h, const char* v);
extern harfang_material  harfang_constructor_material();
extern void harfang_material_free(harfang_material);
extern harfang_material_value  harfang_get_value_material(harfang_material this_ ,const char* name);
extern harfang_material_value  harfang_add_value_material(harfang_material this_ ,const char* name ,uint8_t type);
extern size_t  harfang_get_value_count_material(harfang_material this_);
extern const char** harfang_get_value_name_material(harfang_material this_ ,const size_t  index);
extern const char* harfang_geometry_get_lod_proxy(harfang_geometry h);
extern void harfang_geometry_set_lod_proxy(harfang_geometry h, const char* v);
extern float  harfang_geometry_get_lod_distance(harfang_geometry h);
extern void harfang_geometry_set_lod_distance(harfang_geometry h, float  v);
extern const char* harfang_geometry_get_shadow_proxy(harfang_geometry h);
extern void harfang_geometry_set_shadow_proxy(harfang_geometry h, const char* v);
extern harfang_geometry  harfang_constructor_geometry();
extern void harfang_geometry_free(harfang_geometry);
extern void harfang_set_name_geometry(harfang_geometry this_ ,const char* name);
extern const char** harfang_get_name_geometry(harfang_geometry this_);
extern size_t  harfang_get_triangle_count_geometry(harfang_geometry this_);
extern harfang_min_max  harfang_compute_local_min_max_geometry(harfang_geometry this_);
extern void harfang_allocate_vertex_geometry(harfang_geometry this_ ,unsigned int count);
extern void harfang_allocate_polygon_geometry(harfang_geometry this_ ,unsigned int count);
extern bool  harfang_allocate_polygon_binding_geometry(harfang_geometry this_);
extern size_t  harfang_compute_polygon_binding_count_geometry(harfang_geometry this_);
extern void harfang_allocate_vertex_normal_geometry(harfang_geometry this_ ,unsigned int count);
extern void harfang_allocate_vertex_tangent_geometry(harfang_geometry this_ ,unsigned int count);
extern void harfang_allocate_rgb_geometry(harfang_geometry this_ ,unsigned int count);
extern void harfang_allocate_material_table_geometry(harfang_geometry this_ ,unsigned int count);
extern bool  harfang_allocate_uv_channels_geometry(harfang_geometry this_ ,unsigned int channel_count ,unsigned int uv_per_channel);
extern size_t  harfang_get_vertex_count_geometry(harfang_geometry this_);
extern size_t  harfang_get_polygon_count_geometry(harfang_geometry this_);
extern size_t  harfang_get_vertex_normal_count_geometry(harfang_geometry this_);
extern size_t  harfang_get_vertex_tangent_count_geometry(harfang_geometry this_);
extern size_t  harfang_get_rgb_count_geometry(harfang_geometry this_);
extern int  harfang_get_uv_count_geometry(harfang_geometry this_);
extern harfang_vector3  harfang_get_vertex_geometry(harfang_geometry this_ ,unsigned int index);
extern bool  harfang_set_vertex_geometry(harfang_geometry this_ ,unsigned int index ,const harfang_vector3  vertex);
extern harfang_vector3  harfang_get_vertex_normal_geometry(harfang_geometry this_ ,unsigned int index);
extern bool  harfang_set_vertex_normal_geometry(harfang_geometry this_ ,unsigned int index ,const harfang_vector3  vertex);
extern harfang_color  harfang_get_rgb_geometry(harfang_geometry this_ ,unsigned int index);
extern bool  harfang_set_rgb_geometry(harfang_geometry this_ ,unsigned int poly_index ,const harfang_color_list  colors);
extern harfang_vector2  harfang_get_uv_geometry(harfang_geometry this_ ,unsigned int channel ,unsigned int index);
extern bool  harfang_set_uv_geometry(harfang_geometry this_ ,unsigned int channel ,unsigned int poly_index ,const harfang_vector2_list  uvs);
extern bool  harfang_set_polygon_vertex_count_geometry(harfang_geometry this_ ,unsigned int index ,uint8_t  vtx_count);
extern bool  harfang_set_polygon_material_index_geometry(harfang_geometry this_ ,unsigned int index ,uint8_t  material);
extern bool  harfang_set_polygon_geometry(harfang_geometry this_ ,unsigned int index ,uint8_t  vtx_count ,uint8_t  material);
extern int  harfang_get_polygon_vertex_count_geometry(harfang_geometry this_ ,unsigned int index);
extern int  harfang_get_polygon_material_index_geometry(harfang_geometry this_ ,unsigned int index);
extern harfang_unsigned_int_list  harfang_get_polygon_binding_geometry(harfang_geometry this_ ,unsigned int index);
extern bool  harfang_set_polygon_binding_geometry(harfang_geometry this_ ,unsigned int index ,const harfang_int_list  idx);
extern float  harfang_compute_polygon_area_geometry(harfang_geometry this_ ,unsigned int index);
extern bool  harfang_validate_geometry(harfang_geometry this_);
extern bool  harfang_compute_polygon_normal_geometry(harfang_geometry this_);
extern bool  harfang_compute_polygon_normal_geometry_with_force(harfang_geometry this_ ,bool  force);
extern bool  harfang_compute_polygon_tangent_geometry(harfang_geometry this_);
extern bool  harfang_compute_polygon_tangent_geometry_with_uv_index(harfang_geometry this_ ,unsigned int uv_index);
extern bool  harfang_compute_polygon_tangent_geometry_with_uv_index_force(harfang_geometry this_ ,unsigned int uv_index ,bool  force);
extern bool  harfang_compute_vertex_normal_geometry(harfang_geometry this_);
extern bool  harfang_compute_vertex_normal_geometry_with_max_smoothing_angle(harfang_geometry this_ ,float  max_smoothing_angle);
extern bool  harfang_compute_vertex_normal_geometry_with_max_smoothing_angle_force(harfang_geometry this_ ,float  max_smoothing_angle ,bool  force);
extern bool  harfang_compute_vertex_tangent_geometry(harfang_geometry this_);
extern bool  harfang_compute_vertex_tangent_geometry_with_reverse_t(harfang_geometry this_ ,bool  reverse_T);
extern bool  harfang_compute_vertex_tangent_geometry_with_reverse_t_reverse_b(harfang_geometry this_ ,bool  reverse_T ,bool  reverse_B);
extern bool  harfang_compute_vertex_tangent_geometry_with_reverse_t_reverse_b_force(harfang_geometry this_ ,bool  reverse_T ,bool  reverse_B ,bool  force);
extern void harfang_reverse_tangent_frame_geometry(harfang_geometry this_ ,bool  reverse_T ,bool  reverse_B);
extern size_t  harfang_merge_duplicate_materials_geometry(harfang_geometry this_);
extern bool  harfang_set_material_geometry(harfang_geometry this_ ,size_t  index ,const char* path);
extern const char** harfang_get_material_geometry(harfang_geometry this_ ,size_t  index);
extern size_t  harfang_get_material_count_geometry(harfang_geometry this_);
extern void harfang_geometry_list_free(harfang_geometry_list);
extern void harfang_push_back_geometry_list(harfang_geometry_list this_ ,harfang_geometry  v);
extern size_t  harfang_size_geometry_list(harfang_geometry_list this_);
extern harfang_geometry  harfang_at_geometry_list(harfang_geometry_list this_ ,size_t  idx);
extern harfang_vertex_layout_attribute  harfang_constructor_vertex_layout_attribute();
extern void harfang_vertex_layout_attribute_free(harfang_vertex_layout_attribute);
extern uint8_t harfang_get_semantic_vertex_layout_attribute(harfang_vertex_layout_attribute this_);
extern void harfang_set_semantic_vertex_layout_attribute(harfang_vertex_layout_attribute this_ ,uint8_t semantic);
extern uint8_t  harfang_get_count_vertex_layout_attribute(harfang_vertex_layout_attribute this_);
extern void harfang_set_count_vertex_layout_attribute(harfang_vertex_layout_attribute this_ ,uint8_t  count);
extern uint8_t harfang_get_type_vertex_layout_attribute(harfang_vertex_layout_attribute this_);
extern void harfang_set_type_vertex_layout_attribute(harfang_vertex_layout_attribute this_ ,uint8_t type);
extern bool  harfang_is_normalized_vertex_layout_attribute(harfang_vertex_layout_attribute this_);
extern void harfang_is_normalized_vertex_layout_attribute_with_is_normalized(harfang_vertex_layout_attribute this_ ,bool  is_normalized);
extern int  harfang_vertex_layout_get_max_attribute();
extern uint8_t  harfang_vertex_layout_get_stride(harfang_vertex_layout h);
extern void harfang_vertex_layout_set_stride(harfang_vertex_layout h, uint8_t  v);
extern harfang_vertex_layout  harfang_constructor_vertex_layout();
extern void harfang_vertex_layout_free(harfang_vertex_layout);
extern bool  harfang_eq_vertex_layout(harfang_vertex_layout this_ ,const harfang_vertex_layout  layout);
extern bool  harfang_ne_vertex_layout(harfang_vertex_layout this_ ,const harfang_vertex_layout  layout);
extern void harfang_clear_vertex_layout(harfang_vertex_layout this_);
extern bool  harfang_add_attribute_vertex_layout(harfang_vertex_layout this_ ,uint8_t semantic ,uint8_t  count ,uint8_t type);
extern bool  harfang_add_attribute_vertex_layout_with_is_normalized(harfang_vertex_layout this_ ,uint8_t semantic ,uint8_t  count ,uint8_t type ,bool  is_normalized);
extern void harfang_end_vertex_layout(harfang_vertex_layout this_);
extern const harfang_vertex_layout_attribute  harfang_get_attribute_vertex_layout(harfang_vertex_layout this_ ,uint8_t semantic);
extern void harfang_gpu_buffer_free(harfang_gpu_buffer);
extern void harfang_gpu_resource_free(harfang_gpu_resource);
extern const char** harfang_get_name_gpu_resource(harfang_gpu_resource this_);
extern bool  harfang_is_ready_or_failed_gpu_resource(harfang_gpu_resource this_);
extern bool  harfang_is_ready_gpu_resource(harfang_gpu_resource this_);
extern bool  harfang_is_failed_gpu_resource(harfang_gpu_resource this_);
extern void harfang_set_ready_gpu_resource(harfang_gpu_resource this_);
extern void harfang_set_failed_gpu_resource(harfang_gpu_resource this_);
extern void harfang_set_not_ready_gpu_resource(harfang_gpu_resource this_);
extern void harfang_texture_free(harfang_texture);
extern unsigned int harfang_get_width_texture(harfang_texture this_);
extern unsigned int harfang_get_height_texture(harfang_texture this_);
extern unsigned int harfang_get_depth_texture(harfang_texture this_);
extern harfang_rect  harfang_get_rect_texture(harfang_texture this_);
extern const char** harfang_get_name_texture(harfang_texture this_);
extern bool  harfang_is_ready_or_failed_texture(harfang_texture this_);
extern bool  harfang_is_ready_texture(harfang_texture this_);
extern bool  harfang_is_failed_texture(harfang_texture this_);
extern void harfang_set_ready_texture(harfang_texture this_);
extern void harfang_set_failed_texture(harfang_texture this_);
extern void harfang_set_not_ready_texture(harfang_texture this_);
extern void harfang_texture_list_free(harfang_texture_list);
extern void harfang_push_back_texture_list(harfang_texture_list this_ ,harfang_texture  v);
extern size_t  harfang_size_texture_list(harfang_texture_list this_);
extern harfang_texture  harfang_at_texture_list(harfang_texture_list this_ ,size_t  idx);
extern void harfang_render_target_free(harfang_render_target);
extern unsigned int harfang_get_color_texture_count_render_target(harfang_render_target this_);
extern harfang_texture  harfang_get_depth_texture_render_target(harfang_render_target this_);
extern harfang_texture  harfang_get_color_texture_render_target(harfang_render_target this_ ,unsigned int index);
extern void harfang_future_render_target_free(harfang_future_render_target);
extern harfang_render_target  harfang_get_future_render_target(harfang_future_render_target this_);
extern bool  harfang_valid_future_render_target(harfang_future_render_target this_);
extern void harfang_wait_future_render_target(harfang_future_render_target this_);
extern const char* harfang_gpu_hardware_info_get_name(harfang_gpu_hardware_info h);
extern void harfang_gpu_hardware_info_set_name(harfang_gpu_hardware_info h, const char* v);
extern const char* harfang_gpu_hardware_info_get_vendor(harfang_gpu_hardware_info h);
extern void harfang_gpu_hardware_info_set_vendor(harfang_gpu_hardware_info h, const char* v);
extern void harfang_gpu_hardware_info_free(harfang_gpu_hardware_info);
extern void harfang_gpu_shader_free(harfang_gpu_shader);
extern const char** harfang_get_name_gpu_shader(harfang_gpu_shader this_);
extern bool  harfang_is_ready_or_failed_gpu_shader(harfang_gpu_shader this_);
extern bool  harfang_is_ready_gpu_shader(harfang_gpu_shader this_);
extern bool  harfang_is_failed_gpu_shader(harfang_gpu_shader this_);
extern void harfang_set_ready_gpu_shader(harfang_gpu_shader this_);
extern void harfang_set_failed_gpu_shader(harfang_gpu_shader this_);
extern void harfang_set_not_ready_gpu_shader(harfang_gpu_shader this_);
extern void harfang_future_gpu_shader_free(harfang_future_gpu_shader);
extern harfang_gpu_shader  harfang_get_future_gpu_shader(harfang_future_gpu_shader this_);
extern bool  harfang_valid_future_gpu_shader(harfang_future_gpu_shader this_);
extern void harfang_wait_future_gpu_shader(harfang_future_gpu_shader this_);
extern harfang_texture  harfang_gpu_shader_value_get_texture(harfang_gpu_shader_value h);
extern void harfang_gpu_shader_value_set_texture(harfang_gpu_shader_value h, harfang_texture  v);
extern harfang_texture_unit_config  harfang_gpu_shader_value_get_tex_unit_cfg(harfang_gpu_shader_value h);
extern void harfang_gpu_shader_value_set_tex_unit_cfg(harfang_gpu_shader_value h, harfang_texture_unit_config  v);
extern void harfang_gpu_shader_value_free(harfang_gpu_shader_value);
extern void harfang_gpu_shader_variable_free(harfang_gpu_shader_variable);
extern void harfang_texture_cache_free(harfang_texture_cache);
extern size_t  harfang_purge_texture_cache(harfang_texture_cache this_);
extern void harfang_clear_texture_cache(harfang_texture_cache this_);
extern bool  harfang_has_texture_cache(harfang_texture_cache this_ ,const char* name);
extern harfang_texture  harfang_get_texture_cache(harfang_texture_cache this_ ,const char* name);
extern void harfang_add_texture_cache(harfang_texture_cache this_ ,harfang_texture  resource);
extern void harfang_shader_cache_free(harfang_shader_cache);
extern size_t  harfang_purge_shader_cache(harfang_shader_cache this_);
extern void harfang_clear_shader_cache(harfang_shader_cache this_);
extern bool  harfang_has_shader_cache(harfang_shader_cache this_ ,const char* name);
extern harfang_gpu_shader  harfang_get_shader_cache(harfang_shader_cache this_ ,const char* name);
extern void harfang_add_shader_cache(harfang_shader_cache this_ ,harfang_gpu_shader  resource);
extern void harfang_renderer_free(harfang_renderer);
extern const char * harfang_get_name_renderer(harfang_renderer this_);
extern const char * harfang_get_description_renderer(harfang_renderer this_);
extern const char * harfang_get_version_renderer(harfang_renderer this_);
extern harfang_void_pointer  harfang_get_native_handle_renderer(harfang_renderer this_);
extern const harfang_gpu_hardware_info  harfang_get_hardware_info_renderer(harfang_renderer this_);
extern size_t  harfang_purge_cache_renderer(harfang_renderer this_);
extern void harfang_clear_cache_renderer(harfang_renderer this_);
extern void harfang_refresh_cache_entry_renderer(harfang_renderer this_ ,const char* name);
extern bool  harfang_is_cooked_renderer(harfang_renderer this_ ,const char* name);
extern const harfang_texture_cache  harfang_get_texture_cache_renderer(harfang_renderer this_);
extern const harfang_shader_cache  harfang_get_shader_cache_renderer(harfang_renderer this_);
extern harfang_render_target  harfang_new_render_target_renderer(harfang_renderer this_);
extern void harfang_set_render_target_color_texture_renderer(harfang_renderer this_ ,harfang_render_target_nobind  render_target ,harfang_texture  texture);
extern void harfang_set_render_target_depth_texture_renderer(harfang_renderer this_ ,harfang_render_target_nobind  render_target ,harfang_texture  texture);
extern void harfang_blit_render_target_renderer(harfang_renderer this_ ,const harfang_render_target  src_render_target ,const harfang_render_target  dst_render_target ,const harfang_int_rect  src_rect ,const harfang_int_rect  dst_rect);
extern void harfang_blit_render_target_renderer_with_blit_color_blit_depth(harfang_renderer this_ ,const harfang_render_target  src_render_target ,const harfang_render_target  dst_render_target ,const harfang_int_rect  src_rect ,const harfang_int_rect  dst_rect ,bool  blit_color ,bool  blit_depth);
extern void harfang_clear_render_target_renderer(harfang_renderer this_);
extern const harfang_render_target  harfang_get_render_target_renderer(harfang_renderer this_);
extern void harfang_set_render_target_renderer(harfang_renderer this_ ,harfang_render_target  render_target);
extern bool  harfang_check_render_target_renderer(harfang_renderer this_);
extern bool  harfang_create_render_target_renderer(harfang_renderer this_ ,harfang_render_target_nobind  render_target);
extern void harfang_free_render_target_renderer(harfang_renderer this_ ,harfang_render_target_nobind  render_target);
extern harfang_gpu_buffer  harfang_new_buffer_renderer(harfang_renderer this_);
extern size_t  harfang_get_buffer_size_renderer(harfang_renderer this_ ,harfang_buffer_nobind  buffer);
extern void harfang_create_buffer_renderer(harfang_renderer this_ ,harfang_buffer_nobind  buffer ,harfang_binary_data  data ,int type);
extern void harfang_create_buffer_renderer_with_usage(harfang_renderer this_ ,harfang_buffer_nobind  buffer ,harfang_binary_data  data ,int type ,int usage);
extern void harfang_free_buffer_renderer(harfang_renderer this_ ,harfang_buffer_nobind  buffer);
extern harfang_texture  harfang_new_texture_renderer(harfang_renderer this_);
extern harfang_texture  harfang_new_texture_renderer_with_name(harfang_renderer this_ ,const char* name);
extern harfang_texture  harfang_new_texture_renderer_with_name_width_height(harfang_renderer this_ ,const char* name ,int  width ,int  height);
extern harfang_texture  harfang_new_texture_renderer_with_name_width_height_format_aa(harfang_renderer this_ ,const char* name ,int  width ,int  height ,uint8_t format ,uint8_t aa);
extern harfang_texture  harfang_new_texture_renderer_with_name_width_height_format_aa_usage(harfang_renderer this_ ,const char* name ,int  width ,int  height ,uint8_t format ,uint8_t aa ,int usage);
extern harfang_texture  harfang_new_texture_renderer_with_name_width_height_format_aa_usage_mipmapped(harfang_renderer this_ ,const char* name ,int  width ,int  height ,uint8_t format ,uint8_t aa ,int usage ,bool  mipmapped);
extern harfang_texture  harfang_new_texture_renderer_with_name_picture(harfang_renderer this_ ,const char* name ,const harfang_picture_nobind  picture);
extern harfang_texture  harfang_new_texture_renderer_with_name_picture_usage(harfang_renderer this_ ,const char* name ,const harfang_picture_nobind  picture ,int usage);
extern harfang_texture  harfang_new_texture_renderer_with_name_picture_usage_mipmapped(harfang_renderer this_ ,const char* name ,const harfang_picture_nobind  picture ,int usage ,bool  mipmapped);
extern harfang_texture  harfang_new_shadow_map_renderer(harfang_renderer this_ ,int  width ,int  height);
extern harfang_texture  harfang_new_shadow_map_renderer_with_name(harfang_renderer this_ ,int  width ,int  height ,const char* name);
extern harfang_texture  harfang_new_external_texture_renderer(harfang_renderer this_);
extern harfang_texture  harfang_new_external_texture_renderer_with_name(harfang_renderer this_ ,const char* name);
extern bool  harfang_create_texture_renderer_with_width_height(harfang_renderer this_ ,harfang_texture_nobind  texture ,int  width ,int  height);
extern bool  harfang_create_texture_renderer_with_width_height_format(harfang_renderer this_ ,harfang_texture_nobind  texture ,int  width ,int  height ,uint8_t format);
extern bool  harfang_create_texture_renderer_with_width_height_format_aa(harfang_renderer this_ ,harfang_texture_nobind  texture ,int  width ,int  height ,uint8_t format ,uint8_t aa);
extern bool  harfang_create_texture_renderer_with_width_height_format_aa_usage(harfang_renderer this_ ,harfang_texture_nobind  texture ,int  width ,int  height ,uint8_t format ,uint8_t aa ,int usage);
extern bool  harfang_create_texture_renderer_with_width_height_format_aa_usage_mipmapped(harfang_renderer this_ ,harfang_texture_nobind  texture ,int  width ,int  height ,uint8_t format ,uint8_t aa ,int usage ,bool  mipmapped);
extern bool  harfang_create_texture_renderer(harfang_renderer this_ ,harfang_texture_nobind  texture ,const harfang_picture_nobind  picture);
extern bool  harfang_create_texture_renderer_with_usage(harfang_renderer this_ ,harfang_texture_nobind  texture ,const harfang_picture_nobind  picture ,int usage);
extern bool  harfang_create_texture_renderer_with_usage_mipmapped(harfang_renderer this_ ,harfang_texture_nobind  texture ,const harfang_picture_nobind  picture ,int usage ,bool  mipmapped);
extern void harfang_free_texture_renderer(harfang_renderer this_ ,harfang_texture_nobind  texture);
extern bool  harfang_load_native_texture_renderer(harfang_renderer this_ ,harfang_texture_nobind  texture ,const char* path);
extern const char * harfang_get_native_texture_ext_renderer(harfang_renderer this_);
extern void harfang_blit_texture_renderer(harfang_renderer this_ ,harfang_texture_nobind  texture ,const harfang_picture_nobind  picture);
extern void harfang_resize_texture_renderer(harfang_renderer this_ ,harfang_texture_nobind  texture ,unsigned int width ,unsigned int height);
extern bool  harfang_capture_texture_renderer(harfang_renderer this_ ,const harfang_texture_nobind  texture ,harfang_picture_nobind  picture);
extern void harfang_generate_texture_mipmap_renderer(harfang_renderer this_ ,harfang_texture_nobind  texture);
extern bool  harfang_has_texture_renderer(harfang_renderer this_ ,const char* path);
extern harfang_texture  harfang_get_texture_renderer(harfang_renderer this_ ,const char* path);
extern harfang_texture  harfang_load_texture_renderer(harfang_renderer this_ ,const char* path);
extern harfang_texture  harfang_load_texture_renderer_with_use_cache(harfang_renderer this_ ,const char* path ,bool  use_cache);
extern harfang_gpu_shader  harfang_new_shader_renderer(harfang_renderer this_);
extern harfang_gpu_shader  harfang_new_shader_renderer_with_name(harfang_renderer this_ ,const char* name);
extern bool  harfang_has_shader_renderer(harfang_renderer this_ ,const char* name);
extern harfang_gpu_shader  harfang_get_shader_renderer(harfang_renderer this_);
extern harfang_gpu_shader  harfang_get_shader_renderer_with_name(harfang_renderer this_ ,const char* name);
extern harfang_gpu_shader  harfang_load_shader_renderer(harfang_renderer this_ ,const char* name);
extern harfang_gpu_shader  harfang_load_shader_renderer_with_use_cache(harfang_renderer this_ ,const char* name ,bool  use_cache);
extern harfang_gpu_shader  harfang_load_shader_renderer_with_source(harfang_renderer this_ ,const char* name ,const char* source);
extern harfang_gpu_shader  harfang_load_shader_renderer_with_source_use_cache(harfang_renderer this_ ,const char* name ,const char* source ,bool  use_cache);
extern void harfang_create_shader_renderer(harfang_renderer this_ ,const harfang_gpu_shader  shader ,const harfang_shader  core_shader);
extern void harfang_free_shader_renderer(harfang_renderer this_ ,harfang_gpu_shader_nobind  shader);
extern harfang_gpu_shader_variable  harfang_get_shader_variable_renderer(harfang_renderer this_ ,const char* name);
extern harfang_gpu_shader_variable  harfang_get_shader_builtin_renderer(harfang_renderer this_ ,uint8_t semantic);
extern void harfang_set_shader_int_renderer(harfang_renderer this_ ,const harfang_gpu_shader_variable  var ,int  v0);
extern void harfang_set_shader_int_renderer_with_name(harfang_renderer this_ ,const char* name ,int  v0);
extern void harfang_set_shader_int_renderer_with_v(harfang_renderer this_ ,const harfang_gpu_shader_variable  var ,const harfang_int_list  v);
extern void harfang_set_shader_int_renderer_with_name_v(harfang_renderer this_ ,const char* name ,const harfang_int_list  v);
extern void harfang_set_shader_int2_renderer_with_v0_v1(harfang_renderer this_ ,const harfang_gpu_shader_variable  var ,int  v0 ,int  v1);
extern void harfang_set_shader_int2_renderer_with_name_v0_v1(harfang_renderer this_ ,const char* name ,int  v0 ,int  v1);
extern void harfang_set_shader_int2_renderer(harfang_renderer this_ ,const harfang_gpu_shader_variable  var ,const harfang_int_list  v);
extern void harfang_set_shader_int2_renderer_with_name(harfang_renderer this_ ,const char* name ,const harfang_int_list  v);
extern void harfang_set_shader_int3_renderer_with_v0_v1_v2(harfang_renderer this_ ,const harfang_gpu_shader_variable  var ,int  v0 ,int  v1 ,int  v2);
extern void harfang_set_shader_int3_renderer_with_name_v0_v1_v2(harfang_renderer this_ ,const char* name ,int  v0 ,int  v1 ,int  v2);
extern void harfang_set_shader_int3_renderer(harfang_renderer this_ ,const harfang_gpu_shader_variable  var ,const harfang_int_list  v);
extern void harfang_set_shader_int3_renderer_with_name(harfang_renderer this_ ,const char* name ,const harfang_int_list  v);
extern void harfang_set_shader_int4_renderer_with_v0_v1_v2_v3(harfang_renderer this_ ,const harfang_gpu_shader_variable  var ,int  v0 ,int  v1 ,int  v2 ,int  v3);
extern void harfang_set_shader_int4_renderer_with_name_v0_v1_v2_v3(harfang_renderer this_ ,const char* name ,int  v0 ,int  v1 ,int  v2 ,int  v3);
extern void harfang_set_shader_int4_renderer(harfang_renderer this_ ,const harfang_gpu_shader_variable  var ,const harfang_int_list  v);
extern void harfang_set_shader_int4_renderer_with_name(harfang_renderer this_ ,const char* name ,const harfang_int_list  v);
extern void harfang_set_shader_unsigned_renderer(harfang_renderer this_ ,const harfang_gpu_shader_variable  var ,unsigned int v0);
extern void harfang_set_shader_unsigned_renderer_with_name(harfang_renderer this_ ,const char* name ,unsigned int v0);
extern void harfang_set_shader_unsigned_renderer_with_v(harfang_renderer this_ ,const harfang_gpu_shader_variable  var ,const harfang_unsigned_int_list  v);
extern void harfang_set_shader_unsigned_renderer_with_name_v(harfang_renderer this_ ,const char* name ,const harfang_unsigned_int_list  v);
extern void harfang_set_shader_unsigned2_renderer_with_v0_v1(harfang_renderer this_ ,const harfang_gpu_shader_variable  var ,unsigned int v0 ,unsigned int v1);
extern void harfang_set_shader_unsigned2_renderer_with_name_v0_v1(harfang_renderer this_ ,const char* name ,unsigned int v0 ,unsigned int v1);
extern void harfang_set_shader_unsigned2_renderer(harfang_renderer this_ ,const harfang_gpu_shader_variable  var ,const harfang_unsigned_int_list  v);
extern void harfang_set_shader_unsigned2_renderer_with_name(harfang_renderer this_ ,const char* name ,const harfang_unsigned_int_list  v);
extern void harfang_set_shader_unsigned3_renderer_with_v0_v1_v2(harfang_renderer this_ ,const harfang_gpu_shader_variable  var ,unsigned int v0 ,unsigned int v1 ,unsigned int v2);
extern void harfang_set_shader_unsigned3_renderer_with_name_v0_v1_v2(harfang_renderer this_ ,const char* name ,unsigned int v0 ,unsigned int v1 ,unsigned int v2);
extern void harfang_set_shader_unsigned3_renderer(harfang_renderer this_ ,const harfang_gpu_shader_variable  var ,const harfang_unsigned_int_list  v);
extern void harfang_set_shader_unsigned3_renderer_with_name(harfang_renderer this_ ,const char* name ,const harfang_unsigned_int_list  v);
extern void harfang_set_shader_unsigned4_renderer_with_v0_v1_v2_v3(harfang_renderer this_ ,const harfang_gpu_shader_variable  var ,unsigned int v0 ,unsigned int v1 ,unsigned int v2 ,unsigned int v3);
extern void harfang_set_shader_unsigned4_renderer_with_name_v0_v1_v2_v3(harfang_renderer this_ ,const char* name ,unsigned int v0 ,unsigned int v1 ,unsigned int v2 ,unsigned int v3);
extern void harfang_set_shader_unsigned4_renderer(harfang_renderer this_ ,const harfang_gpu_shader_variable  var ,const harfang_unsigned_int_list  v);
extern void harfang_set_shader_unsigned4_renderer_with_name(harfang_renderer this_ ,const char* name ,const harfang_unsigned_int_list  v);
extern void harfang_set_shader_float_renderer(harfang_renderer this_ ,const harfang_gpu_shader_variable  var ,float  v0);
extern void harfang_set_shader_float_renderer_with_name(harfang_renderer this_ ,const char* name ,float  v0);
extern void harfang_set_shader_float_renderer_with_v(harfang_renderer this_ ,const harfang_gpu_shader_variable  var ,const harfang_float_list  v);
extern void harfang_set_shader_float_renderer_with_name_v(harfang_renderer this_ ,const char* name ,const harfang_float_list  v);
extern void harfang_set_shader_float2_renderer_with_v0_v1(harfang_renderer this_ ,const harfang_gpu_shader_variable  var ,float  v0 ,float  v1);
extern void harfang_set_shader_float2_renderer_with_name_v0_v1(harfang_renderer this_ ,const char* name ,float  v0 ,float  v1);
extern void harfang_set_shader_float2_renderer(harfang_renderer this_ ,const harfang_gpu_shader_variable  var ,const harfang_float_list  v);
extern void harfang_set_shader_float2_renderer_with_name(harfang_renderer this_ ,const char* name ,const harfang_float_list  v);
extern void harfang_set_shader_float3_renderer_with_v0_v1_v2(harfang_renderer this_ ,const harfang_gpu_shader_variable  var ,float  v0 ,float  v1 ,float  v2);
extern void harfang_set_shader_float3_renderer_with_name_v0_v1_v2(harfang_renderer this_ ,const char* name ,float  v0 ,float  v1 ,float  v2);
extern void harfang_set_shader_float3_renderer(harfang_renderer this_ ,const harfang_gpu_shader_variable  var ,const harfang_float_list  v);
extern void harfang_set_shader_float3_renderer_with_name(harfang_renderer this_ ,const char* name ,const harfang_float_list  v);
extern void harfang_set_shader_float4_renderer_with_v0_v1_v2_v3(harfang_renderer this_ ,const harfang_gpu_shader_variable  var ,float  v0 ,float  v1 ,float  v2 ,float  v3);
extern void harfang_set_shader_float4_renderer_with_name_v0_v1_v2_v3(harfang_renderer this_ ,const char* name ,float  v0 ,float  v1 ,float  v2 ,float  v3);
extern void harfang_set_shader_float4_renderer(harfang_renderer this_ ,const harfang_gpu_shader_variable  var ,const harfang_float_list  v);
extern void harfang_set_shader_float4_renderer_with_name(harfang_renderer this_ ,const char* name ,const harfang_float_list  v);
extern void harfang_set_shader_matrix3_renderer(harfang_renderer this_ ,const harfang_gpu_shader_variable  var ,const harfang_matrix3  m);
extern void harfang_set_shader_matrix3_renderer_with_name(harfang_renderer this_ ,const char* name ,const harfang_matrix3  m);
extern void harfang_set_shader_matrix4_renderer(harfang_renderer this_ ,const harfang_gpu_shader_variable  var ,const harfang_matrix4  m);
extern void harfang_set_shader_matrix4_renderer_with_name(harfang_renderer this_ ,const char* name ,const harfang_matrix4  m);
extern void harfang_set_shader_matrix44_renderer(harfang_renderer this_ ,const harfang_gpu_shader_variable  var ,const harfang_matrix44  m);
extern void harfang_set_shader_matrix44_renderer_with_name(harfang_renderer this_ ,const char* name ,const harfang_matrix44  m);
extern void harfang_set_shader_texture_renderer(harfang_renderer this_ ,const harfang_gpu_shader_variable  var ,const harfang_texture_nobind  texture);
extern void harfang_set_shader_texture_renderer_with_name(harfang_renderer this_ ,const char* name ,const harfang_texture_nobind  texture);
extern void harfang_set_fill_mode_renderer(harfang_renderer this_ ,int mode);
extern void harfang_set_cull_func_renderer(harfang_renderer this_ ,int func);
extern void harfang_enable_culling_renderer(harfang_renderer this_ ,bool  enable);
extern void harfang_set_depth_func_renderer(harfang_renderer this_ ,int func);
extern void harfang_enable_depth_test_renderer(harfang_renderer this_ ,bool  enable);
extern void harfang_enable_depth_write_renderer(harfang_renderer this_ ,bool  enable);
extern void harfang_set_blend_func_renderer(harfang_renderer this_ ,int src ,int dst);
extern void harfang_enable_blending_renderer(harfang_renderer this_ ,bool  enable);
extern void harfang_enable_alpha_to_coverage_renderer(harfang_renderer this_ ,bool  enable);
extern void harfang_set_color_mask_renderer(harfang_renderer this_ ,bool  red ,bool  green ,bool  blue ,bool  alpha);
extern void harfang_set_default_states_renderer(harfang_renderer this_);
extern void harfang_set_index_source_renderer(harfang_renderer this_);
extern void harfang_set_index_source_renderer_with_buffer(harfang_renderer this_ ,harfang_buffer_nobind  buffer);
extern void harfang_set_vertex_source_renderer(harfang_renderer this_ ,harfang_buffer_nobind  buffer ,const harfang_vertex_layout  layout);
extern bool  harfang_set_shader_renderer(harfang_renderer this_ ,const harfang_gpu_shader  shader);
extern void harfang_set_polygon_depth_offset_renderer(harfang_renderer this_ ,float  slope_scale ,float  bias);
extern harfang_surface  harfang_new_output_surface_renderer(harfang_renderer this_ ,const harfang_window  window);
extern void harfang_set_output_surface_renderer(harfang_renderer this_ ,const harfang_surface  surface);
extern void harfang_destroy_output_surface_renderer(harfang_renderer this_ ,const harfang_surface  surface);
extern harfang_surface  harfang_new_offscreen_output_surface_renderer(harfang_renderer this_ ,int  width ,int  height);
extern const harfang_surface  harfang_get_output_surface_renderer(harfang_renderer this_);
extern harfang_int_vector2  harfang_get_output_surface_size_renderer(harfang_renderer this_);
extern bool  harfang_open_renderer(harfang_renderer this_);
extern bool  harfang_open_renderer_with_debug(harfang_renderer this_ ,bool  debug);
extern void harfang_close_renderer(harfang_renderer this_);
extern bool  harfang_is_open_renderer(harfang_renderer this_);
extern harfang_matrix4  harfang_get_inverse_view_matrix_renderer(harfang_renderer this_);
extern harfang_matrix4  harfang_get_inverse_world_matrix_renderer(harfang_renderer this_);
extern void harfang_set_view_matrix_renderer(harfang_renderer this_ ,const harfang_matrix4  view_matrix);
extern harfang_matrix4  harfang_get_view_matrix_renderer(harfang_renderer this_);
extern void harfang_set_projection_matrix_renderer(harfang_renderer this_ ,const harfang_matrix44  projection_matrix);
extern harfang_matrix44  harfang_get_projection_matrix_renderer(harfang_renderer this_);
extern void harfang_set_world_matrix_renderer(harfang_renderer this_ ,const harfang_matrix4  world_matrix);
extern harfang_matrix4  harfang_get_world_matrix_renderer(harfang_renderer this_);
extern void harfang_set_identity_matrices_renderer(harfang_renderer this_);
extern void harfang_set2_d_matrices_renderer(harfang_renderer this_);
extern void harfang_set2_d_matrices_renderer_with_resolution(harfang_renderer this_ ,const harfang_vector2  resolution);
extern void harfang_set2_d_matrices_renderer_with_resolution_y_origin_bottom(harfang_renderer this_ ,const harfang_vector2  resolution ,bool  y_origin_bottom);
extern void harfang_set2_d_matrices_renderer_with_y_origin_bottom(harfang_renderer this_ ,bool  y_origin_bottom);
extern harfang_vector3  harfang_screen_vertex_renderer(harfang_renderer this_ ,int  x ,int  y);
extern void harfang_enable_clipping_plane_renderer(harfang_renderer this_ ,int  idx);
extern void harfang_disable_clipping_plane_renderer(harfang_renderer this_ ,int  idx);
extern void harfang_set_clipping_plane_renderer(harfang_renderer this_ ,int  idx ,float  a ,float  b ,float  c ,float  d);
extern void harfang_clear_clipping_rect_renderer(harfang_renderer this_);
extern void harfang_set_clipping_rect_renderer(harfang_renderer this_ ,const harfang_rect  rect);
extern harfang_rect  harfang_get_clipping_rect_renderer(harfang_renderer this_);
extern void harfang_set_viewport_renderer(harfang_renderer this_ ,const harfang_rect  rect);
extern harfang_rect  harfang_get_viewport_renderer(harfang_renderer this_);
extern harfang_vector2  harfang_get_aspect_ratio_renderer(harfang_renderer this_);
extern void harfang_clear_renderer(harfang_renderer this_ ,harfang_color  color);
extern void harfang_clear_renderer_with_z_flags(harfang_renderer this_ ,harfang_color  color ,float  z ,int flags);
extern void harfang_draw_frame_renderer(harfang_renderer this_);
extern void harfang_show_frame_renderer(harfang_renderer this_);
extern void harfang_set_v_sync_renderer(harfang_renderer this_ ,bool  enabled);
extern bool  harfang_capture_framebuffer_renderer(harfang_renderer this_ ,harfang_picture_nobind  out);
extern void harfang_invalidate_state_cache_renderer(harfang_renderer this_);
extern size_t  harfang_get_frame_shown_count_renderer(harfang_renderer this_);
extern harfang_renderer_async  harfang_constructor_renderer_async(harfang_renderer  renderer);
extern void harfang_renderer_async_free(harfang_renderer_async);
extern const harfang_renderer  harfang_get_renderer_renderer_async(harfang_renderer_async this_);
extern harfang_future_size  harfang_purge_cache_renderer_async(harfang_renderer_async this_);
extern harfang_future_void  harfang_clear_cache_renderer_async(harfang_renderer_async this_);
extern void harfang_refresh_cache_entry_renderer_async(harfang_renderer_async this_ ,const char* name);
extern harfang_render_target  harfang_new_render_target_renderer_async(harfang_renderer_async this_);
extern void harfang_set_render_target_color_texture_renderer_async(harfang_renderer_async this_ ,const harfang_render_target  render_target ,const harfang_texture  texture);
extern void harfang_set_render_target_depth_texture_renderer_async(harfang_renderer_async this_ ,const harfang_render_target  render_target ,const harfang_texture  texture);
extern void harfang_blit_render_target_renderer_async(harfang_renderer_async this_ ,const harfang_render_target  src_render_target ,const harfang_render_target  dst_render_target ,const harfang_int_rect  src_rect ,const harfang_int_rect  dst_rect);
extern void harfang_blit_render_target_renderer_async_with_blit_color_blit_depth(harfang_renderer_async this_ ,const harfang_render_target  src_render_target ,const harfang_render_target  dst_render_target ,const harfang_int_rect  src_rect ,const harfang_int_rect  dst_rect ,bool  blit_color ,bool  blit_depth);
extern void harfang_read_render_target_color_pixels_renderer_async(harfang_renderer_async this_ ,const harfang_render_target  src_render_target ,const harfang_picture  out ,const harfang_int_rect  rect);
extern void harfang_clear_render_target_renderer_async(harfang_renderer_async this_);
extern void harfang_set_render_target_renderer_async(harfang_renderer_async this_ ,harfang_render_target  render_target);
extern harfang_future_bool  harfang_check_render_target_renderer_async(harfang_renderer_async this_);
extern harfang_future_bool  harfang_create_render_target_renderer_async(harfang_renderer_async this_ ,harfang_render_target  render_target);
extern void harfang_free_render_target_renderer_async(harfang_renderer_async this_ ,const harfang_render_target  render_target);
extern harfang_future_render_target  harfang_get_render_target_renderer_async(harfang_renderer_async this_);
extern harfang_gpu_buffer  harfang_new_buffer_renderer_async(harfang_renderer_async this_);
extern harfang_future_size  harfang_get_buffer_size_renderer_async(harfang_renderer_async this_ ,harfang_gpu_buffer  buffer);
extern harfang_future_bool  harfang_create_buffer_renderer_async(harfang_renderer_async this_ ,harfang_gpu_buffer  buf ,const harfang_binary_data  data ,int type);
extern harfang_future_bool  harfang_create_buffer_renderer_async_with_usage(harfang_renderer_async this_ ,harfang_gpu_buffer  buf ,const harfang_binary_data  data ,int type ,int usage);
extern void harfang_free_buffer_renderer_async(harfang_renderer_async this_ ,harfang_gpu_buffer  buffer);
extern void harfang_draw_buffers_renderer_async(harfang_renderer_async this_ ,unsigned int index_count ,const harfang_gpu_buffer  idx ,const harfang_gpu_buffer  vtx ,harfang_vertex_layout  layout);
extern void harfang_draw_buffers_renderer_async_with_idx_type(harfang_renderer_async this_ ,unsigned int index_count ,const harfang_gpu_buffer  idx ,const harfang_gpu_buffer  vtx ,harfang_vertex_layout  layout ,uint8_t idx_type);
extern void harfang_draw_buffers_renderer_async_with_idx_type_prim_type(harfang_renderer_async this_ ,unsigned int index_count ,const harfang_gpu_buffer  idx ,const harfang_gpu_buffer  vtx ,harfang_vertex_layout  layout ,uint8_t idx_type ,uint8_t prim_type);
extern harfang_future_bool  harfang_update_buffer_renderer_async(harfang_renderer_async this_ ,harfang_gpu_buffer  buf ,const harfang_binary_data  data);
extern harfang_future_bool  harfang_update_buffer_renderer_async_with_start(harfang_renderer_async this_ ,harfang_gpu_buffer  buf ,const harfang_binary_data  data ,size_t  start);
extern harfang_texture  harfang_new_texture_renderer_async(harfang_renderer_async this_);
extern harfang_texture  harfang_new_texture_renderer_async_with_name(harfang_renderer_async this_ ,const char* name);
extern harfang_texture  harfang_new_shadow_map_renderer_async(harfang_renderer_async this_ ,int  width ,int  height);
extern harfang_texture  harfang_new_shadow_map_renderer_async_with_name(harfang_renderer_async this_ ,int  width ,int  height ,const char* name);
extern harfang_future_bool  harfang_create_texture_renderer_async_with_width_height(harfang_renderer_async this_ ,harfang_texture  texture ,int  width ,int  height);
extern harfang_future_bool  harfang_create_texture_renderer_async_with_width_height_format_aa(harfang_renderer_async this_ ,harfang_texture  texture ,int  width ,int  height ,uint8_t format ,uint8_t aa);
extern harfang_future_bool  harfang_create_texture_renderer_async_with_width_height_format_aa_usage(harfang_renderer_async this_ ,harfang_texture  texture ,int  width ,int  height ,uint8_t format ,uint8_t aa ,int usage);
extern harfang_future_bool  harfang_create_texture_renderer_async_with_width_height_format_aa_usage_mipmapped(harfang_renderer_async this_ ,harfang_texture  texture ,int  width ,int  height ,uint8_t format ,uint8_t aa ,int usage ,bool  mipmapped);
extern harfang_future_bool  harfang_create_texture_renderer_async_with_data_width_height(harfang_renderer_async this_ ,harfang_texture  texture ,harfang_binary_data  data ,int  width ,int  height);
extern harfang_future_bool  harfang_create_texture_renderer_async_with_data_width_height_format_aa(harfang_renderer_async this_ ,harfang_texture  texture ,harfang_binary_data  data ,int  width ,int  height ,uint8_t format ,uint8_t aa);
extern harfang_future_bool  harfang_create_texture_renderer_async_with_data_width_height_format_aa_usage(harfang_renderer_async this_ ,harfang_texture  texture ,harfang_binary_data  data ,int  width ,int  height ,uint8_t format ,uint8_t aa ,int usage);
extern harfang_future_bool  harfang_create_texture_renderer_async_with_data_width_height_format_aa_usage_mipmapped(harfang_renderer_async this_ ,harfang_texture  texture ,harfang_binary_data  data ,int  width ,int  height ,uint8_t format ,uint8_t aa ,int usage ,bool  mipmapped);
extern harfang_future_bool  harfang_create_texture_renderer_async(harfang_renderer_async this_ ,harfang_texture  texture ,harfang_picture  picture);
extern harfang_future_bool  harfang_create_texture_renderer_async_with_usage(harfang_renderer_async this_ ,harfang_texture  texture ,harfang_picture  picture ,int usage);
extern harfang_future_bool  harfang_create_texture_renderer_async_with_usage_mipmapped(harfang_renderer_async this_ ,harfang_texture  texture ,harfang_picture  picture ,int usage ,bool  mipmapped);
extern void harfang_free_texture_renderer_async(harfang_renderer_async this_ ,harfang_texture  texture);
extern void harfang_blit_texture_renderer_async(harfang_renderer_async this_ ,harfang_texture  texture ,const harfang_binary_data  data ,unsigned int width ,unsigned int height);
extern void harfang_blit_texture_renderer_async_with_xy(harfang_renderer_async this_ ,harfang_texture  texture ,const harfang_binary_data  data ,unsigned int width ,unsigned int height ,unsigned int x ,unsigned int y);
extern void harfang_resize_texture_renderer_async(harfang_renderer_async this_ ,harfang_texture  texture ,unsigned int width ,unsigned int height);
extern void harfang_blit_texture_background_renderer_async(harfang_renderer_async this_ ,harfang_texture  texture ,const harfang_binary_data  data ,unsigned int width ,unsigned int height);
extern void harfang_blit_texture_background_renderer_async_with_xy(harfang_renderer_async this_ ,harfang_texture  texture ,const harfang_binary_data  data ,unsigned int width ,unsigned int height ,unsigned int x ,unsigned int y);
extern harfang_future_bool  harfang_capture_texture_renderer_async(harfang_renderer_async this_ ,harfang_texture  texture ,harfang_picture  out);
extern void harfang_generate_texture_mipmap_renderer_async(harfang_renderer_async this_ ,harfang_texture  texture);
extern harfang_texture  harfang_load_texture_renderer_async(harfang_renderer_async this_ ,const char* path);
extern harfang_texture  harfang_load_texture_renderer_async_with_use_cache(harfang_renderer_async this_ ,const char* path ,bool  use_cache);
extern const char * harfang_get_native_texture_ext_renderer_async(harfang_renderer_async this_);
extern void harfang_set_fill_mode_renderer_async(harfang_renderer_async this_ ,int fill_mode);
extern void harfang_set_cull_func_renderer_async(harfang_renderer_async this_ ,int cull_mode);
extern void harfang_enable_culling_renderer_async(harfang_renderer_async this_ ,bool  enable);
extern void harfang_set_depth_func_renderer_async(harfang_renderer_async this_ ,int depth_func);
extern void harfang_enable_depth_test_renderer_async(harfang_renderer_async this_ ,bool  enable);
extern void harfang_enable_depth_write_renderer_async(harfang_renderer_async this_ ,bool  enable);
extern void harfang_set_blend_func_renderer_async(harfang_renderer_async this_ ,int src_blend ,int dst_blend);
extern void harfang_enable_blending_renderer_async(harfang_renderer_async this_ ,bool  enable);
extern void harfang_enable_alpha_to_coverage_renderer_async(harfang_renderer_async this_ ,bool  enable);
extern void harfang_set_default_states_renderer_async(harfang_renderer_async this_);
extern void harfang_set_index_source_renderer_async(harfang_renderer_async this_);
extern void harfang_set_index_source_renderer_async_with_buffer(harfang_renderer_async this_ ,harfang_gpu_buffer  buffer);
extern void harfang_set_vertex_source_renderer_async(harfang_renderer_async this_ ,harfang_gpu_buffer  buffer ,const harfang_vertex_layout  layout);
extern harfang_future_gpu_shader  harfang_get_shader_renderer_async(harfang_renderer_async this_);
extern harfang_future_bool  harfang_set_shader_renderer_async(harfang_renderer_async this_ ,harfang_gpu_shader  shader);
extern harfang_gpu_shader  harfang_load_shader_renderer_async(harfang_renderer_async this_ ,const char* name);
extern harfang_gpu_shader  harfang_load_shader_renderer_async_with_use_cache(harfang_renderer_async this_ ,const char* name ,bool  use_cache);
extern harfang_gpu_shader  harfang_load_shader_renderer_async_with_source(harfang_renderer_async this_ ,const char* name ,const char* source);
extern harfang_gpu_shader  harfang_load_shader_renderer_async_with_source_use_cache(harfang_renderer_async this_ ,const char* name ,const char* source ,bool  use_cache);
extern harfang_future_window  harfang_new_window_renderer_async(harfang_renderer_async this_ ,int  w ,int  h ,int  bpp ,uint8_t visibility);
extern harfang_future_surface  harfang_new_output_surface_renderer_async(harfang_renderer_async this_ ,const harfang_window  window);
extern harfang_future_surface  harfang_new_offscreen_output_surface_renderer_async(harfang_renderer_async this_ ,int  width ,int  height);
extern void harfang_set_output_surface_renderer_async(harfang_renderer_async this_ ,const harfang_surface  surface);
extern void harfang_destroy_output_surface_renderer_async(harfang_renderer_async this_ ,harfang_surface  surface);
extern harfang_future_surface  harfang_get_output_surface_renderer_async(harfang_renderer_async this_);
extern harfang_future_int_vector2  harfang_get_output_surface_size_renderer_async(harfang_renderer_async this_);
extern void harfang_fit_viewport_to_output_surface_renderer_async(harfang_renderer_async this_);
extern void harfang_update_window_renderer_async(harfang_renderer_async this_ ,const harfang_window  window);
extern harfang_future_bool  harfang_open_renderer_async(harfang_renderer_async this_);
extern harfang_future_bool  harfang_open_renderer_async_with_debug(harfang_renderer_async this_ ,bool  debug);
extern harfang_future_void  harfang_close_renderer_async(harfang_renderer_async this_);
extern harfang_future_matrix4  harfang_get_inverse_view_matrix_renderer_async(harfang_renderer_async this_);
extern harfang_future_matrix4  harfang_get_inverse_world_matrix_renderer_async(harfang_renderer_async this_);
extern void harfang_set_view_matrix_renderer_async(harfang_renderer_async this_ ,const harfang_matrix4  view);
extern harfang_future_matrix4  harfang_get_view_matrix_renderer_async(harfang_renderer_async this_);
extern void harfang_set_projection_matrix_renderer_async(harfang_renderer_async this_ ,const harfang_matrix44  projection);
extern harfang_future_matrix44  harfang_get_projection_matrix_renderer_async(harfang_renderer_async this_);
extern void harfang_set_world_matrix_renderer_async(harfang_renderer_async this_ ,const harfang_matrix4  world);
extern harfang_future_matrix4  harfang_get_world_matrix_renderer_async(harfang_renderer_async this_);
extern void harfang_set_identity_matrices_renderer_async(harfang_renderer_async this_);
extern void harfang_set2_d_matrices_renderer_async(harfang_renderer_async this_);
extern void harfang_set2_d_matrices_renderer_async_with_reverse_y(harfang_renderer_async this_ ,bool  reverse_y);
extern void harfang_enable_clipping_plane_renderer_async(harfang_renderer_async this_ ,int  idx);
extern void harfang_disable_clipping_plane_renderer_async(harfang_renderer_async this_ ,int  idx);
extern void harfang_set_clipping_plane_renderer_async(harfang_renderer_async this_ ,int  idx ,float  a ,float  b ,float  c ,float  d);
extern void harfang_clear_clipping_rect_renderer_async(harfang_renderer_async this_);
extern void harfang_set_clipping_rect_renderer_async(harfang_renderer_async this_ ,const harfang_rect  clip_rect);
extern harfang_future_float_rect  harfang_get_clipping_rect_renderer_async(harfang_renderer_async this_);
extern void harfang_set_viewport_renderer_async(harfang_renderer_async this_ ,const harfang_rect  rect);
extern harfang_future_float_rect  harfang_get_viewport_renderer_async(harfang_renderer_async this_);
extern harfang_future_vector2  harfang_get_aspect_ratio_renderer_async(harfang_renderer_async this_);
extern void harfang_clear_renderer_async(harfang_renderer_async this_ ,harfang_color  color);
extern void harfang_clear_renderer_async_with_z(harfang_renderer_async this_ ,harfang_color  color ,float  z);
extern void harfang_clear_renderer_async_with_z_clear_mask(harfang_renderer_async this_ ,harfang_color  color ,float  z ,int clear_mask);
extern harfang_future_void  harfang_draw_frame_renderer_async(harfang_renderer_async this_);
extern harfang_future_void  harfang_show_frame_renderer_async(harfang_renderer_async this_);
extern void harfang_set_v_sync_renderer_async(harfang_renderer_async this_ ,bool  enabled);
extern harfang_future_bool  harfang_capture_framebuffer_renderer_async(harfang_renderer_async this_ ,const harfang_picture  out);
extern void harfang_set_shader_int_renderer_async(harfang_renderer_async this_ ,const harfang_gpu_shader_variable  var ,int  v0);
extern void harfang_set_shader_int_renderer_async_with_name(harfang_renderer_async this_ ,const char* name ,int  v0);
extern void harfang_set_shader_int_renderer_async_with_v(harfang_renderer_async this_ ,const harfang_gpu_shader_variable  var ,const harfang_int_list  v);
extern void harfang_set_shader_int_renderer_async_with_name_v(harfang_renderer_async this_ ,const char* name ,const harfang_int_list  v);
extern void harfang_set_shader_int2_renderer_async_with_v0_v1(harfang_renderer_async this_ ,const harfang_gpu_shader_variable  var ,int  v0 ,int  v1);
extern void harfang_set_shader_int2_renderer_async_with_name_v0_v1(harfang_renderer_async this_ ,const char* name ,int  v0 ,int  v1);
extern void harfang_set_shader_int2_renderer_async(harfang_renderer_async this_ ,const harfang_gpu_shader_variable  var ,const harfang_int_list  v);
extern void harfang_set_shader_int2_renderer_async_with_name(harfang_renderer_async this_ ,const char* name ,const harfang_int_list  v);
extern void harfang_set_shader_int3_renderer_async_with_v0_v1_v2(harfang_renderer_async this_ ,const harfang_gpu_shader_variable  var ,int  v0 ,int  v1 ,int  v2);
extern void harfang_set_shader_int3_renderer_async_with_name_v0_v1_v2(harfang_renderer_async this_ ,const char* name ,int  v0 ,int  v1 ,int  v2);
extern void harfang_set_shader_int3_renderer_async(harfang_renderer_async this_ ,const harfang_gpu_shader_variable  var ,const harfang_int_list  v);
extern void harfang_set_shader_int3_renderer_async_with_name(harfang_renderer_async this_ ,const char* name ,const harfang_int_list  v);
extern void harfang_set_shader_int4_renderer_async_with_v0_v1_v2_v3(harfang_renderer_async this_ ,const harfang_gpu_shader_variable  var ,int  v0 ,int  v1 ,int  v2 ,int  v3);
extern void harfang_set_shader_int4_renderer_async_with_name_v0_v1_v2_v3(harfang_renderer_async this_ ,const char* name ,int  v0 ,int  v1 ,int  v2 ,int  v3);
extern void harfang_set_shader_int4_renderer_async(harfang_renderer_async this_ ,const harfang_gpu_shader_variable  var ,const harfang_int_list  v);
extern void harfang_set_shader_int4_renderer_async_with_name(harfang_renderer_async this_ ,const char* name ,const harfang_int_list  v);
extern void harfang_set_shader_unsigned_renderer_async(harfang_renderer_async this_ ,const harfang_gpu_shader_variable  var ,unsigned int v0);
extern void harfang_set_shader_unsigned_renderer_async_with_name(harfang_renderer_async this_ ,const char* name ,unsigned int v0);
extern void harfang_set_shader_unsigned_renderer_async_with_v(harfang_renderer_async this_ ,const harfang_gpu_shader_variable  var ,const harfang_unsigned_int_list  v);
extern void harfang_set_shader_unsigned_renderer_async_with_name_v(harfang_renderer_async this_ ,const char* name ,const harfang_unsigned_int_list  v);
extern void harfang_set_shader_unsigned2_renderer_async_with_v0_v1(harfang_renderer_async this_ ,const harfang_gpu_shader_variable  var ,unsigned int v0 ,unsigned int v1);
extern void harfang_set_shader_unsigned2_renderer_async_with_name_v0_v1(harfang_renderer_async this_ ,const char* name ,unsigned int v0 ,unsigned int v1);
extern void harfang_set_shader_unsigned2_renderer_async(harfang_renderer_async this_ ,const harfang_gpu_shader_variable  var ,const harfang_unsigned_int_list  v);
extern void harfang_set_shader_unsigned2_renderer_async_with_name(harfang_renderer_async this_ ,const char* name ,const harfang_unsigned_int_list  v);
extern void harfang_set_shader_unsigned3_renderer_async_with_v0_v1_v2(harfang_renderer_async this_ ,const harfang_gpu_shader_variable  var ,unsigned int v0 ,unsigned int v1 ,unsigned int v2);
extern void harfang_set_shader_unsigned3_renderer_async_with_name_v0_v1_v2(harfang_renderer_async this_ ,const char* name ,unsigned int v0 ,unsigned int v1 ,unsigned int v2);
extern void harfang_set_shader_unsigned3_renderer_async(harfang_renderer_async this_ ,const harfang_gpu_shader_variable  var ,const harfang_unsigned_int_list  v);
extern void harfang_set_shader_unsigned3_renderer_async_with_name(harfang_renderer_async this_ ,const char* name ,const harfang_unsigned_int_list  v);
extern void harfang_set_shader_unsigned4_renderer_async_with_v0_v1_v2_v3(harfang_renderer_async this_ ,const harfang_gpu_shader_variable  var ,unsigned int v0 ,unsigned int v1 ,unsigned int v2 ,unsigned int v3);
extern void harfang_set_shader_unsigned4_renderer_async_with_name_v0_v1_v2_v3(harfang_renderer_async this_ ,const char* name ,unsigned int v0 ,unsigned int v1 ,unsigned int v2 ,unsigned int v3);
extern void harfang_set_shader_unsigned4_renderer_async(harfang_renderer_async this_ ,const harfang_gpu_shader_variable  var ,const harfang_unsigned_int_list  v);
extern void harfang_set_shader_unsigned4_renderer_async_with_name(harfang_renderer_async this_ ,const char* name ,const harfang_unsigned_int_list  v);
extern void harfang_set_shader_float_renderer_async(harfang_renderer_async this_ ,const harfang_gpu_shader_variable  var ,float  v0);
extern void harfang_set_shader_float_renderer_async_with_name(harfang_renderer_async this_ ,const char* name ,float  v0);
extern void harfang_set_shader_float_renderer_async_with_v(harfang_renderer_async this_ ,const harfang_gpu_shader_variable  var ,const harfang_float_list  v);
extern void harfang_set_shader_float_renderer_async_with_name_v(harfang_renderer_async this_ ,const char* name ,const harfang_float_list  v);
extern void harfang_set_shader_float2_renderer_async_with_v0_v1(harfang_renderer_async this_ ,const harfang_gpu_shader_variable  var ,float  v0 ,float  v1);
extern void harfang_set_shader_float2_renderer_async_with_name_v0_v1(harfang_renderer_async this_ ,const char* name ,float  v0 ,float  v1);
extern void harfang_set_shader_float2_renderer_async(harfang_renderer_async this_ ,const harfang_gpu_shader_variable  var ,const harfang_float_list  v);
extern void harfang_set_shader_float2_renderer_async_with_name(harfang_renderer_async this_ ,const char* name ,const harfang_float_list  v);
extern void harfang_set_shader_float3_renderer_async_with_v0_v1_v2(harfang_renderer_async this_ ,const harfang_gpu_shader_variable  var ,float  v0 ,float  v1 ,float  v2);
extern void harfang_set_shader_float3_renderer_async_with_name_v0_v1_v2(harfang_renderer_async this_ ,const char* name ,float  v0 ,float  v1 ,float  v2);
extern void harfang_set_shader_float3_renderer_async(harfang_renderer_async this_ ,const harfang_gpu_shader_variable  var ,const harfang_float_list  v);
extern void harfang_set_shader_float3_renderer_async_with_name(harfang_renderer_async this_ ,const char* name ,const harfang_float_list  v);
extern void harfang_set_shader_float4_renderer_async_with_v0_v1_v2_v3(harfang_renderer_async this_ ,const harfang_gpu_shader_variable  var ,float  v0 ,float  v1 ,float  v2 ,float  v3);
extern void harfang_set_shader_float4_renderer_async_with_name_v0_v1_v2_v3(harfang_renderer_async this_ ,const char* name ,float  v0 ,float  v1 ,float  v2 ,float  v3);
extern void harfang_set_shader_float4_renderer_async(harfang_renderer_async this_ ,const harfang_gpu_shader_variable  var ,const harfang_float_list  v);
extern void harfang_set_shader_float4_renderer_async_with_name(harfang_renderer_async this_ ,const char* name ,const harfang_float_list  v);
extern void harfang_set_shader_matrix3_renderer_async(harfang_renderer_async this_ ,const harfang_gpu_shader_variable  var ,const harfang_matrix3  m);
extern void harfang_set_shader_matrix3_renderer_async_with_name(harfang_renderer_async this_ ,const char* name ,const harfang_matrix3  m);
extern void harfang_set_shader_matrix4_renderer_async(harfang_renderer_async this_ ,const harfang_gpu_shader_variable  var ,const harfang_matrix4  m);
extern void harfang_set_shader_matrix4_renderer_async_with_name(harfang_renderer_async this_ ,const char* name ,const harfang_matrix4  m);
extern void harfang_set_shader_matrix44_renderer_async(harfang_renderer_async this_ ,const harfang_gpu_shader_variable  var ,const harfang_matrix44  m);
extern void harfang_set_shader_matrix44_renderer_async_with_name(harfang_renderer_async this_ ,const char* name ,const harfang_matrix44  m);
extern void harfang_set_shader_texture_renderer_async(harfang_renderer_async this_ ,const harfang_gpu_shader_variable  var ,const harfang_texture  texture);
extern void harfang_set_shader_texture_renderer_async_with_name(harfang_renderer_async this_ ,const char* name ,const harfang_texture  texture);
extern harfang_render_system  harfang_constructor_render_system();
extern void harfang_render_system_free(harfang_render_system);
extern const harfang_renderer  harfang_get_renderer_render_system(harfang_render_system this_);
extern bool  harfang_initialize_render_system(harfang_render_system this_ ,harfang_renderer  renderer);
extern bool  harfang_initialize_render_system_with_support3d(harfang_render_system this_ ,harfang_renderer  renderer ,bool  support_3d);
extern bool  harfang_is_initialized_render_system(harfang_render_system this_);
extern void harfang_free_render_system(harfang_render_system this_);
extern harfang_int_vector2  harfang_get_internal_resolution_render_system(harfang_render_system this_);
extern void harfang_set_internal_resolution_render_system(harfang_render_system this_ ,const harfang_int_vector2  resolution);
extern harfang_vector2  harfang_get_viewport_to_internal_resolution_ratio_render_system(harfang_render_system this_);
extern harfang_render_statistics  harfang_get_statistics_render_system(harfang_render_system this_);
extern void harfang_set_aa_render_system(harfang_render_system this_ ,unsigned int sample_count);
extern void harfang_set_shadow_maps_resolution_render_system(harfang_render_system this_ ,uint16_t  resolution);
extern size_t  harfang_purge_cache_render_system(harfang_render_system this_);
extern void harfang_clear_cache_render_system(harfang_render_system this_);
extern void harfang_refresh_cache_entry_render_system(harfang_render_system this_ ,const char* name);
extern bool  harfang_has_material_render_system(harfang_render_system this_ ,const char* name);
extern harfang_render_material  harfang_get_material_render_system(harfang_render_system this_ ,const char* name);
extern harfang_render_material  harfang_load_material_render_system(harfang_render_system this_ ,const char* name);
extern harfang_render_material  harfang_load_material_render_system_with_use_cache(harfang_render_system this_ ,const char* name ,bool  use_cache);
extern harfang_render_material  harfang_create_material_render_system(harfang_render_system this_ ,const harfang_material  material);
extern harfang_render_material  harfang_create_material_render_system_with_use_cache(harfang_render_system this_ ,const harfang_material  material ,bool  use_cache);
extern bool  harfang_has_geometry_render_system(harfang_render_system this_ ,const char* name);
extern harfang_render_geometry  harfang_get_geometry_render_system(harfang_render_system this_ ,const char* name);
extern harfang_render_geometry  harfang_load_geometry_render_system(harfang_render_system this_ ,const char* name);
extern harfang_render_geometry  harfang_load_geometry_render_system_with_use_cache(harfang_render_system this_ ,const char* name ,bool  use_cache);
extern harfang_render_geometry  harfang_create_geometry_render_system(harfang_render_system this_ ,const harfang_geometry  geometry);
extern harfang_render_geometry  harfang_create_geometry_render_system_with_use_cache(harfang_render_system this_ ,const harfang_geometry  geometry ,bool  use_cache);
extern bool  harfang_has_surface_shader_render_system(harfang_render_system this_ ,const char* name);
extern harfang_surface_shader  harfang_get_surface_shader_render_system(harfang_render_system this_ ,const char* name);
extern harfang_surface_shader  harfang_load_surface_shader_render_system(harfang_render_system this_ ,const char* name);
extern harfang_surface_shader  harfang_load_surface_shader_render_system_with_use_cache(harfang_render_system this_ ,const char* name ,bool  use_cache);
extern int harfang_get_render_technique_render_system(harfang_render_system this_);
extern void harfang_set_render_technique_render_system(harfang_render_system this_ ,int render_technique);
extern void harfang_set_render_technique_render_system_with_render_to_float_buffers(harfang_render_system this_ ,int render_technique ,bool  render_to_float_buffers);
extern int64_t  harfang_get_frame_clock_render_system(harfang_render_system this_);
extern void harfang_set_view_render_system(harfang_render_system this_ ,const harfang_matrix4  view ,const harfang_matrix44  projection);
extern void harfang_set_view_render_system_with_eye(harfang_render_system this_ ,const harfang_matrix4  view ,const harfang_matrix44  projection ,int eye);
extern void harfang_set_view_render_system_with_previous_view_projection(harfang_render_system this_ ,const harfang_matrix4  view ,const harfang_matrix4  previous_view ,const harfang_matrix44  projection);
extern void harfang_set_view_render_system_with_previous_view_projection_eye(harfang_render_system this_ ,const harfang_matrix4  view ,const harfang_matrix4  previous_view ,const harfang_matrix44  projection ,int eye);
extern int harfang_get_eye_render_system(harfang_render_system this_);
extern harfang_view_state  harfang_get_view_state_render_system(harfang_render_system this_);
extern void harfang_set_view_state_render_system(harfang_render_system this_ ,const harfang_view_state  view_state);
extern const harfang_frustum_planes  harfang_get_view_frustum_render_system(harfang_render_system this_);
extern void harfang_draw_raster_font_batch_render_system(harfang_render_system this_);
extern bool  harfang_set_shader_auto_render_system(harfang_render_system this_ ,bool  has_color);
extern bool  harfang_set_shader_auto_render_system_with_texture(harfang_render_system this_ ,bool  has_color ,const harfang_texture_nobind  texture);
extern void harfang_draw_line_render_system(harfang_render_system this_ ,unsigned int count ,const harfang_vector3_list  pos);
extern void harfang_draw_line_render_system_with_col(harfang_render_system this_ ,unsigned int count ,const harfang_vector3_list  pos ,const harfang_color_list  col);
extern void harfang_draw_line_render_system_with_col_uv(harfang_render_system this_ ,unsigned int count ,const harfang_vector3_list  pos ,const harfang_color_list  col ,const harfang_vector2_list  uv);
extern void harfang_draw_triangle_render_system(harfang_render_system this_ ,unsigned int count ,const harfang_vector3_list  pos);
extern void harfang_draw_triangle_render_system_with_col(harfang_render_system this_ ,unsigned int count ,const harfang_vector3_list  pos ,const harfang_color_list  col);
extern void harfang_draw_triangle_render_system_with_col_uv(harfang_render_system this_ ,unsigned int count ,const harfang_vector3_list  pos ,const harfang_color_list  col ,const harfang_vector2_list  uv);
extern void harfang_draw_sprite_render_system(harfang_render_system this_ ,unsigned int count ,const harfang_vector3_list  pos);
extern void harfang_draw_sprite_render_system_with_col(harfang_render_system this_ ,unsigned int count ,const harfang_vector3_list  pos ,const harfang_color_list  col);
extern void harfang_draw_sprite_render_system_with_col_size(harfang_render_system this_ ,unsigned int count ,const harfang_vector3_list  pos ,const harfang_color_list  col ,const harfang_float_list  size);
extern void harfang_draw_line_auto_render_system(harfang_render_system this_ ,unsigned int count ,const harfang_vector3_list  pos);
extern void harfang_draw_line_auto_render_system_with_col(harfang_render_system this_ ,unsigned int count ,const harfang_vector3_list  pos ,const harfang_color_list  col);
extern void harfang_draw_line_auto_render_system_with_col_uv_texture(harfang_render_system this_ ,unsigned int count ,const harfang_vector3_list  pos ,const harfang_color_list  col ,const harfang_vector2_list  uv ,const harfang_texture_nobind  texture);
extern void harfang_draw_triangle_auto_render_system(harfang_render_system this_ ,unsigned int count ,const harfang_vector3_list  pos);
extern void harfang_draw_triangle_auto_render_system_with_col(harfang_render_system this_ ,unsigned int count ,const harfang_vector3_list  pos ,const harfang_color_list  col);
extern void harfang_draw_triangle_auto_render_system_with_col_uv_texture(harfang_render_system this_ ,unsigned int count ,const harfang_vector3_list  pos ,const harfang_color_list  col ,const harfang_vector2_list  uv ,const harfang_texture_nobind  texture);
extern void harfang_draw_sprite_auto_render_system(harfang_render_system this_ ,unsigned int count ,const harfang_vector3_list  pos ,const harfang_texture_nobind  texture);
extern void harfang_draw_sprite_auto_render_system_with_col(harfang_render_system this_ ,unsigned int count ,const harfang_vector3_list  pos ,const harfang_texture_nobind  texture ,const harfang_color_list  col);
extern void harfang_draw_sprite_auto_render_system_with_col_size(harfang_render_system this_ ,unsigned int count ,const harfang_vector3_list  pos ,const harfang_texture_nobind  texture ,const harfang_color_list  col ,const harfang_float_list  size);
extern void harfang_draw_quad2_d_render_system(harfang_render_system this_ ,const harfang_rect  src_rect ,const harfang_rect  dst_rect);
extern void harfang_draw_fullscreen_quad_render_system(harfang_render_system this_ ,const harfang_vector2  uv);
extern void harfang_draw_geometry_simple_render_system(harfang_render_system this_ ,const harfang_render_geometry_nobind  geometry);
extern const harfang_texture  harfang_get_shadow_map_render_system(harfang_render_system this_);
extern harfang_texture  harfang_get_depth_read_texture_render_system(harfang_render_system this_);
extern void harfang_set_surface_shader_int_render_system(harfang_render_system this_ ,harfang_surface_shader_nobind  shader ,const char* name ,const harfang_int_list  v);
extern void harfang_set_surface_shader_int_render_system_with_v(harfang_render_system this_ ,harfang_surface_shader_nobind  shader ,const char* name ,int  v);
extern void harfang_set_surface_shader_int2_render_system(harfang_render_system this_ ,harfang_surface_shader_nobind  shader ,const char* name ,const harfang_intvector2_list  v);
extern void harfang_set_surface_shader_int2_render_system_with_v(harfang_render_system this_ ,harfang_surface_shader_nobind  shader ,const char* name ,const harfang_int_vector2  v);
extern void harfang_set_surface_shader_float_render_system(harfang_render_system this_ ,harfang_surface_shader_nobind  shader ,const char* name ,const harfang_float_list  v);
extern void harfang_set_surface_shader_float_render_system_with_v(harfang_render_system this_ ,harfang_surface_shader_nobind  shader ,const char* name ,float  v);
extern void harfang_set_surface_shader_float2_render_system(harfang_render_system this_ ,harfang_surface_shader_nobind  shader ,const char* name ,const harfang_vector2_list  v);
extern void harfang_set_surface_shader_float2_render_system_with_v(harfang_render_system this_ ,harfang_surface_shader_nobind  shader ,const char* name ,const harfang_vector2  v);
extern void harfang_set_surface_shader_float3_render_system(harfang_render_system this_ ,harfang_surface_shader_nobind  shader ,const char* name ,const harfang_vector3_list  v);
extern void harfang_set_surface_shader_float3_render_system_with_v(harfang_render_system this_ ,harfang_surface_shader_nobind  shader ,const char* name ,const harfang_vector3  v);
extern void harfang_set_surface_shader_float4_render_system(harfang_render_system this_ ,harfang_surface_shader_nobind  shader ,const char* name ,const harfang_vector4_list  v);
extern void harfang_set_surface_shader_float4_render_system_with_v(harfang_render_system this_ ,harfang_surface_shader_nobind  shader ,const char* name ,const harfang_vector4  v);
extern void harfang_set_surface_shader_matrix3_render_system(harfang_render_system this_ ,harfang_surface_shader_nobind  shader ,const char* name ,const harfang_matrix3_list  v);
extern void harfang_set_surface_shader_matrix3_render_system_with_v(harfang_render_system this_ ,harfang_surface_shader_nobind  shader ,const char* name ,const harfang_matrix3  v);
extern void harfang_set_surface_shader_matrix4_render_system(harfang_render_system this_ ,harfang_surface_shader_nobind  shader ,const char* name ,const harfang_matrix4_list  v);
extern void harfang_set_surface_shader_matrix4_render_system_with_v(harfang_render_system this_ ,harfang_surface_shader_nobind  shader ,const char* name ,const harfang_matrix4  v);
extern void harfang_set_surface_shader_matrix44_render_system(harfang_render_system this_ ,harfang_surface_shader_nobind  shader ,const char* name ,const harfang_matrix44_list  v);
extern void harfang_set_surface_shader_matrix44_render_system_with_v(harfang_render_system this_ ,harfang_surface_shader_nobind  shader ,const char* name ,const harfang_matrix44  v);
extern void harfang_set_surface_shader_texture_render_system(harfang_render_system this_ ,harfang_surface_shader_nobind  shader ,const char* name ,const harfang_texture  t);
extern void harfang_surface_shader_free(harfang_surface_shader);
extern const char** harfang_get_name_surface_shader(harfang_surface_shader this_);
extern bool  harfang_is_ready_or_failed_surface_shader(harfang_surface_shader this_);
extern bool  harfang_is_ready_surface_shader(harfang_surface_shader this_);
extern bool  harfang_is_failed_surface_shader(harfang_surface_shader this_);
extern void harfang_set_ready_surface_shader(harfang_surface_shader this_);
extern void harfang_set_failed_surface_shader(harfang_surface_shader this_);
extern void harfang_set_not_ready_surface_shader(harfang_surface_shader this_);
extern void harfang_render_material_free(harfang_render_material);
extern void harfang_create_render_material(harfang_render_material this_ ,harfang_render_system_nobind  render_system ,harfang_material  material);
extern void harfang_free_render_material(harfang_render_material this_);
extern harfang_render_material  harfang_clone_render_material(harfang_render_material this_);
extern bool  harfang_is_ready_or_failed_render_material(harfang_render_material this_);
extern const harfang_surface_shader  harfang_get_surface_shader_render_material(harfang_render_material this_);
extern void harfang_set_surface_shader_render_material(harfang_render_material this_ ,harfang_surface_shader  surface_shader);
extern bool  harfang_get_float_render_material(harfang_render_material this_ ,const char* name ,float * o0);
extern bool  harfang_get_float2_render_material(harfang_render_material this_ ,const char* name ,float * o0 ,float * o1);
extern bool  harfang_get_float3_render_material(harfang_render_material this_ ,const char* name ,float * o0 ,float * o1 ,float * o2);
extern bool  harfang_get_float4_render_material(harfang_render_material this_ ,const char* name ,float * o0 ,float * o1 ,float * o2 ,float * o3);
extern bool  harfang_get_int_render_material(harfang_render_material this_ ,const char* name ,int * o0);
extern bool  harfang_get_int2_render_material(harfang_render_material this_ ,const char* name ,int * o0 ,int * o1);
extern bool  harfang_get_int3_render_material(harfang_render_material this_ ,const char* name ,int * o0 ,int * o1 ,int * o2);
extern bool  harfang_get_int4_render_material(harfang_render_material this_ ,const char* name ,int * o0 ,int * o1 ,int * o2 ,int * o3);
extern bool  harfang_get_unsigned_render_material(harfang_render_material this_ ,const char* name ,unsigned int* o0);
extern bool  harfang_get_unsigned2_render_material(harfang_render_material this_ ,const char* name ,unsigned int* o0 ,unsigned int* o1);
extern bool  harfang_get_unsigned3_render_material(harfang_render_material this_ ,const char* name ,unsigned int* o0 ,unsigned int* o1 ,unsigned int* o2);
extern bool  harfang_get_unsigned4_render_material(harfang_render_material this_ ,const char* name ,unsigned int* o0 ,unsigned int* o1 ,unsigned int* o2 ,unsigned int* o3);
extern bool  harfang_get_matrix4_render_material(harfang_render_material this_ ,const char* name ,harfang_matrix4  o);
extern bool  harfang_get_matrix44_render_material(harfang_render_material this_ ,const char* name ,harfang_matrix44  o);
extern bool  harfang_get_texture_render_material(harfang_render_material this_ ,const char* name ,harfang_texture  o);
extern bool  harfang_set_float_render_material(harfang_render_material this_ ,const char* name ,float  o0);
extern bool  harfang_set_float2_render_material(harfang_render_material this_ ,const char* name ,float  o0 ,float  o1);
extern bool  harfang_set_float3_render_material(harfang_render_material this_ ,const char* name ,float  o0 ,float  o1 ,float  o2);
extern bool  harfang_set_float4_render_material(harfang_render_material this_ ,const char* name ,float  o0 ,float  o1 ,float  o2 ,float  o3);
extern bool  harfang_set_int_render_material(harfang_render_material this_ ,const char* name ,int  o0);
extern bool  harfang_set_int2_render_material(harfang_render_material this_ ,const char* name ,int  o0 ,int  o1);
extern bool  harfang_set_int3_render_material(harfang_render_material this_ ,const char* name ,int  o0 ,int  o1 ,int  o2);
extern bool  harfang_set_int4_render_material(harfang_render_material this_ ,const char* name ,int  o0 ,int  o1 ,int  o2 ,int  o3);
extern bool  harfang_set_unsigned_render_material(harfang_render_material this_ ,const char* name ,unsigned int o0);
extern bool  harfang_set_unsigned2_render_material(harfang_render_material this_ ,const char* name ,unsigned int o0 ,unsigned int o1);
extern bool  harfang_set_unsigned3_render_material(harfang_render_material this_ ,const char* name ,unsigned int o0 ,unsigned int o1 ,unsigned int o2);
extern bool  harfang_set_unsigned4_render_material(harfang_render_material this_ ,const char* name ,unsigned int o0 ,unsigned int o1 ,unsigned int o2 ,unsigned int o3);
extern bool  harfang_set_matrix4_render_material(harfang_render_material this_ ,const char* name ,harfang_matrix4  o);
extern bool  harfang_set_matrix44_render_material(harfang_render_material this_ ,const char* name ,harfang_matrix44  o);
extern bool  harfang_set_texture_render_material(harfang_render_material this_ ,const char* name ,harfang_texture  o);
extern const char** harfang_get_name_render_material(harfang_render_material this_);
extern bool  harfang_is_ready_render_material(harfang_render_material this_);
extern bool  harfang_is_failed_render_material(harfang_render_material this_);
extern void harfang_set_ready_render_material(harfang_render_material this_);
extern void harfang_set_failed_render_material(harfang_render_material this_);
extern void harfang_set_not_ready_render_material(harfang_render_material this_);
extern harfang_render_geometry  harfang_constructor_render_geometry();
extern harfang_render_geometry  harfang_constructor_render_geometry_with_name(const char* name);
extern void harfang_render_geometry_free(harfang_render_geometry);
extern bool  harfang_set_material_render_geometry(harfang_render_geometry this_ ,unsigned int index ,harfang_render_material  material);
extern harfang_min_max  harfang_get_min_max_render_geometry(harfang_render_geometry this_);
extern harfang_render_material  harfang_get_material_render_geometry(harfang_render_geometry this_ ,unsigned int index);
extern size_t  harfang_get_material_count_render_geometry(harfang_render_geometry this_);
extern void harfang_set_lod_proxy_render_geometry(harfang_render_geometry this_ ,harfang_render_geometry  proxy ,float  distance);
extern void harfang_set_lod_proxy_distance_render_geometry(harfang_render_geometry this_ ,float  distance);
extern void harfang_set_null_lod_proxy_render_geometry(harfang_render_geometry this_);
extern void harfang_set_shadow_proxy_render_geometry(harfang_render_geometry this_ ,harfang_render_geometry  proxy);
extern void harfang_set_null_shadow_proxy_render_geometry(harfang_render_geometry this_);
extern harfang_render_geometry  harfang_get_lod_proxy_render_geometry(harfang_render_geometry this_);
extern float  harfang_get_lod_proxy_distance_render_geometry(harfang_render_geometry this_);
extern harfang_render_geometry  harfang_get_shadow_proxy_render_geometry(harfang_render_geometry this_);
extern const char** harfang_get_name_render_geometry(harfang_render_geometry this_);
extern bool  harfang_is_ready_or_failed_render_geometry(harfang_render_geometry this_);
extern bool  harfang_is_ready_render_geometry(harfang_render_geometry this_);
extern bool  harfang_is_failed_render_geometry(harfang_render_geometry this_);
extern void harfang_set_ready_render_geometry(harfang_render_geometry this_);
extern void harfang_set_failed_render_geometry(harfang_render_geometry this_);
extern void harfang_set_not_ready_render_geometry(harfang_render_geometry this_);
extern int64_t  harfang_render_statistics_get_frame_start(harfang_render_statistics h);
extern void harfang_render_statistics_set_frame_start(harfang_render_statistics h, int64_t  v);
extern size_t  harfang_render_statistics_get_render_primitive_drawn(harfang_render_statistics h);
extern void harfang_render_statistics_set_render_primitive_drawn(harfang_render_statistics h, size_t  v);
extern size_t  harfang_render_statistics_get_line_drawn(harfang_render_statistics h);
extern void harfang_render_statistics_set_line_drawn(harfang_render_statistics h, size_t  v);
extern size_t  harfang_render_statistics_get_triangle_drawn(harfang_render_statistics h);
extern void harfang_render_statistics_set_triangle_drawn(harfang_render_statistics h, size_t  v);
extern size_t  harfang_render_statistics_get_instanced_batch_count(harfang_render_statistics h);
extern void harfang_render_statistics_set_instanced_batch_count(harfang_render_statistics h, size_t  v);
extern size_t  harfang_render_statistics_get_instanced_batch_size(harfang_render_statistics h);
extern void harfang_render_statistics_set_instanced_batch_size(harfang_render_statistics h, size_t  v);
extern void harfang_render_statistics_free(harfang_render_statistics);
extern harfang_rect  harfang_view_state_get_viewport(harfang_view_state h);
extern void harfang_view_state_set_viewport(harfang_view_state h, harfang_rect  v);
extern harfang_rect  harfang_view_state_get_clipping(harfang_view_state h);
extern void harfang_view_state_set_clipping(harfang_view_state h, harfang_rect  v);
extern harfang_matrix4  harfang_view_state_get_view(harfang_view_state h);
extern void harfang_view_state_set_view(harfang_view_state h, harfang_matrix4  v);
extern harfang_matrix44  harfang_view_state_get_projection(harfang_view_state h);
extern void harfang_view_state_set_projection(harfang_view_state h, harfang_matrix44  v);
extern harfang_frustum_planes  harfang_view_state_get_frustum_planes(harfang_view_state h);
extern void harfang_view_state_set_frustum_planes(harfang_view_state h, harfang_frustum_planes  v);
extern int harfang_view_state_get_eye(harfang_view_state h);
extern void harfang_view_state_set_eye(harfang_view_state h, int v);
extern void harfang_view_state_free(harfang_view_state);
extern void harfang_future_render_technique_free(harfang_future_render_technique);
extern int harfang_get_future_render_technique(harfang_future_render_technique this_);
extern bool  harfang_valid_future_render_technique(harfang_future_render_technique this_);
extern void harfang_wait_future_render_technique(harfang_future_render_technique this_);
extern harfang_render_system_async  harfang_constructor_render_system_async(harfang_render_system  render_system);
extern void harfang_render_system_async_free(harfang_render_system_async);
extern const harfang_render_system  harfang_get_render_system_render_system_async(harfang_render_system_async this_);
extern harfang_future_render_technique  harfang_get_render_technique_render_system_async(harfang_render_system_async this_);
extern void harfang_set_render_technique_render_system_async(harfang_render_system_async this_ ,int technique);
extern void harfang_set_render_technique_render_system_async_with_render_to_float_buffers(harfang_render_system_async this_ ,int technique ,bool  render_to_float_buffers);
extern harfang_future_int_vector2  harfang_get_internal_resolution_render_system_async(harfang_render_system_async this_);
extern void harfang_set_internal_resolution_render_system_async(harfang_render_system_async this_ ,const harfang_int_vector2  resolution);
extern harfang_future_vector2  harfang_get_viewport_to_internal_resolution_ratio_render_system_async(harfang_render_system_async this_);
extern void harfang_set_aa_render_system_async(harfang_render_system_async this_ ,unsigned int sample_count);
extern void harfang_set_shadow_maps_resolution_render_system_async(harfang_render_system_async this_ ,uint16_t  resolution);
extern void harfang_set_view_render_system_async(harfang_render_system_async this_ ,const harfang_matrix4  view ,const harfang_matrix44  projection);
extern void harfang_set_view_render_system_async_with_eye(harfang_render_system_async this_ ,const harfang_matrix4  view ,const harfang_matrix44  projection ,int eye);
extern void harfang_set_view_render_system_async_with_previous_view_projection(harfang_render_system_async this_ ,const harfang_matrix4  view ,const harfang_matrix4  previous_view ,const harfang_matrix44  projection);
extern void harfang_set_view_render_system_async_with_previous_view_projection_eye(harfang_render_system_async this_ ,const harfang_matrix4  view ,const harfang_matrix4  previous_view ,const harfang_matrix44  projection ,int eye);
extern harfang_future_size  harfang_purge_cache_render_system_async(harfang_render_system_async this_);
extern harfang_future_void  harfang_clear_cache_render_system_async(harfang_render_system_async this_);
extern void harfang_refresh_cache_entry_render_system_async(harfang_render_system_async this_ ,const char* name);
extern void harfang_draw_raster_font_batch_render_system_async(harfang_render_system_async this_);
extern bool  harfang_has_material_render_system_async(harfang_render_system_async this_ ,const char* name);
extern harfang_render_material  harfang_get_material_render_system_async(harfang_render_system_async this_ ,const char* name);
extern harfang_render_material  harfang_load_material_render_system_async(harfang_render_system_async this_ ,const char* name);
extern harfang_render_material  harfang_load_material_render_system_async_with_use_cache(harfang_render_system_async this_ ,const char* name ,bool  use_cache);
extern harfang_render_material  harfang_load_material_render_system_async_with_source(harfang_render_system_async this_ ,const char* name ,const char* source);
extern harfang_render_material  harfang_load_material_render_system_async_with_source_format(harfang_render_system_async this_ ,const char* name ,const char* source ,int format);
extern harfang_render_material  harfang_load_material_render_system_async_with_source_format_use_cache(harfang_render_system_async this_ ,const char* name ,const char* source ,int format ,bool  use_cache);
extern harfang_render_material  harfang_create_material_render_system_async(harfang_render_system_async this_ ,const harfang_material  material);
extern harfang_render_material  harfang_create_material_render_system_async_with_use_cache(harfang_render_system_async this_ ,const harfang_material  material ,bool  use_cache);
extern bool  harfang_has_geometry_render_system_async(harfang_render_system_async this_ ,const char* name);
extern harfang_render_geometry  harfang_get_geometry_render_system_async(harfang_render_system_async this_ ,const char* name);
extern harfang_render_geometry  harfang_load_geometry_render_system_async(harfang_render_system_async this_ ,const char* name);
extern harfang_render_geometry  harfang_load_geometry_render_system_async_with_use_cache(harfang_render_system_async this_ ,const char* name ,bool  use_cache);
extern harfang_render_geometry  harfang_load_geometry_render_system_async_with_source(harfang_render_system_async this_ ,const char* name ,const char* source);
extern harfang_render_geometry  harfang_load_geometry_render_system_async_with_source_format(harfang_render_system_async this_ ,const char* name ,const char* source ,int format);
extern harfang_render_geometry  harfang_load_geometry_render_system_async_with_source_format_use_cache(harfang_render_system_async this_ ,const char* name ,const char* source ,int format ,bool  use_cache);
extern harfang_render_geometry  harfang_create_geometry_render_system_async(harfang_render_system_async this_ ,const harfang_geometry  geometry);
extern harfang_render_geometry  harfang_create_geometry_render_system_async_with_use_cache(harfang_render_system_async this_ ,const harfang_geometry  geometry ,bool  use_cache);
extern bool  harfang_has_surface_shader_render_system_async(harfang_render_system_async this_ ,const char* name);
extern harfang_surface_shader  harfang_get_surface_shader_render_system_async(harfang_render_system_async this_ ,const char* name);
extern harfang_surface_shader  harfang_load_surface_shader_render_system_async(harfang_render_system_async this_ ,const char* name);
extern harfang_surface_shader  harfang_load_surface_shader_render_system_async_with_use_cache(harfang_render_system_async this_ ,const char* name ,bool  use_cache);
extern void harfang_draw_line_render_system_async(harfang_render_system_async this_ ,unsigned int count ,const harfang_vector3_list  pos);
extern void harfang_draw_line_render_system_async_with_col(harfang_render_system_async this_ ,unsigned int count ,const harfang_vector3_list  pos ,const harfang_color_list  col);
extern void harfang_draw_line_render_system_async_with_col_uv(harfang_render_system_async this_ ,unsigned int count ,const harfang_vector3_list  pos ,const harfang_color_list  col ,const harfang_vector2_list  uv);
extern void harfang_draw_triangle_render_system_async(harfang_render_system_async this_ ,unsigned int count ,const harfang_vector3_list  pos);
extern void harfang_draw_triangle_render_system_async_with_col(harfang_render_system_async this_ ,unsigned int count ,const harfang_vector3_list  pos ,const harfang_color_list  col);
extern void harfang_draw_triangle_render_system_async_with_col_uv(harfang_render_system_async this_ ,unsigned int count ,const harfang_vector3_list  pos ,const harfang_color_list  col ,const harfang_vector2_list  uv);
extern void harfang_draw_sprite_render_system_async(harfang_render_system_async this_ ,unsigned int count ,const harfang_vector3_list  pos);
extern void harfang_draw_sprite_render_system_async_with_col(harfang_render_system_async this_ ,unsigned int count ,const harfang_vector3_list  pos ,const harfang_color_list  col);
extern void harfang_draw_sprite_render_system_async_with_col_size(harfang_render_system_async this_ ,unsigned int count ,const harfang_vector3_list  pos ,const harfang_color_list  col ,const harfang_float_list  size);
extern void harfang_draw_sprite_render_system_async_with_col_size_global_size(harfang_render_system_async this_ ,unsigned int count ,const harfang_vector3_list  pos ,const harfang_color_list  col ,const harfang_float_list  size ,float  global_size);
extern void harfang_draw_line_auto_render_system_async(harfang_render_system_async this_ ,unsigned int count ,const harfang_vector3_list  pos);
extern void harfang_draw_line_auto_render_system_async_with_col(harfang_render_system_async this_ ,unsigned int count ,const harfang_vector3_list  pos ,const harfang_color_list  col);
extern void harfang_draw_line_auto_render_system_async_with_col_uv_texture(harfang_render_system_async this_ ,unsigned int count ,const harfang_vector3_list  pos ,const harfang_color_list  col ,const harfang_vector2_list  uv ,harfang_texture  texture);
extern void harfang_draw_triangle_auto_render_system_async(harfang_render_system_async this_ ,unsigned int count ,const harfang_vector3_list  pos);
extern void harfang_draw_triangle_auto_render_system_async_with_col(harfang_render_system_async this_ ,unsigned int count ,const harfang_vector3_list  pos ,const harfang_color_list  col);
extern void harfang_draw_triangle_auto_render_system_async_with_col_uv_texture(harfang_render_system_async this_ ,unsigned int count ,const harfang_vector3_list  pos ,const harfang_color_list  col ,const harfang_vector2_list  uv ,harfang_texture  texture);
extern void harfang_draw_sprite_auto_render_system_async(harfang_render_system_async this_ ,unsigned int count ,const harfang_vector3_list  pos);
extern void harfang_draw_sprite_auto_render_system_async_with_col(harfang_render_system_async this_ ,unsigned int count ,const harfang_vector3_list  pos ,const harfang_color_list  col);
extern void harfang_draw_sprite_auto_render_system_async_with_col_size(harfang_render_system_async this_ ,unsigned int count ,const harfang_vector3_list  pos ,const harfang_color_list  col ,const harfang_float_list  size);
extern void harfang_draw_sprite_auto_render_system_async_with_col_size_texture(harfang_render_system_async this_ ,unsigned int count ,const harfang_vector3_list  pos ,const harfang_color_list  col ,const harfang_float_list  size ,harfang_texture  texture);
extern void harfang_draw_sprite_auto_render_system_async_with_col_size_texture_global_size(harfang_render_system_async this_ ,unsigned int count ,const harfang_vector3_list  pos ,const harfang_color_list  col ,const harfang_float_list  size ,harfang_texture  texture ,float  global_size);
extern void harfang_draw_quad2_d_render_system_async(harfang_render_system_async this_ ,const harfang_rect  src_rect ,const harfang_rect  dst_rect);
extern void harfang_draw_fullscreen_quad_render_system_async(harfang_render_system_async this_ ,const harfang_vector2  uv);
extern void harfang_set_surface_shader_int_render_system_async(harfang_render_system_async this_ ,const harfang_surface_shader  shader ,const char* name ,const harfang_int_list  v);
extern void harfang_set_surface_shader_int2_render_system_async(harfang_render_system_async this_ ,const harfang_surface_shader  shader ,const char* name ,const harfang_intvector2_list  v);
extern void harfang_set_surface_shader_float_render_system_async(harfang_render_system_async this_ ,const harfang_surface_shader  shader ,const char* name ,const harfang_float_list  v);
extern void harfang_set_surface_shader_float2_render_system_async(harfang_render_system_async this_ ,const harfang_surface_shader  shader ,const char* name ,const harfang_vector2_list  v);
extern void harfang_set_surface_shader_float3_render_system_async(harfang_render_system_async this_ ,const harfang_surface_shader  shader ,const char* name ,const harfang_vector3_list  v);
extern void harfang_set_surface_shader_float4_render_system_async(harfang_render_system_async this_ ,const harfang_surface_shader  shader ,const char* name ,const harfang_vector4_list  v);
extern void harfang_set_surface_shader_matrix3_render_system_async(harfang_render_system_async this_ ,const harfang_surface_shader  shader ,const char* name ,const harfang_matrix3_list  v);
extern void harfang_set_surface_shader_matrix4_render_system_async(harfang_render_system_async this_ ,const harfang_surface_shader  shader ,const char* name ,const harfang_matrix4_list  v);
extern void harfang_set_surface_shader_matrix44_render_system_async(harfang_render_system_async this_ ,const harfang_surface_shader  shader ,const char* name ,const harfang_matrix44_list  v);
extern void harfang_set_surface_shader_texture_render_system_async(harfang_render_system_async this_ ,const harfang_surface_shader  shader ,const char* name ,const harfang_texture  t);
extern void harfang_begin_draw_frame_render_system_async(harfang_render_system_async this_);
extern void harfang_end_draw_frame_render_system_async(harfang_render_system_async this_);
extern harfang_future_bool  harfang_initialize_render_system_async(harfang_render_system_async this_ ,harfang_renderer  renderer);
extern harfang_future_bool  harfang_initialize_render_system_async_with_support3d(harfang_render_system_async this_ ,harfang_renderer  renderer ,bool  support_3d);
extern harfang_future_void  harfang_free_render_system_async(harfang_render_system_async this_);
extern void harfang_set_shader_engine_values_render_system_async(harfang_render_system_async this_);
extern harfang_raster_font  harfang_constructor_raster_font(const char* font_path ,float  font_size);
extern harfang_raster_font  harfang_constructor_raster_font_with_page_resolution(const char* font_path ,float  font_size ,unsigned int page_resolution);
extern harfang_raster_font  harfang_constructor_raster_font_with_page_resolution_glyph_margin(const char* font_path ,float  font_size ,unsigned int page_resolution ,unsigned int glyph_margin);
extern harfang_raster_font  harfang_constructor_raster_font_with_page_resolution_glyph_margin_autohint(const char* font_path ,float  font_size ,unsigned int page_resolution ,unsigned int glyph_margin ,bool  autohint);
extern void harfang_raster_font_free(harfang_raster_font);
extern bool  harfang_prepare_raster_font(harfang_raster_font this_ ,harfang_render_system_nobind  render_system ,const char* text);
extern bool  harfang_write_raster_font(harfang_raster_font this_ ,harfang_render_system_nobind  render_system ,const char* text ,const harfang_matrix4  matrix);
extern bool  harfang_write_raster_font_with_color(harfang_raster_font this_ ,harfang_render_system_nobind  render_system ,const char* text ,const harfang_matrix4  matrix ,harfang_color  color);
extern bool  harfang_write_raster_font_with_color_scale(harfang_raster_font this_ ,harfang_render_system_nobind  render_system ,const char* text ,const harfang_matrix4  matrix ,harfang_color  color ,float  scale);
extern bool  harfang_write_raster_font_with_color_scale_snap_glyph_to_grid_orient_toward_camera(harfang_raster_font this_ ,harfang_render_system_nobind  render_system ,const char* text ,const harfang_matrix4  matrix ,harfang_color  color ,float  scale ,bool  snap_glyph_to_grid ,bool  orient_toward_camera);
extern harfang_rect  harfang_get_text_rect_raster_font(harfang_raster_font this_ ,harfang_render_system_nobind  render_system ,const char* text);
extern bool  harfang_load_raster_font(harfang_raster_font this_ ,const harfang_render_system_nobind  render_system ,const char* base_path);
extern bool  harfang_save_raster_font(harfang_raster_font this_ ,const harfang_render_system_nobind  render_system ,const char* base_path);
extern float  harfang_get_size_raster_font(harfang_raster_font this_);
extern harfang_simple_graphic_engine  harfang_constructor_simple_graphic_engine();
extern void harfang_simple_graphic_engine_free(harfang_simple_graphic_engine);
extern void harfang_set_snap_glyph_to_grid_simple_graphic_engine(harfang_simple_graphic_engine this_ ,bool  snap);
extern bool  harfang_get_snap_glyph_to_grid_simple_graphic_engine(harfang_simple_graphic_engine this_);
extern void harfang_set_blend_mode_simple_graphic_engine(harfang_simple_graphic_engine this_ ,int mode);
extern int harfang_get_blend_mode_simple_graphic_engine(harfang_simple_graphic_engine this_);
extern void harfang_set_cull_mode_simple_graphic_engine(harfang_simple_graphic_engine this_ ,int mode);
extern int harfang_get_cull_mode_simple_graphic_engine(harfang_simple_graphic_engine this_);
extern void harfang_set_depth_write_simple_graphic_engine(harfang_simple_graphic_engine this_ ,bool  enable);
extern bool  harfang_get_depth_write_simple_graphic_engine(harfang_simple_graphic_engine this_);
extern void harfang_set_depth_test_simple_graphic_engine(harfang_simple_graphic_engine this_ ,bool  enable);
extern bool  harfang_get_depth_test_simple_graphic_engine(harfang_simple_graphic_engine this_);
extern void harfang_line_simple_graphic_engine(harfang_simple_graphic_engine this_ ,float  sx ,float  sy ,float  sz ,float  ex ,float  ey ,float  ez ,const harfang_color  start_color ,const harfang_color  end_color);
extern void harfang_triangle_simple_graphic_engine(harfang_simple_graphic_engine this_ ,float  ax ,float  ay ,float  az ,float  bx ,float  by ,float  bz ,float  cx ,float  cy ,float  cz ,const harfang_color  a_color ,const harfang_color  b_color ,const harfang_color  c_color);
extern void harfang_text_simple_graphic_engine_with_xyz_text_color_font_scale(harfang_simple_graphic_engine this_ ,float  x ,float  y ,float  z ,const char* text ,const harfang_color  color ,harfang_raster_font  font ,float  scale);
extern void harfang_text_simple_graphic_engine(harfang_simple_graphic_engine this_ ,const harfang_matrix4  mat ,const char* text ,const harfang_color  color ,harfang_raster_font  font ,float  scale);
extern void harfang_quad_simple_graphic_engine(harfang_simple_graphic_engine this_ ,float  ax ,float  ay ,float  az ,float  bx ,float  by ,float  bz ,float  cx ,float  cy ,float  cz ,float  dx ,float  dy ,float  dz ,const harfang_color  a_color ,const harfang_color  b_color ,const harfang_color  c_color ,const harfang_color  d_color);
extern void harfang_quad_simple_graphic_engine_with_uv_sx_uv_sy_uv_ex_uv_ey_texture_a_color_b_color_c_color_d_color(harfang_simple_graphic_engine this_ ,float  ax ,float  ay ,float  az ,float  bx ,float  by ,float  bz ,float  cx ,float  cy ,float  cz ,float  dx ,float  dy ,float  dz ,float  uv_sx ,float  uv_sy ,float  uv_ex ,float  uv_ey ,harfang_texture  texture ,const harfang_color  a_color ,const harfang_color  b_color ,const harfang_color  c_color ,const harfang_color  d_color);
extern void harfang_geometry_simple_graphic_engine(harfang_simple_graphic_engine this_ ,float  x ,float  y ,float  z ,float  ex ,float  ey ,float  ez ,float  sx ,float  sy ,float  sz ,harfang_render_geometry  geometry);
extern void harfang_draw_simple_graphic_engine(harfang_simple_graphic_engine this_ ,harfang_render_system_nobind  render_system);
extern void harfang_clear_simple_graphic_engine(harfang_simple_graphic_engine this_ ,harfang_render_system_nobind  render_system);
extern void harfang_flush_simple_graphic_engine(harfang_simple_graphic_engine this_ ,harfang_render_system_nobind  render_system);
extern harfang_iso_surface  harfang_constructor_iso_surface();
extern void harfang_iso_surface_free(harfang_iso_surface);
extern void harfang_clear_iso_surface(harfang_iso_surface this_);
extern void harfang_add_triangle_iso_surface(harfang_iso_surface this_ ,const harfang_vector3  p0 ,const harfang_vector3  p1 ,const harfang_vector3  p2);
extern size_t  harfang_get_triangle_count_iso_surface(harfang_iso_surface this_);
extern void harfang_frame_renderer_free(harfang_frame_renderer);
extern bool  harfang_initialize_frame_renderer(harfang_frame_renderer this_ ,harfang_render_system_nobind  render_system);
extern void harfang_shutdown_frame_renderer(harfang_frame_renderer this_ ,harfang_render_system_nobind  render_system);
extern bool  harfang_set_frame_renderer(harfang_frame_renderer this_ ,const char* name ,const char* value);
extern const char* harfang_get_frame_renderer(harfang_frame_renderer this_ ,const char* name);
extern uint8_t harfang_audio_format_get_encoding(harfang_audio_format h);
extern void harfang_audio_format_set_encoding(harfang_audio_format h, uint8_t v);
extern uint8_t  harfang_audio_format_get_channels(harfang_audio_format h);
extern void harfang_audio_format_set_channels(harfang_audio_format h, uint8_t  v);
extern unsigned int harfang_audio_format_get_frequency(harfang_audio_format h);
extern void harfang_audio_format_set_frequency(harfang_audio_format h, unsigned int v);
extern uint8_t  harfang_audio_format_get_resolution(harfang_audio_format h);
extern void harfang_audio_format_set_resolution(harfang_audio_format h, uint8_t  v);
extern uint8_t harfang_audio_format_get_type(harfang_audio_format h);
extern void harfang_audio_format_set_type(harfang_audio_format h, uint8_t v);
extern harfang_audio_format  harfang_constructor_audio_format();
extern harfang_audio_format  harfang_constructor_audio_format_with_encoding(uint8_t encoding);
extern harfang_audio_format  harfang_constructor_audio_format_with_encoding_channels(uint8_t encoding ,uint8_t  channels);
extern harfang_audio_format  harfang_constructor_audio_format_with_encoding_channels_frequency(uint8_t encoding ,uint8_t  channels ,unsigned int frequency);
extern harfang_audio_format  harfang_constructor_audio_format_with_encoding_channels_frequency_resolution(uint8_t encoding ,uint8_t  channels ,unsigned int frequency ,uint8_t  resolution);
extern harfang_audio_format  harfang_constructor_audio_format_with_encoding_channels_frequency_resolution_type(uint8_t encoding ,uint8_t  channels ,unsigned int frequency ,uint8_t  resolution ,uint8_t type);
extern void harfang_audio_format_free(harfang_audio_format);
extern void harfang_audio_data_free(harfang_audio_data);
extern harfang_audio_format  harfang_get_format_audio_data(harfang_audio_data this_);
extern bool  harfang_open_audio_data(harfang_audio_data this_ ,const char* path);
extern void harfang_close_audio_data(harfang_audio_data this_);
extern int harfang_get_state_audio_data(harfang_audio_data this_);
extern bool  harfang_seek_audio_data(harfang_audio_data this_ ,int64_t  t);
extern size_t  harfang_get_frame_audio_data(harfang_audio_data this_ ,harfang_binary_data  frame ,int64_t * frame_timestamp);
extern size_t  harfang_get_frame_size_audio_data(harfang_audio_data this_);
extern void harfang_set_transform_audio_data(harfang_audio_data this_ ,const harfang_matrix4  m);
extern size_t  harfang_get_data_size_audio_data(harfang_audio_data this_);
extern void harfang_audio_io_free(harfang_audio_io);
extern harfang_audio_data  harfang_open_audio_io(harfang_audio_io this_ ,const char* path);
extern harfang_audio_data  harfang_open_audio_io_with_codec_name(harfang_audio_io this_ ,const char* path ,const char* codec_name);
extern const char* harfang_get_supported_ext_audio_io(harfang_audio_io this_);
extern uint8_t  harfang_mixer_channel_state_get_priority(harfang_mixer_channel_state h);
extern void harfang_mixer_channel_state_set_priority(harfang_mixer_channel_state h, uint8_t  v);
extern uint8_t harfang_mixer_channel_state_get_loop_mode(harfang_mixer_channel_state h);
extern void harfang_mixer_channel_state_set_loop_mode(harfang_mixer_channel_state h, uint8_t v);
extern float  harfang_mixer_channel_state_get_volume(harfang_mixer_channel_state h);
extern void harfang_mixer_channel_state_set_volume(harfang_mixer_channel_state h, float  v);
extern float  harfang_mixer_channel_state_get_pitch(harfang_mixer_channel_state h);
extern void harfang_mixer_channel_state_set_pitch(harfang_mixer_channel_state h, float  v);
extern bool  harfang_mixer_channel_state_get_direct(harfang_mixer_channel_state h);
extern void harfang_mixer_channel_state_set_direct(harfang_mixer_channel_state h, bool  v);
extern harfang_mixer_channel_state  harfang_constructor_mixer_channel_state();
extern harfang_mixer_channel_state  harfang_constructor_mixer_channel_state_with_volume(float  volume);
extern harfang_mixer_channel_state  harfang_constructor_mixer_channel_state_with_volume_direct(float  volume ,bool  direct);
extern harfang_mixer_channel_state  harfang_constructor_mixer_channel_state_with_priority(uint8_t  priority);
extern harfang_mixer_channel_state  harfang_constructor_mixer_channel_state_with_priority_volume(uint8_t  priority ,float  volume);
extern harfang_mixer_channel_state  harfang_constructor_mixer_channel_state_with_priority_volume_loop_mode(uint8_t  priority ,float  volume ,uint8_t loop_mode);
extern harfang_mixer_channel_state  harfang_constructor_mixer_channel_state_with_priority_volume_loop_mode_pitch(uint8_t  priority ,float  volume ,uint8_t loop_mode ,float  pitch);
extern harfang_mixer_channel_state  harfang_constructor_mixer_channel_state_with_priority_volume_loop_mode_pitch_direct(uint8_t  priority ,float  volume ,uint8_t loop_mode ,float  pitch ,bool  direct);
extern void harfang_mixer_channel_state_free(harfang_mixer_channel_state);
extern harfang_vector3  harfang_mixer_channel_location_get_position(harfang_mixer_channel_location h);
extern void harfang_mixer_channel_location_set_position(harfang_mixer_channel_location h, harfang_vector3  v);
extern harfang_vector3  harfang_mixer_channel_location_get_velocity(harfang_mixer_channel_location h);
extern void harfang_mixer_channel_location_set_velocity(harfang_mixer_channel_location h, harfang_vector3  v);
extern harfang_mixer_channel_location  harfang_constructor_mixer_channel_location();
extern harfang_mixer_channel_location  harfang_constructor_mixer_channel_location_with_pos(const harfang_vector3  pos);
extern void harfang_mixer_channel_location_free(harfang_mixer_channel_location);
extern harfang_sound  harfang_constructor_sound();
extern harfang_sound  harfang_constructor_sound_with_name(const char* name);
extern void harfang_sound_free(harfang_sound);
extern const char** harfang_get_name_sound(harfang_sound this_);
extern bool  harfang_is_ready_sound(harfang_sound this_);
extern void harfang_set_ready_sound(harfang_sound this_);
extern void harfang_set_not_ready_sound(harfang_sound this_);
extern harfang_mixer_channel_state  harfang_mixer_get_default_state();
extern harfang_mixer_channel_state  harfang_mixer_get_repeat_state();
extern harfang_mixer_channel_location  harfang_mixer_get_default_location();
extern uint8_t  harfang_mixer_get_default_priority();
extern int32_t  harfang_mixer_get_channel_error();
extern void harfang_mixer_free(harfang_mixer);
extern bool  harfang_open_mixer(harfang_mixer this_);
extern void harfang_close_mixer(harfang_mixer this_);
extern float  harfang_get_master_volume_mixer(harfang_mixer this_);
extern void harfang_set_master_volume_mixer(harfang_mixer this_ ,float  volume);
extern bool  harfang_enable_spatialization_mixer(harfang_mixer this_ ,bool  enable);
extern int32_t  harfang_start_mixer(harfang_mixer this_ ,harfang_sound_nobind  sound);
extern int32_t  harfang_start_mixer_with_state(harfang_mixer this_ ,harfang_sound_nobind  sound ,harfang_mixer_channel_state  state);
extern int32_t  harfang_start_mixer_with_location(harfang_mixer this_ ,harfang_sound_nobind  sound ,harfang_mixer_channel_location  location);
extern int32_t  harfang_start_mixer_with_location_state(harfang_mixer this_ ,harfang_sound_nobind  sound ,harfang_mixer_channel_location  location ,harfang_mixer_channel_state  state);
extern int32_t  harfang_stream_data_mixer(harfang_mixer this_ ,harfang_audio_data  data);
extern int32_t  harfang_stream_data_mixer_with_paused(harfang_mixer this_ ,harfang_audio_data  data ,bool  paused);
extern int32_t  harfang_stream_data_mixer_with_paused_t_start(harfang_mixer this_ ,harfang_audio_data  data ,bool  paused ,int64_t  t_start);
extern int32_t  harfang_stream_data_mixer_with_state(harfang_mixer this_ ,harfang_audio_data  data ,harfang_mixer_channel_state  state);
extern int32_t  harfang_stream_data_mixer_with_state_paused(harfang_mixer this_ ,harfang_audio_data  data ,harfang_mixer_channel_state  state ,bool  paused);
extern int32_t  harfang_stream_data_mixer_with_state_paused_t_start(harfang_mixer this_ ,harfang_audio_data  data ,harfang_mixer_channel_state  state ,bool  paused ,int64_t  t_start);
extern int32_t  harfang_stream_data_mixer_with_location(harfang_mixer this_ ,harfang_audio_data  data ,harfang_mixer_channel_location  location);
extern int32_t  harfang_stream_data_mixer_with_location_paused(harfang_mixer this_ ,harfang_audio_data  data ,harfang_mixer_channel_location  location ,bool  paused);
extern int32_t  harfang_stream_data_mixer_with_location_paused_t_start(harfang_mixer this_ ,harfang_audio_data  data ,harfang_mixer_channel_location  location ,bool  paused ,int64_t  t_start);
extern int32_t  harfang_stream_data_mixer_with_location_state(harfang_mixer this_ ,harfang_audio_data  data ,harfang_mixer_channel_location  location ,harfang_mixer_channel_state  state);
extern int32_t  harfang_stream_data_mixer_with_location_state_paused(harfang_mixer this_ ,harfang_audio_data  data ,harfang_mixer_channel_location  location ,harfang_mixer_channel_state  state ,bool  paused);
extern int32_t  harfang_stream_data_mixer_with_location_state_paused_t_start(harfang_mixer this_ ,harfang_audio_data  data ,harfang_mixer_channel_location  location ,harfang_mixer_channel_state  state ,bool  paused ,int64_t  t_start);
extern uint8_t harfang_get_play_state_mixer(harfang_mixer this_ ,int32_t  channel);
extern harfang_mixer_channel_state  harfang_get_channel_state_mixer(harfang_mixer this_ ,int32_t  channel);
extern void harfang_set_channel_state_mixer(harfang_mixer this_ ,int32_t  channel ,harfang_mixer_channel_state  state);
extern harfang_mixer_channel_location  harfang_get_channel_location_mixer(harfang_mixer this_ ,int32_t  channel);
extern void harfang_set_channel_location_mixer(harfang_mixer this_ ,int32_t  channel ,harfang_mixer_channel_location  location);
extern int64_t  harfang_get_channel_timestamp_mixer(harfang_mixer this_ ,int32_t  channel);
extern void harfang_stop_mixer(harfang_mixer this_ ,int32_t  channel);
extern void harfang_pause_mixer(harfang_mixer this_ ,int32_t  channel);
extern void harfang_resume_mixer(harfang_mixer this_ ,int32_t  channel);
extern void harfang_stop_all_mixer(harfang_mixer this_);
extern void harfang_set_stream_loop_point_mixer(harfang_mixer this_ ,int32_t  channel ,int64_t  t);
extern void harfang_seek_stream_mixer(harfang_mixer this_ ,int32_t  channel ,int64_t  t);
extern int  harfang_get_stream_buffering_percentage_mixer(harfang_mixer this_ ,int32_t  channel);
extern void harfang_set_channel_stream_data_transform_mixer(harfang_mixer this_ ,int32_t  channel ,const harfang_matrix4  transform);
extern void harfang_flush_channel_buffers_mixer(harfang_mixer this_ ,int32_t  channel);
extern harfang_matrix4  harfang_get_listener_mixer(harfang_mixer this_);
extern void harfang_set_listener_mixer(harfang_mixer this_ ,const harfang_matrix4  transform);
extern int32_t  harfang_stream_mixer(harfang_mixer this_ ,const char* path);
extern int32_t  harfang_stream_mixer_with_paused(harfang_mixer this_ ,const char* path ,bool  paused);
extern int32_t  harfang_stream_mixer_with_paused_t_start(harfang_mixer this_ ,const char* path ,bool  paused ,int64_t  t_start);
extern int32_t  harfang_stream_mixer_with_state(harfang_mixer this_ ,const char* path ,harfang_mixer_channel_state  state);
extern int32_t  harfang_stream_mixer_with_state_paused(harfang_mixer this_ ,const char* path ,harfang_mixer_channel_state  state ,bool  paused);
extern int32_t  harfang_stream_mixer_with_state_paused_t_start(harfang_mixer this_ ,const char* path ,harfang_mixer_channel_state  state ,bool  paused ,int64_t  t_start);
extern int32_t  harfang_stream_mixer_with_location(harfang_mixer this_ ,const char* path ,harfang_mixer_channel_location  location);
extern int32_t  harfang_stream_mixer_with_location_paused(harfang_mixer this_ ,const char* path ,harfang_mixer_channel_location  location ,bool  paused);
extern int32_t  harfang_stream_mixer_with_location_paused_t_start(harfang_mixer this_ ,const char* path ,harfang_mixer_channel_location  location ,bool  paused ,int64_t  t_start);
extern int32_t  harfang_stream_mixer_with_location_state(harfang_mixer this_ ,const char* path ,harfang_mixer_channel_location  location ,harfang_mixer_channel_state  state);
extern int32_t  harfang_stream_mixer_with_location_state_paused(harfang_mixer this_ ,const char* path ,harfang_mixer_channel_location  location ,harfang_mixer_channel_state  state ,bool  paused);
extern int32_t  harfang_stream_mixer_with_location_state_paused_t_start(harfang_mixer this_ ,const char* path ,harfang_mixer_channel_location  location ,harfang_mixer_channel_state  state ,bool  paused ,int64_t  t_start);
extern harfang_sound  harfang_load_sound_data_mixer(harfang_mixer this_ ,harfang_audio_data  data);
extern harfang_sound  harfang_load_sound_data_mixer_with_path(harfang_mixer this_ ,harfang_audio_data  data ,const char* path);
extern harfang_sound  harfang_load_sound_mixer(harfang_mixer this_ ,const char* path);
extern void harfang_free_sound_mixer(harfang_mixer this_ ,harfang_sound_nobind  sound);
extern harfang_mixer_async  harfang_constructor_mixer_async(harfang_mixer  mixer);
extern void harfang_mixer_async_free(harfang_mixer_async);
extern harfang_future_bool  harfang_open_mixer_async(harfang_mixer_async this_);
extern harfang_future_void  harfang_close_mixer_async(harfang_mixer_async this_);
extern harfang_future_bool  harfang_enable_spatialization_mixer_async(harfang_mixer_async this_ ,bool  enable);
extern harfang_future_float  harfang_get_master_volume_mixer_async(harfang_mixer_async this_);
extern void harfang_set_master_volume_mixer_async(harfang_mixer_async this_ ,float  volume);
extern harfang_future_mixer_channel  harfang_start_mixer_async(harfang_mixer_async this_ ,harfang_sound  sound);
extern harfang_future_mixer_channel  harfang_start_mixer_async_with_state(harfang_mixer_async this_ ,harfang_sound  sound ,harfang_mixer_channel_state  state);
extern harfang_future_mixer_channel  harfang_start_mixer_async_with_location(harfang_mixer_async this_ ,harfang_sound  sound ,harfang_mixer_channel_location  location);
extern harfang_future_mixer_channel  harfang_start_mixer_async_with_location_state(harfang_mixer_async this_ ,harfang_sound  sound ,harfang_mixer_channel_location  location ,harfang_mixer_channel_state  state);
extern harfang_future_mixer_channel  harfang_stream_mixer_async(harfang_mixer_async this_ ,const char* path);
extern harfang_future_mixer_channel  harfang_stream_mixer_async_with_paused(harfang_mixer_async this_ ,const char* path ,bool  paused);
extern harfang_future_mixer_channel  harfang_stream_mixer_async_with_paused_t_start(harfang_mixer_async this_ ,const char* path ,bool  paused ,int64_t  t_start);
extern harfang_future_mixer_channel  harfang_stream_mixer_async_with_state(harfang_mixer_async this_ ,const char* path ,harfang_mixer_channel_state  state);
extern harfang_future_mixer_channel  harfang_stream_mixer_async_with_state_paused(harfang_mixer_async this_ ,const char* path ,harfang_mixer_channel_state  state ,bool  paused);
extern harfang_future_mixer_channel  harfang_stream_mixer_async_with_state_paused_t_start(harfang_mixer_async this_ ,const char* path ,harfang_mixer_channel_state  state ,bool  paused ,int64_t  t_start);
extern harfang_future_mixer_channel  harfang_stream_mixer_async_with_location(harfang_mixer_async this_ ,const char* path ,harfang_mixer_channel_location  location);
extern harfang_future_mixer_channel  harfang_stream_mixer_async_with_location_paused(harfang_mixer_async this_ ,const char* path ,harfang_mixer_channel_location  location ,bool  paused);
extern harfang_future_mixer_channel  harfang_stream_mixer_async_with_location_paused_t_start(harfang_mixer_async this_ ,const char* path ,harfang_mixer_channel_location  location ,bool  paused ,int64_t  t_start);
extern harfang_future_mixer_channel  harfang_stream_mixer_async_with_location_state(harfang_mixer_async this_ ,const char* path ,harfang_mixer_channel_location  location ,harfang_mixer_channel_state  state);
extern harfang_future_mixer_channel  harfang_stream_mixer_async_with_location_state_paused(harfang_mixer_async this_ ,const char* path ,harfang_mixer_channel_location  location ,harfang_mixer_channel_state  state ,bool  paused);
extern harfang_future_mixer_channel  harfang_stream_mixer_async_with_location_state_paused_t_start(harfang_mixer_async this_ ,const char* path ,harfang_mixer_channel_location  location ,harfang_mixer_channel_state  state ,bool  paused ,int64_t  t_start);
extern harfang_future_mixer_play_state  harfang_get_play_state_mixer_async(harfang_mixer_async this_ ,int32_t  channel);
extern harfang_future_mixer_channel_state  harfang_get_channel_state_mixer_async(harfang_mixer_async this_ ,int32_t  channel);
extern void harfang_set_channel_state_mixer_async(harfang_mixer_async this_ ,int32_t  channel ,harfang_mixer_channel_state  state);
extern harfang_future_mixer_channel_location  harfang_get_channel_location_mixer_async(harfang_mixer_async this_ ,int32_t  channel);
extern void harfang_set_channel_location_mixer_async(harfang_mixer_async this_ ,int32_t  channel ,harfang_mixer_channel_location  location);
extern harfang_future_time  harfang_get_channel_timestamp_mixer_async(harfang_mixer_async this_ ,int32_t  channel);
extern void harfang_stop_mixer_async(harfang_mixer_async this_ ,int32_t  channel);
extern void harfang_pause_mixer_async(harfang_mixer_async this_ ,int32_t  channel);
extern void harfang_resume_mixer_async(harfang_mixer_async this_ ,int32_t  channel);
extern void harfang_stop_all_mixer_async(harfang_mixer_async this_);
extern void harfang_set_stream_loop_point_mixer_async(harfang_mixer_async this_ ,int32_t  channel ,int64_t  t);
extern void harfang_seek_stream_mixer_async(harfang_mixer_async this_ ,int32_t  channel ,int64_t  t);
extern harfang_future_int  harfang_get_stream_buffering_percentage_mixer_async(harfang_mixer_async this_ ,int32_t  channel);
extern void harfang_set_channel_stream_data_transform_mixer_async(harfang_mixer_async this_ ,int32_t  channel ,const harfang_matrix4  transform);
extern void harfang_flush_channel_buffers_mixer_async(harfang_mixer_async this_ ,int32_t  channel);
extern harfang_future_matrix4  harfang_get_listener_mixer_async(harfang_mixer_async this_);
extern void harfang_set_listener_mixer_async(harfang_mixer_async this_ ,const harfang_matrix4  transform);
extern harfang_sound  harfang_load_sound_mixer_async(harfang_mixer_async this_ ,const char* path);
extern void harfang_free_sound_mixer_async(harfang_mixer_async this_ ,const harfang_sound  sound);
extern void harfang_future_mixer_channel_free(harfang_future_mixer_channel);
extern int32_t  harfang_get_future_mixer_channel(harfang_future_mixer_channel this_);
extern bool  harfang_valid_future_mixer_channel(harfang_future_mixer_channel this_);
extern void harfang_wait_future_mixer_channel(harfang_future_mixer_channel this_);
extern void harfang_future_mixer_channel_state_free(harfang_future_mixer_channel_state);
extern harfang_mixer_channel_state  harfang_get_future_mixer_channel_state(harfang_future_mixer_channel_state this_);
extern bool  harfang_valid_future_mixer_channel_state(harfang_future_mixer_channel_state this_);
extern void harfang_wait_future_mixer_channel_state(harfang_future_mixer_channel_state this_);
extern void harfang_future_mixer_channel_location_free(harfang_future_mixer_channel_location);
extern harfang_mixer_channel_location  harfang_get_future_mixer_channel_location(harfang_future_mixer_channel_location this_);
extern bool  harfang_valid_future_mixer_channel_location(harfang_future_mixer_channel_location this_);
extern void harfang_wait_future_mixer_channel_location(harfang_future_mixer_channel_location this_);
extern void harfang_future_mixer_play_state_free(harfang_future_mixer_play_state);
extern uint8_t harfang_get_future_mixer_play_state(harfang_future_mixer_play_state this_);
extern bool  harfang_valid_future_mixer_play_state(harfang_future_mixer_play_state this_);
extern void harfang_wait_future_mixer_play_state(harfang_future_mixer_play_state this_);
extern void harfang_movie_free(harfang_movie);
extern bool  harfang_open_movie_with_mixer_filename(harfang_movie this_ ,harfang_renderer  renderer ,harfang_mixer  mixer ,const char* filename);
extern bool  harfang_open_movie_with_mixer_filename_paused(harfang_movie this_ ,harfang_renderer  renderer ,harfang_mixer  mixer ,const char* filename ,bool  paused);
extern bool  harfang_open_movie(harfang_movie this_ ,harfang_renderer  renderer ,const char* filename);
extern bool  harfang_open_movie_with_paused(harfang_movie this_ ,harfang_renderer  renderer ,const char* filename ,bool  paused);
extern bool  harfang_play_movie(harfang_movie this_);
extern bool  harfang_pause_movie(harfang_movie this_);
extern bool  harfang_close_movie(harfang_movie this_);
extern int64_t  harfang_get_duration_movie(harfang_movie this_);
extern int64_t  harfang_get_time_stamp_movie(harfang_movie this_);
extern bool  harfang_seek_movie(harfang_movie this_ ,int64_t  t);
extern bool  harfang_is_ended_movie(harfang_movie this_);
extern int harfang_get_format_movie(harfang_movie this_);
extern bool  harfang_get_frame_movie(harfang_movie this_ ,harfang_texture_list  planes);
extern harfang_node  harfang_constructor_node();
extern harfang_node  harfang_constructor_node_with_name(const char* name);
extern void harfang_node_free(harfang_node);
extern harfang_scene  harfang_get_scene_node(harfang_node this_);
extern unsigned int harfang_get_uid_node(harfang_node this_);
extern const char** harfang_get_name_node(harfang_node this_);
extern void harfang_set_name_node(harfang_node this_ ,const char* name);
extern void harfang_add_component_node(harfang_node this_ ,harfang_component  component);
extern void harfang_add_component_node_with_index(harfang_node this_ ,harfang_component  component ,int  index);
extern void harfang_remove_component_node(harfang_node this_ ,const harfang_component  component);
extern const harfang_component_list  harfang_get_components_node(harfang_node this_);
extern harfang_component_list  harfang_get_components_node_with_aspect(harfang_node this_ ,const char* aspect);
extern harfang_transform  harfang_get_transform_node(harfang_node this_);
extern harfang_camera  harfang_get_camera_node(harfang_node this_);
extern harfang_object  harfang_get_object_node(harfang_node this_);
extern harfang_light  harfang_get_light_node(harfang_node this_);
extern harfang_instance  harfang_get_instance_node(harfang_node this_);
extern harfang_target  harfang_get_target_node(harfang_node this_);
extern harfang_rigid_body  harfang_get_rigid_body_node(harfang_node this_);
extern harfang_box_collision  harfang_get_box_collision_node(harfang_node this_);
extern harfang_sphere_collision  harfang_get_sphere_collision_node(harfang_node this_);
extern harfang_mesh_collision  harfang_get_mesh_collision_node(harfang_node this_);
extern harfang_capsule_collision  harfang_get_capsule_collision_node(harfang_node this_);
extern harfang_convex_collision  harfang_get_convex_collision_node(harfang_node this_);
extern harfang_spherical_joint  harfang_get_spherical_joint_node(harfang_node this_);
extern harfang_d6_joint  harfang_get_d6_joint_node(harfang_node this_);
extern harfang_render_script  harfang_get_render_script_node(harfang_node this_);
extern harfang_logic_script  harfang_get_logic_script_node(harfang_node this_);
extern harfang_terrain  harfang_get_terrain_node(harfang_node this_);
extern bool  harfang_has_aspect_node(harfang_node this_ ,const char* aspect);
extern bool  harfang_is_ready_node(harfang_node this_);
extern const harfang_node  harfang_get_instantiated_by_node_node(harfang_node this_);
extern const harfang_scene  harfang_get_instantiated_by_scene_node(harfang_node this_);
extern void harfang_set_instantiated_by_node(harfang_node this_ ,harfang_node  node);
extern void harfang_set_instantiated_by_node_with_scene(harfang_node this_ ,harfang_scene  scene);
extern bool  harfang_is_instantiated_node(harfang_node this_);
extern bool  harfang_get_enabled_node(harfang_node this_);
extern void harfang_set_enabled_node(harfang_node this_ ,const bool  enable);
extern bool  harfang_get_is_static_node(harfang_node this_);
extern void harfang_set_is_static_node(harfang_node this_ ,const bool  is_static);
extern bool  harfang_get_do_not_serialize_node(harfang_node this_);
extern void harfang_set_do_not_serialize_node(harfang_node this_ ,const bool  do_not_serialize);
extern bool  harfang_get_do_not_instantiate_node(harfang_node this_);
extern void harfang_set_do_not_instantiate_node(harfang_node this_ ,const bool  do_not_instantiate);
extern bool  harfang_get_use_for_navigation_node(harfang_node this_);
extern void harfang_set_use_for_navigation_node(harfang_node this_ ,const bool  use_for_navigation);
extern harfang_node  harfang_get_node_node(harfang_node this_ ,unsigned int uid);
extern harfang_node  harfang_get_node_node_with_name(harfang_node this_ ,const char* name);
extern harfang_node  harfang_get_node_node_with_name_node(harfang_node this_ ,const char* name ,const harfang_node  node);
extern harfang_scene  harfang_constructor_scene();
extern void harfang_scene_free(harfang_scene);
extern const harfang_node  harfang_get_current_camera_scene(harfang_scene this_);
extern void harfang_set_current_camera_scene(harfang_scene this_ ,harfang_node  node);
extern void harfang_add_group_scene(harfang_scene this_ ,harfang_group  group);
extern void harfang_remove_group_scene(harfang_scene this_ ,const harfang_group  group);
extern harfang_group  harfang_find_group_scene(harfang_scene this_ ,const char* name);
extern harfang_group_list  harfang_get_node_group_list_scene(harfang_scene this_ ,const harfang_node  node);
extern void harfang_unregister_node_from_groups_scene(harfang_scene this_ ,const harfang_node  node);
extern const harfang_group_list  harfang_get_groups_scene(harfang_scene this_);
extern void harfang_group_members_set_active_scene(harfang_scene this_ ,const harfang_group_nobind  group ,bool  active);
extern void harfang_remove_group_and_members_scene(harfang_scene this_ ,const harfang_group  group);
extern void harfang_clear_scene(harfang_scene this_);
extern void harfang_dispose_scene(harfang_scene this_);
extern bool  harfang_is_ready_scene(harfang_scene this_);
extern void harfang_add_system_scene(harfang_scene this_ ,harfang_scene_system  system);
extern harfang_renderable_system  harfang_get_renderable_system_scene(harfang_scene this_);
extern harfang_physic_system  harfang_get_physic_system_scene(harfang_scene this_);
extern void harfang_add_node_scene(harfang_scene this_ ,harfang_node  node);
extern void harfang_remove_node_scene(harfang_scene this_ ,const harfang_node  node);
extern void harfang_add_component_to_systems_scene(harfang_scene this_ ,harfang_component  node);
extern void harfang_remove_component_from_systems_scene(harfang_scene this_ ,const harfang_component  component);
extern harfang_node  harfang_get_node_scene(harfang_scene this_ ,unsigned int uid);
extern harfang_node  harfang_get_node_scene_with_name(harfang_scene this_ ,const char* name);
extern harfang_node  harfang_get_node_scene_with_name_parent(harfang_scene this_ ,const char* name ,const harfang_node  parent);
extern const harfang_node_list  harfang_get_nodes_scene(harfang_scene this_);
extern harfang_node_list  harfang_get_nodes_scene_with_filter(harfang_scene this_ ,const char* filter);
extern harfang_node_list  harfang_get_node_children_scene(harfang_scene this_ ,const harfang_node_nobind  node);
extern harfang_node_list  harfang_get_nodes_with_aspect_scene(harfang_scene this_ ,const char* aspect);
extern bool  harfang_load_scene(harfang_scene this_ ,const char* path ,harfang_render_system  render_system ,harfang_node_list  nodes);
extern bool  harfang_save_scene(harfang_scene this_ ,const char* path ,harfang_render_system  render_system);
extern void harfang_update_scene(harfang_scene this_);
extern void harfang_update_scene_with_dt(harfang_scene this_ ,int64_t  dt);
extern bool  harfang_wait_update_scene(harfang_scene this_);
extern bool  harfang_wait_update_scene_with_blocking(harfang_scene this_ ,bool  blocking);
extern void harfang_commit_scene(harfang_scene this_);
extern bool  harfang_wait_commit_scene(harfang_scene this_);
extern bool  harfang_wait_commit_scene_with_blocking(harfang_scene this_ ,bool  blocking);
extern void harfang_update_and_commit_wait_all_scene(harfang_scene this_);
extern void harfang_update_and_commit_wait_all_scene_with_dt(harfang_scene this_ ,int64_t  dt);
extern void harfang_add_component_scene(harfang_scene this_ ,harfang_component  component);
extern void harfang_add_component_scene_with_index(harfang_scene this_ ,harfang_component  component ,int  index);
extern void harfang_remove_component_scene(harfang_scene this_ ,const harfang_component  component);
extern const harfang_component_list  harfang_get_components_scene(harfang_scene this_);
extern harfang_component_list  harfang_get_components_scene_with_aspect(harfang_scene this_ ,const char* aspect);
extern harfang_environment  harfang_get_environment_scene(harfang_scene this_);
extern harfang_simple_graphic_scene_overlay  harfang_get_simple_graphic_scene_overlay_scene(harfang_scene this_);
extern bool  harfang_has_aspect_scene(harfang_scene this_ ,const char* aspect);
extern harfang_min_max  harfang_get_min_max_scene(harfang_scene this_);
extern size_t  harfang_get_anim_take_count_scene(harfang_scene this_);
extern void harfang_add_anim_take_scene(harfang_scene this_ ,harfang_anim_take  take);
extern harfang_anim_take  harfang_get_anim_take_scene(harfang_scene this_ ,const char* name);
extern harfang_anim_take  harfang_get_anim_take_scene_with_idx(harfang_scene this_ ,size_t  idx);
extern bool  harfang_remove_anim_take_scene(harfang_scene this_ ,size_t  idx);
extern void harfang_remove_anim_take_scene_with_name(harfang_scene this_ ,const char* name);
extern void harfang_remove_anim_take_scene_with_take(harfang_scene this_ ,const harfang_anim_take  take);
extern harfang_scene_bound_anim  harfang_start_anim_take_scene(harfang_scene this_ ,const harfang_anim_take  take);
extern harfang_scene_bound_anim  harfang_start_anim_take_scene_with_loop(harfang_scene this_ ,const harfang_anim_take  take ,int loop);
extern harfang_scene_bound_anim  harfang_start_anim_take_scene_with_loop_t_start(harfang_scene this_ ,const harfang_anim_take  take ,int loop ,int64_t  t_start);
extern harfang_scene_bound_anim  harfang_start_anim_take_scene_with_loop_t_start_t_scale(harfang_scene this_ ,const harfang_anim_take  take ,int loop ,int64_t  t_start ,float  t_scale);
extern harfang_scene_bound_anim  harfang_start_anim_take_scene_with_name(harfang_scene this_ ,const char* name);
extern harfang_scene_bound_anim  harfang_start_anim_take_scene_with_name_loop(harfang_scene this_ ,const char* name ,int loop);
extern harfang_scene_bound_anim  harfang_start_anim_take_scene_with_name_loop_t_start(harfang_scene this_ ,const char* name ,int loop ,int64_t  t_start);
extern harfang_scene_bound_anim  harfang_start_anim_take_scene_with_name_loop_t_start_t_scale(harfang_scene this_ ,const char* name ,int loop ,int64_t  t_start ,float  t_scale);
extern harfang_scene_bound_anim  harfang_start_anim_take_scene_with_nodes(harfang_scene this_ ,const harfang_anim_take  take ,const harfang_node_list  nodes);
extern harfang_scene_bound_anim  harfang_start_anim_take_scene_with_nodes_loop(harfang_scene this_ ,const harfang_anim_take  take ,const harfang_node_list  nodes ,int loop);
extern harfang_scene_bound_anim  harfang_start_anim_take_scene_with_nodes_loop_t_start(harfang_scene this_ ,const harfang_anim_take  take ,const harfang_node_list  nodes ,int loop ,int64_t  t_start);
extern harfang_scene_bound_anim  harfang_start_anim_take_scene_with_nodes_loop_t_start_t_scale(harfang_scene this_ ,const harfang_anim_take  take ,const harfang_node_list  nodes ,int loop ,int64_t  t_start ,float  t_scale);
extern harfang_scene_bound_anim  harfang_start_anim_take_scene_with_name_nodes(harfang_scene this_ ,const char* name ,const harfang_node_list  nodes);
extern harfang_scene_bound_anim  harfang_start_anim_take_scene_with_name_nodes_loop(harfang_scene this_ ,const char* name ,const harfang_node_list  nodes ,int loop);
extern harfang_scene_bound_anim  harfang_start_anim_take_scene_with_name_nodes_loop_t_start(harfang_scene this_ ,const char* name ,const harfang_node_list  nodes ,int loop ,int64_t  t_start);
extern harfang_scene_bound_anim  harfang_start_anim_take_scene_with_name_nodes_loop_t_start_t_scale(harfang_scene this_ ,const char* name ,const harfang_node_list  nodes ,int loop ,int64_t  t_start ,float  t_scale);
extern harfang_scene_bound_anim  harfang_start_anim_take_range_scene(harfang_scene this_ ,const harfang_anim_take  take ,int64_t  t_range_start ,int64_t  t_range_end);
extern harfang_scene_bound_anim  harfang_start_anim_take_range_scene_with_loop(harfang_scene this_ ,const harfang_anim_take  take ,int64_t  t_range_start ,int64_t  t_range_end ,int loop);
extern harfang_scene_bound_anim  harfang_start_anim_take_range_scene_with_loop_t_start(harfang_scene this_ ,const harfang_anim_take  take ,int64_t  t_range_start ,int64_t  t_range_end ,int loop ,int64_t  t_start);
extern harfang_scene_bound_anim  harfang_start_anim_take_range_scene_with_loop_t_start_t_scale(harfang_scene this_ ,const harfang_anim_take  take ,int64_t  t_range_start ,int64_t  t_range_end ,int loop ,int64_t  t_start ,float  t_scale);
extern harfang_scene_bound_anim  harfang_start_anim_take_range_scene_with_name(harfang_scene this_ ,const char* name ,int64_t  t_range_start ,int64_t  t_range_end);
extern harfang_scene_bound_anim  harfang_start_anim_take_range_scene_with_name_loop(harfang_scene this_ ,const char* name ,int64_t  t_range_start ,int64_t  t_range_end ,int loop);
extern harfang_scene_bound_anim  harfang_start_anim_take_range_scene_with_name_loop_t_start(harfang_scene this_ ,const char* name ,int64_t  t_range_start ,int64_t  t_range_end ,int loop ,int64_t  t_start);
extern harfang_scene_bound_anim  harfang_start_anim_take_range_scene_with_name_loop_t_start_t_scale(harfang_scene this_ ,const char* name ,int64_t  t_range_start ,int64_t  t_range_end ,int loop ,int64_t  t_start ,float  t_scale);
extern harfang_scene_bound_anim  harfang_start_anim_take_range_scene_with_nodes_t_range_start_t_range_end(harfang_scene this_ ,const harfang_anim_take  take ,const harfang_node_list  nodes ,int64_t  t_range_start ,int64_t  t_range_end);
extern harfang_scene_bound_anim  harfang_start_anim_take_range_scene_with_nodes_t_range_start_t_range_end_loop(harfang_scene this_ ,const harfang_anim_take  take ,const harfang_node_list  nodes ,int64_t  t_range_start ,int64_t  t_range_end ,int loop);
extern harfang_scene_bound_anim  harfang_start_anim_take_range_scene_with_nodes_t_range_start_t_range_end_loop_t_start(harfang_scene this_ ,const harfang_anim_take  take ,const harfang_node_list  nodes ,int64_t  t_range_start ,int64_t  t_range_end ,int loop ,int64_t  t_start);
extern harfang_scene_bound_anim  harfang_start_anim_take_range_scene_with_nodes_t_range_start_t_range_end_loop_t_start_t_scale(harfang_scene this_ ,const harfang_anim_take  take ,const harfang_node_list  nodes ,int64_t  t_range_start ,int64_t  t_range_end ,int loop ,int64_t  t_start ,float  t_scale);
extern harfang_scene_bound_anim  harfang_start_anim_take_range_scene_with_name_nodes_t_range_start_t_range_end(harfang_scene this_ ,const char* name ,const harfang_node_list  nodes ,int64_t  t_range_start ,int64_t  t_range_end);
extern harfang_scene_bound_anim  harfang_start_anim_take_range_scene_with_name_nodes_t_range_start_t_range_end_loop(harfang_scene this_ ,const char* name ,const harfang_node_list  nodes ,int64_t  t_range_start ,int64_t  t_range_end ,int loop);
extern harfang_scene_bound_anim  harfang_start_anim_take_range_scene_with_name_nodes_t_range_start_t_range_end_loop_t_start(harfang_scene this_ ,const char* name ,const harfang_node_list  nodes ,int64_t  t_range_start ,int64_t  t_range_end ,int loop ,int64_t  t_start);
extern harfang_scene_bound_anim  harfang_start_anim_take_range_scene_with_name_nodes_t_range_start_t_range_end_loop_t_start_t_scale(harfang_scene this_ ,const char* name ,const harfang_node_list  nodes ,int64_t  t_range_start ,int64_t  t_range_end ,int loop ,int64_t  t_start ,float  t_scale);
extern harfang_scene_bound_anim  harfang_start_group_anim_take_scene(harfang_scene this_ ,const harfang_group  group ,const char* name);
extern harfang_scene_bound_anim  harfang_start_group_anim_take_scene_with_loop(harfang_scene this_ ,const harfang_group  group ,const char* name ,int loop);
extern harfang_scene_bound_anim  harfang_start_group_anim_take_scene_with_loop_t_start(harfang_scene this_ ,const harfang_group  group ,const char* name ,int loop ,int64_t  t_start);
extern harfang_scene_bound_anim  harfang_start_group_anim_take_scene_with_loop_t_start_t_scale(harfang_scene this_ ,const harfang_group  group ,const char* name ,int loop ,int64_t  t_start ,float  t_scale);
extern harfang_scene_bound_anim  harfang_start_group_anim_take_range_scene(harfang_scene this_ ,const harfang_group  group ,const char* name ,int64_t  t_range_start ,int64_t  t_range_end);
extern harfang_scene_bound_anim  harfang_start_group_anim_take_range_scene_with_loop(harfang_scene this_ ,const harfang_group  group ,const char* name ,int64_t  t_range_start ,int64_t  t_range_end ,int loop);
extern harfang_scene_bound_anim  harfang_start_group_anim_take_range_scene_with_loop_t_start(harfang_scene this_ ,const harfang_group  group ,const char* name ,int64_t  t_range_start ,int64_t  t_range_end ,int loop ,int64_t  t_start);
extern harfang_scene_bound_anim  harfang_start_group_anim_take_range_scene_with_loop_t_start_t_scale(harfang_scene this_ ,const harfang_group  group ,const char* name ,int64_t  t_range_start ,int64_t  t_range_end ,int loop ,int64_t  t_start ,float  t_scale);
extern void harfang_stop_anim_scene(harfang_scene this_ ,const harfang_scene_bound_anim  anim);
extern int64_t  harfang_get_anim_t_scene(harfang_scene this_ ,const harfang_scene_bound_anim  anim);
extern void harfang_set_anim_t_scene(harfang_scene this_ ,const harfang_scene_bound_anim  anim ,int64_t  t);
extern float  harfang_get_anim_t_scale_scene(harfang_scene this_ ,const harfang_scene_bound_anim  anim);
extern void harfang_set_anim_t_scale_scene(harfang_scene this_ ,const harfang_scene_bound_anim  anim ,float  t_scale);
extern bool  harfang_is_anim_looped_scene(harfang_scene this_ ,const harfang_scene_bound_anim  anim);
extern void harfang_scene_system_free(harfang_scene_system);
extern const char** harfang_get_aspect_scene_system(harfang_scene_system this_);
extern void harfang_update_scene_system(harfang_scene_system this_ ,int64_t  dt);
extern bool  harfang_wait_update_scene_system(harfang_scene_system this_);
extern bool  harfang_wait_update_scene_system_with_blocking(harfang_scene_system this_ ,bool  blocking);
extern void harfang_commit_scene_system(harfang_scene_system this_);
extern bool  harfang_wait_commit_scene_system(harfang_scene_system this_);
extern bool  harfang_wait_commit_scene_system_with_blocking(harfang_scene_system this_ ,bool  blocking);
extern void harfang_add_component_scene_system(harfang_scene_system this_ ,harfang_component  component);
extern void harfang_remove_component_scene_system(harfang_scene_system this_ ,const harfang_component  component);
extern void harfang_cleanup_scene_system(harfang_scene_system this_);
extern void harfang_set_debug_visuals_scene_system(harfang_scene_system this_ ,bool  enable);
extern bool  harfang_get_debug_visuals_scene_system(harfang_scene_system this_);
extern void harfang_draw_debug_panel_scene_system(harfang_scene_system this_ ,harfang_render_system_nobind  render_system);
extern void harfang_draw_debug_visuals_scene_system(harfang_scene_system this_ ,harfang_render_system_nobind  render_system);
extern void harfang_group_free(harfang_group);
extern const harfang_node_list  harfang_get_nodes_group(harfang_group this_);
extern const harfang_group_list  harfang_get_groups_group(harfang_group this_);
extern const harfang_animtake_list  harfang_get_anim_takes_group(harfang_group this_);
extern void harfang_add_node_group(harfang_group this_ ,harfang_node  node);
extern void harfang_remove_node_group(harfang_group this_ ,const harfang_node  node);
extern bool  harfang_is_member_group(harfang_group this_ ,const harfang_node  node);
extern bool  harfang_is_member_group_with_group(harfang_group this_ ,const harfang_group  group);
extern bool  harfang_is_ready_group(harfang_group this_);
extern harfang_node  harfang_get_node_group(harfang_group this_ ,unsigned int uid);
extern harfang_node  harfang_get_node_group_with_name(harfang_group this_ ,const char* name);
extern harfang_node  harfang_get_node_group_with_name_parent(harfang_group this_ ,const char* name ,const harfang_node  parent);
extern void harfang_add_anim_take_group(harfang_group this_ ,harfang_anim_take  take);
extern void harfang_remove_anim_take_group(harfang_group this_ ,const harfang_anim_take  take);
extern harfang_anim_take  harfang_get_anim_take_group(harfang_group this_ ,const char* name);
extern harfang_anim_take  harfang_get_anim_take_group_with_idx(harfang_group this_ ,size_t  idx);
extern size_t  harfang_get_anim_take_count_group(harfang_group this_);
extern void harfang_add_group_group(harfang_group this_ ,harfang_group  group);
extern void harfang_remove_group_group(harfang_group this_ ,const harfang_group  group);
extern harfang_group  harfang_get_group_group(harfang_group this_ ,const char* name);
extern void harfang_append_group_group(harfang_group this_ ,const harfang_group_nobind  group);
extern const char** harfang_get_name_group(harfang_group this_);
extern void harfang_set_name_group(harfang_group this_ ,const char* name);
extern void harfang_component_free(harfang_component);
extern harfang_scene_system  harfang_get_scene_system_component(harfang_component this_);
extern harfang_scene  harfang_get_scene_component(harfang_component this_);
extern harfang_node  harfang_get_node_component(harfang_component this_);
extern bool  harfang_is_assigned_component(harfang_component this_);
extern bool  harfang_get_enabled_component(harfang_component this_);
extern void harfang_set_enabled_component(harfang_component this_ ,bool  enable);
extern uint8_t harfang_get_state_component(harfang_component this_);
extern const char** harfang_get_name_component(harfang_component this_);
extern const char** harfang_get_aspect_component(harfang_component this_);
extern bool  harfang_get_do_not_serialize_component(harfang_component this_);
extern void harfang_set_do_not_serialize_component(harfang_component this_ ,bool  do_not_serialize);
extern bool  harfang_get_show_in_editor_component(harfang_component this_);
extern void harfang_set_show_in_editor_component(harfang_component this_ ,bool  shown_in_editor);
extern harfang_scene  harfang_get_registered_in_scene_component(harfang_component this_);
extern harfang_instance  harfang_constructor_instance();
extern void harfang_instance_free(harfang_instance);
extern const char* harfang_get_path_instance(harfang_instance this_);
extern void harfang_set_path_instance(harfang_instance this_ ,const char* path);
extern uint8_t harfang_get_state_instance(harfang_instance this_);
extern harfang_group  harfang_get_group_instance(harfang_instance this_);
extern harfang_scene_system  harfang_get_scene_system_instance(harfang_instance this_);
extern harfang_scene  harfang_get_scene_instance(harfang_instance this_);
extern harfang_node  harfang_get_node_instance(harfang_instance this_);
extern bool  harfang_is_assigned_instance(harfang_instance this_);
extern bool  harfang_get_enabled_instance(harfang_instance this_);
extern void harfang_set_enabled_instance(harfang_instance this_ ,bool  enable);
extern const char** harfang_get_name_instance(harfang_instance this_);
extern const char** harfang_get_aspect_instance(harfang_instance this_);
extern bool  harfang_get_do_not_serialize_instance(harfang_instance this_);
extern void harfang_set_do_not_serialize_instance(harfang_instance this_ ,bool  do_not_serialize);
extern bool  harfang_get_show_in_editor_instance(harfang_instance this_);
extern void harfang_set_show_in_editor_instance(harfang_instance this_ ,bool  shown_in_editor);
extern harfang_scene  harfang_get_registered_in_scene_instance(harfang_instance this_);
extern harfang_metadata  harfang_constructor_metadata();
extern void harfang_metadata_free(harfang_metadata);
extern const char* harfang_get_data_metadata(harfang_metadata this_);
extern void harfang_set_data_metadata(harfang_metadata this_ ,const char* data);
extern harfang_scene_system  harfang_get_scene_system_metadata(harfang_metadata this_);
extern harfang_scene  harfang_get_scene_metadata(harfang_metadata this_);
extern harfang_node  harfang_get_node_metadata(harfang_metadata this_);
extern bool  harfang_is_assigned_metadata(harfang_metadata this_);
extern bool  harfang_get_enabled_metadata(harfang_metadata this_);
extern void harfang_set_enabled_metadata(harfang_metadata this_ ,bool  enable);
extern uint8_t harfang_get_state_metadata(harfang_metadata this_);
extern const char** harfang_get_name_metadata(harfang_metadata this_);
extern const char** harfang_get_aspect_metadata(harfang_metadata this_);
extern bool  harfang_get_do_not_serialize_metadata(harfang_metadata this_);
extern void harfang_set_do_not_serialize_metadata(harfang_metadata this_ ,bool  do_not_serialize);
extern bool  harfang_get_show_in_editor_metadata(harfang_metadata this_);
extern void harfang_set_show_in_editor_metadata(harfang_metadata this_ ,bool  shown_in_editor);
extern harfang_scene  harfang_get_registered_in_scene_metadata(harfang_metadata this_);
extern harfang_target  harfang_constructor_target();
extern void harfang_target_free(harfang_target);
extern harfang_node  harfang_get_target_target(harfang_target this_);
extern void harfang_set_target_target(harfang_target this_ ,const harfang_node  target);
extern harfang_scene_system  harfang_get_scene_system_target(harfang_target this_);
extern harfang_scene  harfang_get_scene_target(harfang_target this_);
extern harfang_node  harfang_get_node_target(harfang_target this_);
extern bool  harfang_is_assigned_target(harfang_target this_);
extern bool  harfang_get_enabled_target(harfang_target this_);
extern void harfang_set_enabled_target(harfang_target this_ ,bool  enable);
extern uint8_t harfang_get_state_target(harfang_target this_);
extern const char** harfang_get_name_target(harfang_target this_);
extern const char** harfang_get_aspect_target(harfang_target this_);
extern bool  harfang_get_do_not_serialize_target(harfang_target this_);
extern void harfang_set_do_not_serialize_target(harfang_target this_ ,bool  do_not_serialize);
extern bool  harfang_get_show_in_editor_target(harfang_target this_);
extern void harfang_set_show_in_editor_target(harfang_target this_ ,bool  shown_in_editor);
extern harfang_scene  harfang_get_registered_in_scene_target(harfang_target this_);
extern harfang_environment  harfang_constructor_environment();
extern void harfang_environment_free(harfang_environment);
extern float  harfang_get_time_of_day_environment(harfang_environment this_);
extern void harfang_set_time_of_day_environment(harfang_environment this_ ,const float  time_of_day);
extern bool  harfang_get_clear_background_color_environment(harfang_environment this_);
extern void harfang_set_clear_background_color_environment(harfang_environment this_ ,const bool  clear_bg_color);
extern bool  harfang_get_clear_background_depth_environment(harfang_environment this_);
extern void harfang_set_clear_background_depth_environment(harfang_environment this_ ,const bool  clear_bg_depth);
extern harfang_color  harfang_get_background_color_environment(harfang_environment this_);
extern void harfang_set_background_color_environment(harfang_environment this_ ,const harfang_color  background_color);
extern float  harfang_get_ambient_intensity_environment(harfang_environment this_);
extern void harfang_set_ambient_intensity_environment(harfang_environment this_ ,const float  ambient_intensity);
extern harfang_color  harfang_get_ambient_color_environment(harfang_environment this_);
extern void harfang_set_ambient_color_environment(harfang_environment this_ ,const harfang_color  ambient_color);
extern harfang_color  harfang_get_fog_color_environment(harfang_environment this_);
extern void harfang_set_fog_color_environment(harfang_environment this_ ,const harfang_color  fog_color);
extern float  harfang_get_fog_near_environment(harfang_environment this_);
extern void harfang_set_fog_near_environment(harfang_environment this_ ,const float  fog_near);
extern float  harfang_get_fog_far_environment(harfang_environment this_);
extern void harfang_set_fog_far_environment(harfang_environment this_ ,const float  fog_far);
extern harfang_scene_system  harfang_get_scene_system_environment(harfang_environment this_);
extern harfang_scene  harfang_get_scene_environment(harfang_environment this_);
extern harfang_node  harfang_get_node_environment(harfang_environment this_);
extern bool  harfang_is_assigned_environment(harfang_environment this_);
extern bool  harfang_get_enabled_environment(harfang_environment this_);
extern void harfang_set_enabled_environment(harfang_environment this_ ,bool  enable);
extern uint8_t harfang_get_state_environment(harfang_environment this_);
extern const char** harfang_get_name_environment(harfang_environment this_);
extern const char** harfang_get_aspect_environment(harfang_environment this_);
extern bool  harfang_get_do_not_serialize_environment(harfang_environment this_);
extern void harfang_set_do_not_serialize_environment(harfang_environment this_ ,bool  do_not_serialize);
extern bool  harfang_get_show_in_editor_environment(harfang_environment this_);
extern void harfang_set_show_in_editor_environment(harfang_environment this_ ,bool  shown_in_editor);
extern harfang_scene  harfang_get_registered_in_scene_environment(harfang_environment this_);
extern harfang_simple_graphic_scene_overlay  harfang_constructor_simple_graphic_scene_overlay();
extern harfang_simple_graphic_scene_overlay  harfang_constructor_simple_graphic_scene_overlay_with_is2d_overlay(bool  is_2d_overlay);
extern void harfang_simple_graphic_scene_overlay_free(harfang_simple_graphic_scene_overlay);
extern void harfang_set_snap_glyph_to_grid_simple_graphic_scene_overlay(harfang_simple_graphic_scene_overlay this_ ,bool  snap);
extern bool  harfang_get_snap_glyph_to_grid_simple_graphic_scene_overlay(harfang_simple_graphic_scene_overlay this_);
extern void harfang_set_blend_mode_simple_graphic_scene_overlay(harfang_simple_graphic_scene_overlay this_ ,int mode);
extern int harfang_get_blend_mode_simple_graphic_scene_overlay(harfang_simple_graphic_scene_overlay this_);
extern void harfang_set_cull_mode_simple_graphic_scene_overlay(harfang_simple_graphic_scene_overlay this_ ,int mode);
extern int harfang_get_cull_mode_simple_graphic_scene_overlay(harfang_simple_graphic_scene_overlay this_);
extern void harfang_set_depth_write_simple_graphic_scene_overlay(harfang_simple_graphic_scene_overlay this_ ,bool  enable);
extern bool  harfang_get_depth_write_simple_graphic_scene_overlay(harfang_simple_graphic_scene_overlay this_);
extern void harfang_set_depth_test_simple_graphic_scene_overlay(harfang_simple_graphic_scene_overlay this_ ,bool  enable);
extern bool  harfang_get_depth_test_simple_graphic_scene_overlay(harfang_simple_graphic_scene_overlay this_);
extern void harfang_line_simple_graphic_scene_overlay(harfang_simple_graphic_scene_overlay this_ ,float  sx ,float  sy ,float  sz ,float  ex ,float  ey ,float  ez ,const harfang_color  start_color ,const harfang_color  end_color);
extern void harfang_triangle_simple_graphic_scene_overlay(harfang_simple_graphic_scene_overlay this_ ,float  ax ,float  ay ,float  az ,float  bx ,float  by ,float  bz ,float  cx ,float  cy ,float  cz ,const harfang_color  a_color ,const harfang_color  b_color ,const harfang_color  c_color);
extern void harfang_text_simple_graphic_scene_overlay_with_xyz_text_color_font_scale(harfang_simple_graphic_scene_overlay this_ ,float  x ,float  y ,float  z ,const char* text ,const harfang_color  color ,harfang_raster_font  font ,float  scale);
extern void harfang_text_simple_graphic_scene_overlay(harfang_simple_graphic_scene_overlay this_ ,const harfang_matrix4  mat ,const char* text ,const harfang_color  color ,harfang_raster_font  font ,float  scale);
extern void harfang_lines_simple_graphic_scene_overlay(harfang_simple_graphic_scene_overlay this_ ,const harfang_vector3_list  points ,const harfang_color_list  colors);
extern void harfang_quad_simple_graphic_scene_overlay(harfang_simple_graphic_scene_overlay this_ ,float  ax ,float  ay ,float  az ,float  bx ,float  by ,float  bz ,float  cx ,float  cy ,float  cz ,float  dx ,float  dy ,float  dz ,const harfang_color  a_color ,const harfang_color  b_color ,const harfang_color  c_color ,const harfang_color  d_color);
extern void harfang_quad_simple_graphic_scene_overlay_with_uv_sx_uv_sy_uv_ex_uv_ey_texture_a_color_b_color_c_color_d_color(harfang_simple_graphic_scene_overlay this_ ,float  ax ,float  ay ,float  az ,float  bx ,float  by ,float  bz ,float  cx ,float  cy ,float  cz ,float  dx ,float  dy ,float  dz ,float  uv_sx ,float  uv_sy ,float  uv_ex ,float  uv_ey ,harfang_texture  texture ,const harfang_color  a_color ,const harfang_color  b_color ,const harfang_color  c_color ,const harfang_color  d_color);
extern void harfang_quads_simple_graphic_scene_overlay(harfang_simple_graphic_scene_overlay this_ ,const harfang_matrix4_list  mats ,const float  width ,const float  height ,harfang_texture  texture ,const harfang_color  color);
extern void harfang_geometry_simple_graphic_scene_overlay(harfang_simple_graphic_scene_overlay this_ ,float  x ,float  y ,float  z ,float  ex ,float  ey ,float  ez ,float  sx ,float  sy ,float  sz ,harfang_render_geometry  geometry);
extern harfang_scene_system  harfang_get_scene_system_simple_graphic_scene_overlay(harfang_simple_graphic_scene_overlay this_);
extern harfang_scene  harfang_get_scene_simple_graphic_scene_overlay(harfang_simple_graphic_scene_overlay this_);
extern harfang_node  harfang_get_node_simple_graphic_scene_overlay(harfang_simple_graphic_scene_overlay this_);
extern bool  harfang_is_assigned_simple_graphic_scene_overlay(harfang_simple_graphic_scene_overlay this_);
extern bool  harfang_get_enabled_simple_graphic_scene_overlay(harfang_simple_graphic_scene_overlay this_);
extern void harfang_set_enabled_simple_graphic_scene_overlay(harfang_simple_graphic_scene_overlay this_ ,bool  enable);
extern uint8_t harfang_get_state_simple_graphic_scene_overlay(harfang_simple_graphic_scene_overlay this_);
extern const char** harfang_get_name_simple_graphic_scene_overlay(harfang_simple_graphic_scene_overlay this_);
extern const char** harfang_get_aspect_simple_graphic_scene_overlay(harfang_simple_graphic_scene_overlay this_);
extern bool  harfang_get_do_not_serialize_simple_graphic_scene_overlay(harfang_simple_graphic_scene_overlay this_);
extern void harfang_set_do_not_serialize_simple_graphic_scene_overlay(harfang_simple_graphic_scene_overlay this_ ,bool  do_not_serialize);
extern bool  harfang_get_show_in_editor_simple_graphic_scene_overlay(harfang_simple_graphic_scene_overlay this_);
extern void harfang_set_show_in_editor_simple_graphic_scene_overlay(harfang_simple_graphic_scene_overlay this_ ,bool  shown_in_editor);
extern harfang_scene  harfang_get_registered_in_scene_simple_graphic_scene_overlay(harfang_simple_graphic_scene_overlay this_);
extern harfang_transform  harfang_constructor_transform();
extern harfang_transform  harfang_constructor_transform_with_pos(const harfang_vector3  pos);
extern harfang_transform  harfang_constructor_transform_with_pos_rot(const harfang_vector3  pos ,const harfang_vector3  rot);
extern harfang_transform  harfang_constructor_transform_with_pos_rot_scl(const harfang_vector3  pos ,const harfang_vector3  rot ,const harfang_vector3  scl);
extern void harfang_transform_free(harfang_transform);
extern harfang_node  harfang_get_parent_transform(harfang_transform this_);
extern void harfang_set_parent_transform(harfang_transform this_ ,harfang_node  parent);
extern harfang_matrix4  harfang_get_previous_world_transform(harfang_transform this_);
extern harfang_matrix4  harfang_get_world_transform(harfang_transform this_);
extern harfang_vector3  harfang_get_position_transform(harfang_transform this_);
extern void harfang_set_position_transform(harfang_transform this_ ,const harfang_vector3  position);
extern harfang_vector3  harfang_get_rotation_transform(harfang_transform this_);
extern void harfang_set_rotation_transform(harfang_transform this_ ,const harfang_vector3  rotation);
extern harfang_vector3  harfang_get_scale_transform(harfang_transform this_);
extern void harfang_set_scale_transform(harfang_transform this_ ,const harfang_vector3  scale);
extern void harfang_set_rotation_matrix_transform(harfang_transform this_ ,const harfang_matrix3  rotation);
extern void harfang_set_local_transform(harfang_transform this_ ,harfang_matrix4  local);
extern void harfang_set_world_transform(harfang_transform this_ ,harfang_matrix4  world);
extern void harfang_offset_world_transform(harfang_transform this_ ,harfang_matrix4  offset);
extern harfang_vector3  harfang_transform_local_point_transform(harfang_transform this_ ,const harfang_vector3  local_point);
extern harfang_scene_system  harfang_get_scene_system_transform(harfang_transform this_);
extern harfang_scene  harfang_get_scene_transform(harfang_transform this_);
extern harfang_node  harfang_get_node_transform(harfang_transform this_);
extern bool  harfang_is_assigned_transform(harfang_transform this_);
extern bool  harfang_get_enabled_transform(harfang_transform this_);
extern void harfang_set_enabled_transform(harfang_transform this_ ,bool  enable);
extern uint8_t harfang_get_state_transform(harfang_transform this_);
extern const char** harfang_get_name_transform(harfang_transform this_);
extern const char** harfang_get_aspect_transform(harfang_transform this_);
extern bool  harfang_get_do_not_serialize_transform(harfang_transform this_);
extern void harfang_set_do_not_serialize_transform(harfang_transform this_ ,bool  do_not_serialize);
extern bool  harfang_get_show_in_editor_transform(harfang_transform this_);
extern void harfang_set_show_in_editor_transform(harfang_transform this_ ,bool  shown_in_editor);
extern harfang_scene  harfang_get_registered_in_scene_transform(harfang_transform this_);
extern harfang_camera  harfang_constructor_camera();
extern void harfang_camera_free(harfang_camera);
extern float  harfang_get_zoom_factor_camera(harfang_camera this_);
extern void harfang_set_zoom_factor_camera(harfang_camera this_ ,const float  zoom_factor);
extern float  harfang_get_z_near_camera(harfang_camera this_);
extern void harfang_set_z_near_camera(harfang_camera this_ ,const float  z_near);
extern float  harfang_get_z_far_camera(harfang_camera this_);
extern void harfang_set_z_far_camera(harfang_camera this_ ,const float  z_far);
extern bool  harfang_get_orthographic_camera(harfang_camera this_);
extern void harfang_set_orthographic_camera(harfang_camera this_ ,const bool  is_orthographic);
extern float  harfang_get_orthographic_size_camera(harfang_camera this_);
extern void harfang_set_orthographic_size_camera(harfang_camera this_ ,const float  orthographic_size);
extern harfang_matrix44  harfang_get_projection_matrix_camera(harfang_camera this_ ,const harfang_vector2  aspect_ratio);
extern harfang_scene_system  harfang_get_scene_system_camera(harfang_camera this_);
extern harfang_scene  harfang_get_scene_camera(harfang_camera this_);
extern harfang_node  harfang_get_node_camera(harfang_camera this_);
extern bool  harfang_is_assigned_camera(harfang_camera this_);
extern bool  harfang_get_enabled_camera(harfang_camera this_);
extern void harfang_set_enabled_camera(harfang_camera this_ ,bool  enable);
extern uint8_t harfang_get_state_camera(harfang_camera this_);
extern const char** harfang_get_name_camera(harfang_camera this_);
extern const char** harfang_get_aspect_camera(harfang_camera this_);
extern bool  harfang_get_do_not_serialize_camera(harfang_camera this_);
extern void harfang_set_do_not_serialize_camera(harfang_camera this_ ,bool  do_not_serialize);
extern bool  harfang_get_show_in_editor_camera(harfang_camera this_);
extern void harfang_set_show_in_editor_camera(harfang_camera this_ ,bool  shown_in_editor);
extern harfang_scene  harfang_get_registered_in_scene_camera(harfang_camera this_);
extern harfang_object  harfang_constructor_object();
extern void harfang_object_free(harfang_object);
extern uint8_t harfang_get_state_object(harfang_object this_);
extern harfang_render_geometry  harfang_get_geometry_object(harfang_object this_);
extern void harfang_set_geometry_object(harfang_object this_ ,const harfang_render_geometry  geometry);
extern harfang_min_max  harfang_get_local_min_max_object(harfang_object this_);
extern bool  harfang_get_bind_matrix_object(harfang_object this_ ,unsigned int index ,harfang_matrix4  bind_matrix);
extern bool  harfang_has_skeleton_object(harfang_object this_);
extern bool  harfang_is_skin_bound_object(harfang_object this_);
extern unsigned int harfang_get_bone_count_object(harfang_object this_);
extern const harfang_node  harfang_get_bone_object(harfang_object this_ ,unsigned int index);
extern harfang_scene_system  harfang_get_scene_system_object(harfang_object this_);
extern harfang_scene  harfang_get_scene_object(harfang_object this_);
extern harfang_node  harfang_get_node_object(harfang_object this_);
extern bool  harfang_is_assigned_object(harfang_object this_);
extern bool  harfang_get_enabled_object(harfang_object this_);
extern void harfang_set_enabled_object(harfang_object this_ ,bool  enable);
extern const char** harfang_get_name_object(harfang_object this_);
extern const char** harfang_get_aspect_object(harfang_object this_);
extern bool  harfang_get_do_not_serialize_object(harfang_object this_);
extern void harfang_set_do_not_serialize_object(harfang_object this_ ,bool  do_not_serialize);
extern bool  harfang_get_show_in_editor_object(harfang_object this_);
extern void harfang_set_show_in_editor_object(harfang_object this_ ,bool  shown_in_editor);
extern harfang_scene  harfang_get_registered_in_scene_object(harfang_object this_);
extern harfang_light  harfang_constructor_light();
extern void harfang_light_free(harfang_light);
extern int harfang_get_model_light(harfang_light this_);
extern void harfang_set_model_light(harfang_light this_ ,int model);
extern int harfang_get_shadow_light(harfang_light this_);
extern void harfang_set_shadow_light(harfang_light this_ ,int shadow);
extern bool  harfang_get_shadow_cast_all_light(harfang_light this_);
extern void harfang_set_shadow_cast_all_light(harfang_light this_ ,const bool  shadow_cast_all);
extern float  harfang_get_shadow_range_light(harfang_light this_);
extern void harfang_set_shadow_range_light(harfang_light this_ ,const float  shadow_range);
extern float  harfang_get_shadow_bias_light(harfang_light this_);
extern void harfang_set_shadow_bias_light(harfang_light this_ ,const float  shadow_bias);
extern harfang_vector4  harfang_get_shadow_split_light(harfang_light this_);
extern void harfang_set_shadow_split_light(harfang_light this_ ,const harfang_vector4  shadow_split);
extern float  harfang_get_z_near_light(harfang_light this_);
extern void harfang_set_z_near_light(harfang_light this_ ,const float  z_near);
extern float  harfang_get_range_light(harfang_light this_);
extern void harfang_set_range_light(harfang_light this_ ,const float  range);
extern float  harfang_get_clip_distance_light(harfang_light this_);
extern void harfang_set_clip_distance_light(harfang_light this_ ,const float  clip_distance);
extern harfang_color  harfang_get_diffuse_color_light(harfang_light this_);
extern void harfang_set_diffuse_color_light(harfang_light this_ ,const harfang_color  diffuse_color);
extern harfang_color  harfang_get_specular_color_light(harfang_light this_);
extern void harfang_set_specular_color_light(harfang_light this_ ,const harfang_color  specular_color);
extern harfang_color  harfang_get_shadow_color_light(harfang_light this_);
extern void harfang_set_shadow_color_light(harfang_light this_ ,const harfang_color  shadow_color);
extern float  harfang_get_diffuse_intensity_light(harfang_light this_);
extern void harfang_set_diffuse_intensity_light(harfang_light this_ ,const float  diffuse_intensity);
extern float  harfang_get_specular_intensity_light(harfang_light this_);
extern void harfang_set_specular_intensity_light(harfang_light this_ ,const float  specular_intensity);
extern float  harfang_get_cone_angle_light(harfang_light this_);
extern void harfang_set_cone_angle_light(harfang_light this_ ,const float  cone_angle);
extern float  harfang_get_edge_angle_light(harfang_light this_);
extern void harfang_set_edge_angle_light(harfang_light this_ ,const float  edge_angle);
extern harfang_texture  harfang_get_projection_texture_light(harfang_light this_);
extern void harfang_set_projection_texture_light(harfang_light this_ ,const harfang_texture  projection_texture);
extern harfang_scene_system  harfang_get_scene_system_light(harfang_light this_);
extern harfang_scene  harfang_get_scene_light(harfang_light this_);
extern harfang_node  harfang_get_node_light(harfang_light this_);
extern bool  harfang_is_assigned_light(harfang_light this_);
extern bool  harfang_get_enabled_light(harfang_light this_);
extern void harfang_set_enabled_light(harfang_light this_ ,bool  enable);
extern uint8_t harfang_get_state_light(harfang_light this_);
extern const char** harfang_get_name_light(harfang_light this_);
extern const char** harfang_get_aspect_light(harfang_light this_);
extern bool  harfang_get_do_not_serialize_light(harfang_light this_);
extern void harfang_set_do_not_serialize_light(harfang_light this_ ,bool  do_not_serialize);
extern bool  harfang_get_show_in_editor_light(harfang_light this_);
extern void harfang_set_show_in_editor_light(harfang_light this_ ,bool  shown_in_editor);
extern harfang_scene  harfang_get_registered_in_scene_light(harfang_light this_);
extern harfang_decorator  harfang_constructor_decorator();
extern void harfang_decorator_free(harfang_decorator);
extern harfang_render_geometry  harfang_get_geometry_decorator(harfang_decorator this_);
extern void harfang_set_geometry_decorator(harfang_decorator this_ ,const harfang_render_geometry  geo);
extern float  harfang_get_range_decorator(harfang_decorator this_);
extern void harfang_set_range_decorator(harfang_decorator this_ ,const float  range);
extern bool  harfang_get_decimate_decorator(harfang_decorator this_);
extern void harfang_set_decimate_decorator(harfang_decorator this_ ,const bool  decimate);
extern float  harfang_get_decimation_range_start_decorator(harfang_decorator this_);
extern void harfang_set_decimation_range_start_decorator(harfang_decorator this_ ,const float  range);
extern void harfang_add_instance_decorator(harfang_decorator this_ ,const harfang_matrix4  world);
extern bool  harfang_load_data_decorator(harfang_decorator this_ ,const char* path);
extern bool  harfang_save_data_decorator(harfang_decorator this_ ,const char* path);
extern harfang_scene_system  harfang_get_scene_system_decorator(harfang_decorator this_);
extern harfang_scene  harfang_get_scene_decorator(harfang_decorator this_);
extern harfang_node  harfang_get_node_decorator(harfang_decorator this_);
extern bool  harfang_is_assigned_decorator(harfang_decorator this_);
extern bool  harfang_get_enabled_decorator(harfang_decorator this_);
extern void harfang_set_enabled_decorator(harfang_decorator this_ ,bool  enable);
extern uint8_t harfang_get_state_decorator(harfang_decorator this_);
extern const char** harfang_get_name_decorator(harfang_decorator this_);
extern const char** harfang_get_aspect_decorator(harfang_decorator this_);
extern bool  harfang_get_do_not_serialize_decorator(harfang_decorator this_);
extern void harfang_set_do_not_serialize_decorator(harfang_decorator this_ ,bool  do_not_serialize);
extern bool  harfang_get_show_in_editor_decorator(harfang_decorator this_);
extern void harfang_set_show_in_editor_decorator(harfang_decorator this_ ,bool  shown_in_editor);
extern harfang_scene  harfang_get_registered_in_scene_decorator(harfang_decorator this_);
extern harfang_rigid_body  harfang_constructor_rigid_body();
extern void harfang_rigid_body_free(harfang_rigid_body);
extern bool  harfang_get_is_sleeping_rigid_body(harfang_rigid_body this_);
extern void harfang_set_is_sleeping_rigid_body(harfang_rigid_body this_ ,const bool  is_sleeping);
extern harfang_vector3  harfang_get_velocity_rigid_body(harfang_rigid_body this_ ,const harfang_vector3  position);
extern void harfang_set_velocity_rigid_body(harfang_rigid_body this_ ,const harfang_vector3  V ,const harfang_vector3  position);
extern harfang_vector3  harfang_get_linear_velocity_rigid_body(harfang_rigid_body this_);
extern void harfang_set_linear_velocity_rigid_body(harfang_rigid_body this_ ,const harfang_vector3  V);
extern harfang_vector3  harfang_get_angular_velocity_rigid_body(harfang_rigid_body this_);
extern void harfang_set_angular_velocity_rigid_body(harfang_rigid_body this_ ,const harfang_vector3  W);
extern float  harfang_get_linear_damping_rigid_body(harfang_rigid_body this_);
extern void harfang_set_linear_damping_rigid_body(harfang_rigid_body this_ ,const float  damping);
extern float  harfang_get_angular_damping_rigid_body(harfang_rigid_body this_);
extern void harfang_set_angular_damping_rigid_body(harfang_rigid_body this_ ,const float  damping);
extern float  harfang_get_static_friction_rigid_body(harfang_rigid_body this_);
extern void harfang_set_static_friction_rigid_body(harfang_rigid_body this_ ,const float  sF);
extern float  harfang_get_dynamic_friction_rigid_body(harfang_rigid_body this_);
extern void harfang_set_dynamic_friction_rigid_body(harfang_rigid_body this_ ,const float  dF);
extern float  harfang_get_restitution_rigid_body(harfang_rigid_body this_);
extern void harfang_set_restitution_rigid_body(harfang_rigid_body this_ ,const float  restitution);
extern int harfang_get_type_rigid_body(harfang_rigid_body this_);
extern void harfang_set_type_rigid_body(harfang_rigid_body this_ ,int type);
extern int  harfang_get_axis_lock_rigid_body(harfang_rigid_body this_);
extern void harfang_set_axis_lock_rigid_body(harfang_rigid_body this_ ,const int  axis_lock);
extern int  harfang_get_collision_layer_rigid_body(harfang_rigid_body this_);
extern void harfang_set_collision_layer_rigid_body(harfang_rigid_body this_ ,const int  layer);
extern void harfang_apply_linear_impulse_rigid_body(harfang_rigid_body this_ ,const harfang_vector3  I);
extern void harfang_apply_linear_force_rigid_body(harfang_rigid_body this_ ,const harfang_vector3  F);
extern void harfang_apply_impulse_rigid_body(harfang_rigid_body this_ ,const harfang_vector3  I ,const harfang_vector3  position);
extern void harfang_apply_force_rigid_body(harfang_rigid_body this_ ,const harfang_vector3  F ,const harfang_vector3  position);
extern void harfang_apply_torque_rigid_body(harfang_rigid_body this_ ,const harfang_vector3  T);
extern void harfang_reset_world_rigid_body(harfang_rigid_body this_ ,const harfang_matrix4  m);
extern harfang_scene_system  harfang_get_scene_system_rigid_body(harfang_rigid_body this_);
extern harfang_scene  harfang_get_scene_rigid_body(harfang_rigid_body this_);
extern harfang_node  harfang_get_node_rigid_body(harfang_rigid_body this_);
extern bool  harfang_is_assigned_rigid_body(harfang_rigid_body this_);
extern bool  harfang_get_enabled_rigid_body(harfang_rigid_body this_);
extern void harfang_set_enabled_rigid_body(harfang_rigid_body this_ ,bool  enable);
extern uint8_t harfang_get_state_rigid_body(harfang_rigid_body this_);
extern const char** harfang_get_name_rigid_body(harfang_rigid_body this_);
extern const char** harfang_get_aspect_rigid_body(harfang_rigid_body this_);
extern bool  harfang_get_do_not_serialize_rigid_body(harfang_rigid_body this_);
extern void harfang_set_do_not_serialize_rigid_body(harfang_rigid_body this_ ,bool  do_not_serialize);
extern bool  harfang_get_show_in_editor_rigid_body(harfang_rigid_body this_);
extern void harfang_set_show_in_editor_rigid_body(harfang_rigid_body this_ ,bool  shown_in_editor);
extern harfang_scene  harfang_get_registered_in_scene_rigid_body(harfang_rigid_body this_);
extern void harfang_collision_free(harfang_collision);
extern float  harfang_get_mass_collision(harfang_collision this_);
extern void harfang_set_mass_collision(harfang_collision this_ ,const float  mass);
extern harfang_matrix4  harfang_get_matrix_collision(harfang_collision this_);
extern void harfang_set_matrix_collision(harfang_collision this_ ,const harfang_matrix4  matrix);
extern harfang_scene_system  harfang_get_scene_system_collision(harfang_collision this_);
extern harfang_scene  harfang_get_scene_collision(harfang_collision this_);
extern harfang_node  harfang_get_node_collision(harfang_collision this_);
extern bool  harfang_is_assigned_collision(harfang_collision this_);
extern bool  harfang_get_enabled_collision(harfang_collision this_);
extern void harfang_set_enabled_collision(harfang_collision this_ ,bool  enable);
extern uint8_t harfang_get_state_collision(harfang_collision this_);
extern const char** harfang_get_name_collision(harfang_collision this_);
extern const char** harfang_get_aspect_collision(harfang_collision this_);
extern bool  harfang_get_do_not_serialize_collision(harfang_collision this_);
extern void harfang_set_do_not_serialize_collision(harfang_collision this_ ,bool  do_not_serialize);
extern bool  harfang_get_show_in_editor_collision(harfang_collision this_);
extern void harfang_set_show_in_editor_collision(harfang_collision this_ ,bool  shown_in_editor);
extern harfang_scene  harfang_get_registered_in_scene_collision(harfang_collision this_);
extern harfang_box_collision  harfang_constructor_box_collision();
extern void harfang_box_collision_free(harfang_box_collision);
extern harfang_vector3  harfang_get_dimensions_box_collision(harfang_box_collision this_);
extern void harfang_set_dimensions_box_collision(harfang_box_collision this_ ,const harfang_vector3  dimensions);
extern harfang_scene_system  harfang_get_scene_system_box_collision(harfang_box_collision this_);
extern harfang_scene  harfang_get_scene_box_collision(harfang_box_collision this_);
extern harfang_node  harfang_get_node_box_collision(harfang_box_collision this_);
extern bool  harfang_is_assigned_box_collision(harfang_box_collision this_);
extern bool  harfang_get_enabled_box_collision(harfang_box_collision this_);
extern void harfang_set_enabled_box_collision(harfang_box_collision this_ ,bool  enable);
extern uint8_t harfang_get_state_box_collision(harfang_box_collision this_);
extern const char** harfang_get_name_box_collision(harfang_box_collision this_);
extern const char** harfang_get_aspect_box_collision(harfang_box_collision this_);
extern bool  harfang_get_do_not_serialize_box_collision(harfang_box_collision this_);
extern void harfang_set_do_not_serialize_box_collision(harfang_box_collision this_ ,bool  do_not_serialize);
extern bool  harfang_get_show_in_editor_box_collision(harfang_box_collision this_);
extern void harfang_set_show_in_editor_box_collision(harfang_box_collision this_ ,bool  shown_in_editor);
extern harfang_scene  harfang_get_registered_in_scene_box_collision(harfang_box_collision this_);
extern float  harfang_get_mass_box_collision(harfang_box_collision this_);
extern void harfang_set_mass_box_collision(harfang_box_collision this_ ,const float  mass);
extern harfang_matrix4  harfang_get_matrix_box_collision(harfang_box_collision this_);
extern void harfang_set_matrix_box_collision(harfang_box_collision this_ ,const harfang_matrix4  matrix);
extern harfang_mesh_collision  harfang_constructor_mesh_collision();
extern void harfang_mesh_collision_free(harfang_mesh_collision);
extern harfang_geometry  harfang_get_geometry_mesh_collision(harfang_mesh_collision this_);
extern void harfang_set_geometry_mesh_collision(harfang_mesh_collision this_ ,const harfang_geometry  geometry);
extern harfang_scene_system  harfang_get_scene_system_mesh_collision(harfang_mesh_collision this_);
extern harfang_scene  harfang_get_scene_mesh_collision(harfang_mesh_collision this_);
extern harfang_node  harfang_get_node_mesh_collision(harfang_mesh_collision this_);
extern bool  harfang_is_assigned_mesh_collision(harfang_mesh_collision this_);
extern bool  harfang_get_enabled_mesh_collision(harfang_mesh_collision this_);
extern void harfang_set_enabled_mesh_collision(harfang_mesh_collision this_ ,bool  enable);
extern uint8_t harfang_get_state_mesh_collision(harfang_mesh_collision this_);
extern const char** harfang_get_name_mesh_collision(harfang_mesh_collision this_);
extern const char** harfang_get_aspect_mesh_collision(harfang_mesh_collision this_);
extern bool  harfang_get_do_not_serialize_mesh_collision(harfang_mesh_collision this_);
extern void harfang_set_do_not_serialize_mesh_collision(harfang_mesh_collision this_ ,bool  do_not_serialize);
extern bool  harfang_get_show_in_editor_mesh_collision(harfang_mesh_collision this_);
extern void harfang_set_show_in_editor_mesh_collision(harfang_mesh_collision this_ ,bool  shown_in_editor);
extern harfang_scene  harfang_get_registered_in_scene_mesh_collision(harfang_mesh_collision this_);
extern float  harfang_get_mass_mesh_collision(harfang_mesh_collision this_);
extern void harfang_set_mass_mesh_collision(harfang_mesh_collision this_ ,const float  mass);
extern harfang_matrix4  harfang_get_matrix_mesh_collision(harfang_mesh_collision this_);
extern void harfang_set_matrix_mesh_collision(harfang_mesh_collision this_ ,const harfang_matrix4  matrix);
extern harfang_sphere_collision  harfang_constructor_sphere_collision();
extern void harfang_sphere_collision_free(harfang_sphere_collision);
extern float  harfang_get_radius_sphere_collision(harfang_sphere_collision this_);
extern void harfang_set_radius_sphere_collision(harfang_sphere_collision this_ ,const float  radius);
extern harfang_scene_system  harfang_get_scene_system_sphere_collision(harfang_sphere_collision this_);
extern harfang_scene  harfang_get_scene_sphere_collision(harfang_sphere_collision this_);
extern harfang_node  harfang_get_node_sphere_collision(harfang_sphere_collision this_);
extern bool  harfang_is_assigned_sphere_collision(harfang_sphere_collision this_);
extern bool  harfang_get_enabled_sphere_collision(harfang_sphere_collision this_);
extern void harfang_set_enabled_sphere_collision(harfang_sphere_collision this_ ,bool  enable);
extern uint8_t harfang_get_state_sphere_collision(harfang_sphere_collision this_);
extern const char** harfang_get_name_sphere_collision(harfang_sphere_collision this_);
extern const char** harfang_get_aspect_sphere_collision(harfang_sphere_collision this_);
extern bool  harfang_get_do_not_serialize_sphere_collision(harfang_sphere_collision this_);
extern void harfang_set_do_not_serialize_sphere_collision(harfang_sphere_collision this_ ,bool  do_not_serialize);
extern bool  harfang_get_show_in_editor_sphere_collision(harfang_sphere_collision this_);
extern void harfang_set_show_in_editor_sphere_collision(harfang_sphere_collision this_ ,bool  shown_in_editor);
extern harfang_scene  harfang_get_registered_in_scene_sphere_collision(harfang_sphere_collision this_);
extern float  harfang_get_mass_sphere_collision(harfang_sphere_collision this_);
extern void harfang_set_mass_sphere_collision(harfang_sphere_collision this_ ,const float  mass);
extern harfang_matrix4  harfang_get_matrix_sphere_collision(harfang_sphere_collision this_);
extern void harfang_set_matrix_sphere_collision(harfang_sphere_collision this_ ,const harfang_matrix4  matrix);
extern harfang_capsule_collision  harfang_constructor_capsule_collision();
extern void harfang_capsule_collision_free(harfang_capsule_collision);
extern float  harfang_get_length_capsule_collision(harfang_capsule_collision this_);
extern void harfang_set_length_capsule_collision(harfang_capsule_collision this_ ,const float  length);
extern float  harfang_get_radius_capsule_collision(harfang_capsule_collision this_);
extern void harfang_set_radius_capsule_collision(harfang_capsule_collision this_ ,const float  radius);
extern harfang_scene_system  harfang_get_scene_system_capsule_collision(harfang_capsule_collision this_);
extern harfang_scene  harfang_get_scene_capsule_collision(harfang_capsule_collision this_);
extern harfang_node  harfang_get_node_capsule_collision(harfang_capsule_collision this_);
extern bool  harfang_is_assigned_capsule_collision(harfang_capsule_collision this_);
extern bool  harfang_get_enabled_capsule_collision(harfang_capsule_collision this_);
extern void harfang_set_enabled_capsule_collision(harfang_capsule_collision this_ ,bool  enable);
extern uint8_t harfang_get_state_capsule_collision(harfang_capsule_collision this_);
extern const char** harfang_get_name_capsule_collision(harfang_capsule_collision this_);
extern const char** harfang_get_aspect_capsule_collision(harfang_capsule_collision this_);
extern bool  harfang_get_do_not_serialize_capsule_collision(harfang_capsule_collision this_);
extern void harfang_set_do_not_serialize_capsule_collision(harfang_capsule_collision this_ ,bool  do_not_serialize);
extern bool  harfang_get_show_in_editor_capsule_collision(harfang_capsule_collision this_);
extern void harfang_set_show_in_editor_capsule_collision(harfang_capsule_collision this_ ,bool  shown_in_editor);
extern harfang_scene  harfang_get_registered_in_scene_capsule_collision(harfang_capsule_collision this_);
extern float  harfang_get_mass_capsule_collision(harfang_capsule_collision this_);
extern void harfang_set_mass_capsule_collision(harfang_capsule_collision this_ ,const float  mass);
extern harfang_matrix4  harfang_get_matrix_capsule_collision(harfang_capsule_collision this_);
extern void harfang_set_matrix_capsule_collision(harfang_capsule_collision this_ ,const harfang_matrix4  matrix);
extern harfang_convex_collision  harfang_constructor_convex_collision();
extern void harfang_convex_collision_free(harfang_convex_collision);
extern harfang_geometry  harfang_get_geometry_convex_collision(harfang_convex_collision this_);
extern void harfang_set_geometry_convex_collision(harfang_convex_collision this_ ,const harfang_geometry  geometry);
extern harfang_scene_system  harfang_get_scene_system_convex_collision(harfang_convex_collision this_);
extern harfang_scene  harfang_get_scene_convex_collision(harfang_convex_collision this_);
extern harfang_node  harfang_get_node_convex_collision(harfang_convex_collision this_);
extern bool  harfang_is_assigned_convex_collision(harfang_convex_collision this_);
extern bool  harfang_get_enabled_convex_collision(harfang_convex_collision this_);
extern void harfang_set_enabled_convex_collision(harfang_convex_collision this_ ,bool  enable);
extern uint8_t harfang_get_state_convex_collision(harfang_convex_collision this_);
extern const char** harfang_get_name_convex_collision(harfang_convex_collision this_);
extern const char** harfang_get_aspect_convex_collision(harfang_convex_collision this_);
extern bool  harfang_get_do_not_serialize_convex_collision(harfang_convex_collision this_);
extern void harfang_set_do_not_serialize_convex_collision(harfang_convex_collision this_ ,bool  do_not_serialize);
extern bool  harfang_get_show_in_editor_convex_collision(harfang_convex_collision this_);
extern void harfang_set_show_in_editor_convex_collision(harfang_convex_collision this_ ,bool  shown_in_editor);
extern harfang_scene  harfang_get_registered_in_scene_convex_collision(harfang_convex_collision this_);
extern float  harfang_get_mass_convex_collision(harfang_convex_collision this_);
extern void harfang_set_mass_convex_collision(harfang_convex_collision this_ ,const float  mass);
extern harfang_matrix4  harfang_get_matrix_convex_collision(harfang_convex_collision this_);
extern void harfang_set_matrix_convex_collision(harfang_convex_collision this_ ,const harfang_matrix4  matrix);
extern float  harfang_joint_limit_get_min(harfang_joint_limit h);
extern void harfang_joint_limit_set_min(harfang_joint_limit h, float  v);
extern float  harfang_joint_limit_get_max(harfang_joint_limit h);
extern void harfang_joint_limit_set_max(harfang_joint_limit h, float  v);
extern harfang_joint_limit  harfang_constructor_joint_limit();
extern harfang_joint_limit  harfang_constructor_joint_limit_with_smin_smax(float  smin ,float  smax);
extern void harfang_joint_limit_free(harfang_joint_limit);
extern bool  harfang_eq_joint_limit(harfang_joint_limit this_ ,const harfang_joint_limit  o);
extern void harfang_joint_free(harfang_joint);
extern harfang_vector3  harfang_get_pivot_joint(harfang_joint this_);
extern void harfang_set_pivot_joint(harfang_joint this_ ,const harfang_vector3  pivot);
extern harfang_node  harfang_get_other_body_joint(harfang_joint this_);
extern void harfang_set_other_body_joint(harfang_joint this_ ,const harfang_node  other_body);
extern harfang_vector3  harfang_get_other_pivot_joint(harfang_joint this_);
extern void harfang_set_other_pivot_joint(harfang_joint this_ ,const harfang_vector3  other_pivot);
extern harfang_scene_system  harfang_get_scene_system_joint(harfang_joint this_);
extern harfang_scene  harfang_get_scene_joint(harfang_joint this_);
extern harfang_node  harfang_get_node_joint(harfang_joint this_);
extern bool  harfang_is_assigned_joint(harfang_joint this_);
extern bool  harfang_get_enabled_joint(harfang_joint this_);
extern void harfang_set_enabled_joint(harfang_joint this_ ,bool  enable);
extern uint8_t harfang_get_state_joint(harfang_joint this_);
extern const char** harfang_get_name_joint(harfang_joint this_);
extern const char** harfang_get_aspect_joint(harfang_joint this_);
extern bool  harfang_get_do_not_serialize_joint(harfang_joint this_);
extern void harfang_set_do_not_serialize_joint(harfang_joint this_ ,bool  do_not_serialize);
extern bool  harfang_get_show_in_editor_joint(harfang_joint this_);
extern void harfang_set_show_in_editor_joint(harfang_joint this_ ,bool  shown_in_editor);
extern harfang_scene  harfang_get_registered_in_scene_joint(harfang_joint this_);
extern harfang_spherical_joint  harfang_constructor_spherical_joint();
extern void harfang_spherical_joint_free(harfang_spherical_joint);
extern harfang_scene_system  harfang_get_scene_system_spherical_joint(harfang_spherical_joint this_);
extern harfang_scene  harfang_get_scene_spherical_joint(harfang_spherical_joint this_);
extern harfang_node  harfang_get_node_spherical_joint(harfang_spherical_joint this_);
extern bool  harfang_is_assigned_spherical_joint(harfang_spherical_joint this_);
extern bool  harfang_get_enabled_spherical_joint(harfang_spherical_joint this_);
extern void harfang_set_enabled_spherical_joint(harfang_spherical_joint this_ ,bool  enable);
extern uint8_t harfang_get_state_spherical_joint(harfang_spherical_joint this_);
extern const char** harfang_get_name_spherical_joint(harfang_spherical_joint this_);
extern const char** harfang_get_aspect_spherical_joint(harfang_spherical_joint this_);
extern bool  harfang_get_do_not_serialize_spherical_joint(harfang_spherical_joint this_);
extern void harfang_set_do_not_serialize_spherical_joint(harfang_spherical_joint this_ ,bool  do_not_serialize);
extern bool  harfang_get_show_in_editor_spherical_joint(harfang_spherical_joint this_);
extern void harfang_set_show_in_editor_spherical_joint(harfang_spherical_joint this_ ,bool  shown_in_editor);
extern harfang_scene  harfang_get_registered_in_scene_spherical_joint(harfang_spherical_joint this_);
extern harfang_vector3  harfang_get_pivot_spherical_joint(harfang_spherical_joint this_);
extern void harfang_set_pivot_spherical_joint(harfang_spherical_joint this_ ,const harfang_vector3  pivot);
extern harfang_node  harfang_get_other_body_spherical_joint(harfang_spherical_joint this_);
extern void harfang_set_other_body_spherical_joint(harfang_spherical_joint this_ ,const harfang_node  other_body);
extern harfang_vector3  harfang_get_other_pivot_spherical_joint(harfang_spherical_joint this_);
extern void harfang_set_other_pivot_spherical_joint(harfang_spherical_joint this_ ,const harfang_vector3  other_pivot);
extern harfang_d6_joint  harfang_constructor_d6_joint();
extern void harfang_d6_joint_free(harfang_d6_joint);
extern uint8_t  harfang_get_axis_lock_d6_joint(harfang_d6_joint this_);
extern void harfang_set_axis_lock_d6_joint(harfang_d6_joint this_ ,const uint8_t  axis_lock);
extern harfang_joint_limit  harfang_get_x_axis_limit_d6_joint(harfang_d6_joint this_);
extern void harfang_set_x_axis_limit_d6_joint(harfang_d6_joint this_ ,const harfang_joint_limit  x_axis_limit);
extern harfang_joint_limit  harfang_get_y_axis_limit_d6_joint(harfang_d6_joint this_);
extern void harfang_set_y_axis_limit_d6_joint(harfang_d6_joint this_ ,const harfang_joint_limit  y_axis_limit);
extern harfang_joint_limit  harfang_get_z_axis_limit_d6_joint(harfang_d6_joint this_);
extern void harfang_set_z_axis_limit_d6_joint(harfang_d6_joint this_ ,const harfang_joint_limit  z_axis_limit);
extern harfang_joint_limit  harfang_get_rot_x_axis_limit_d6_joint(harfang_d6_joint this_);
extern void harfang_set_rot_x_axis_limit_d6_joint(harfang_d6_joint this_ ,const harfang_joint_limit  rot_x_axis_limit);
extern harfang_joint_limit  harfang_get_rot_y_axis_limit_d6_joint(harfang_d6_joint this_);
extern void harfang_set_rot_y_axis_limit_d6_joint(harfang_d6_joint this_ ,const harfang_joint_limit  rot_y_axis_limit);
extern harfang_joint_limit  harfang_get_rot_z_axis_limit_d6_joint(harfang_d6_joint this_);
extern void harfang_set_rot_z_axis_limit_d6_joint(harfang_d6_joint this_ ,const harfang_joint_limit  rot_z_axis_limit);
extern harfang_scene_system  harfang_get_scene_system_d6_joint(harfang_d6_joint this_);
extern harfang_scene  harfang_get_scene_d6_joint(harfang_d6_joint this_);
extern harfang_node  harfang_get_node_d6_joint(harfang_d6_joint this_);
extern bool  harfang_is_assigned_d6_joint(harfang_d6_joint this_);
extern bool  harfang_get_enabled_d6_joint(harfang_d6_joint this_);
extern void harfang_set_enabled_d6_joint(harfang_d6_joint this_ ,bool  enable);
extern uint8_t harfang_get_state_d6_joint(harfang_d6_joint this_);
extern const char** harfang_get_name_d6_joint(harfang_d6_joint this_);
extern const char** harfang_get_aspect_d6_joint(harfang_d6_joint this_);
extern bool  harfang_get_do_not_serialize_d6_joint(harfang_d6_joint this_);
extern void harfang_set_do_not_serialize_d6_joint(harfang_d6_joint this_ ,bool  do_not_serialize);
extern bool  harfang_get_show_in_editor_d6_joint(harfang_d6_joint this_);
extern void harfang_set_show_in_editor_d6_joint(harfang_d6_joint this_ ,bool  shown_in_editor);
extern harfang_scene  harfang_get_registered_in_scene_d6_joint(harfang_d6_joint this_);
extern harfang_vector3  harfang_get_pivot_d6_joint(harfang_d6_joint this_);
extern void harfang_set_pivot_d6_joint(harfang_d6_joint this_ ,const harfang_vector3  pivot);
extern harfang_node  harfang_get_other_body_d6_joint(harfang_d6_joint this_);
extern void harfang_set_other_body_d6_joint(harfang_d6_joint this_ ,const harfang_node  other_body);
extern harfang_vector3  harfang_get_other_pivot_d6_joint(harfang_d6_joint this_);
extern void harfang_set_other_pivot_d6_joint(harfang_d6_joint this_ ,const harfang_vector3  other_pivot);
extern harfang_terrain  harfang_constructor_terrain();
extern void harfang_terrain_free(harfang_terrain);
extern const char* harfang_get_heightmap_terrain(harfang_terrain this_);
extern void harfang_set_heightmap_terrain(harfang_terrain this_ ,const char* heightmap);
extern harfang_int_vector2  harfang_get_heightmap_resolution_terrain(harfang_terrain this_);
extern void harfang_set_heightmap_resolution_terrain(harfang_terrain this_ ,const harfang_int_vector2  heightmap_resolution);
extern unsigned int harfang_get_heightmap_bpp_terrain(harfang_terrain this_);
extern void harfang_set_heightmap_bpp_terrain(harfang_terrain this_ ,unsigned int heightmap_bpp);
extern harfang_vector3  harfang_get_size_terrain(harfang_terrain this_);
extern void harfang_set_size_terrain(harfang_terrain this_ ,const harfang_vector3  size);
extern const char* harfang_get_surface_shader_terrain(harfang_terrain this_);
extern void harfang_set_surface_shader_terrain(harfang_terrain this_ ,const char* surface_shader);
extern int  harfang_get_patch_subdivision_threshold_terrain(harfang_terrain this_);
extern void harfang_set_patch_subdivision_threshold_terrain(harfang_terrain this_ ,const int  patch_subdv_threshold);
extern int  harfang_get_max_recursion_terrain(harfang_terrain this_);
extern void harfang_set_max_recursion_terrain(harfang_terrain this_ ,const int  max_recursion);
extern float  harfang_get_min_precision_terrain(harfang_terrain this_);
extern void harfang_set_min_precision_terrain(harfang_terrain this_ ,const float  min_precision);
extern bool  harfang_get_wireframe_terrain(harfang_terrain this_);
extern void harfang_set_wireframe_terrain(harfang_terrain this_ ,const bool  wireframe);
extern harfang_surface_shader  harfang_get_terrain_surface_shader_terrain(harfang_terrain this_);
extern harfang_scene_system  harfang_get_scene_system_terrain(harfang_terrain this_);
extern harfang_scene  harfang_get_scene_terrain(harfang_terrain this_);
extern harfang_node  harfang_get_node_terrain(harfang_terrain this_);
extern bool  harfang_is_assigned_terrain(harfang_terrain this_);
extern bool  harfang_get_enabled_terrain(harfang_terrain this_);
extern void harfang_set_enabled_terrain(harfang_terrain this_ ,bool  enable);
extern uint8_t harfang_get_state_terrain(harfang_terrain this_);
extern const char** harfang_get_name_terrain(harfang_terrain this_);
extern const char** harfang_get_aspect_terrain(harfang_terrain this_);
extern bool  harfang_get_do_not_serialize_terrain(harfang_terrain this_);
extern void harfang_set_do_not_serialize_terrain(harfang_terrain this_ ,bool  do_not_serialize);
extern bool  harfang_get_show_in_editor_terrain(harfang_terrain this_);
extern void harfang_set_show_in_editor_terrain(harfang_terrain this_ ,bool  shown_in_editor);
extern harfang_scene  harfang_get_registered_in_scene_terrain(harfang_terrain this_);
extern void harfang_post_process_component_free(harfang_post_process_component);
extern harfang_scene_system  harfang_get_scene_system_post_process_component(harfang_post_process_component this_);
extern harfang_scene  harfang_get_scene_post_process_component(harfang_post_process_component this_);
extern harfang_node  harfang_get_node_post_process_component(harfang_post_process_component this_);
extern bool  harfang_is_assigned_post_process_component(harfang_post_process_component this_);
extern bool  harfang_get_enabled_post_process_component(harfang_post_process_component this_);
extern void harfang_set_enabled_post_process_component(harfang_post_process_component this_ ,bool  enable);
extern uint8_t harfang_get_state_post_process_component(harfang_post_process_component this_);
extern const char** harfang_get_name_post_process_component(harfang_post_process_component this_);
extern const char** harfang_get_aspect_post_process_component(harfang_post_process_component this_);
extern bool  harfang_get_do_not_serialize_post_process_component(harfang_post_process_component this_);
extern void harfang_set_do_not_serialize_post_process_component(harfang_post_process_component this_ ,bool  do_not_serialize);
extern bool  harfang_get_show_in_editor_post_process_component(harfang_post_process_component this_);
extern void harfang_set_show_in_editor_post_process_component(harfang_post_process_component this_ ,bool  shown_in_editor);
extern harfang_scene  harfang_get_registered_in_scene_post_process_component(harfang_post_process_component this_);
extern harfang_sharpen_post_process  harfang_constructor_sharpen_post_process();
extern void harfang_sharpen_post_process_free(harfang_sharpen_post_process);
extern float  harfang_get_strength_sharpen_post_process(harfang_sharpen_post_process this_);
extern void harfang_set_strength_sharpen_post_process(harfang_sharpen_post_process this_ ,float  strength);
extern harfang_radial_blur_post_process  harfang_constructor_radial_blur_post_process();
extern void harfang_radial_blur_post_process_free(harfang_radial_blur_post_process);
extern float  harfang_get_strength_radial_blur_post_process(harfang_radial_blur_post_process this_);
extern void harfang_set_strength_radial_blur_post_process(harfang_radial_blur_post_process this_ ,float  strength);
extern harfang_vector2  harfang_get_center_radial_blur_post_process(harfang_radial_blur_post_process this_);
extern void harfang_set_center_radial_blur_post_process(harfang_radial_blur_post_process this_ ,const harfang_vector2  center);
extern harfang_chromatic_dispersion_post_process  harfang_constructor_chromatic_dispersion_post_process();
extern void harfang_chromatic_dispersion_post_process_free(harfang_chromatic_dispersion_post_process);
extern float  harfang_get_width_chromatic_dispersion_post_process(harfang_chromatic_dispersion_post_process this_);
extern void harfang_set_width_chromatic_dispersion_post_process(harfang_chromatic_dispersion_post_process this_ ,float  width);
extern harfang_hsl_post_process  harfang_constructor_hsl_post_process();
extern void harfang_hsl_post_process_free(harfang_hsl_post_process);
extern float  harfang_get_h_hsl_post_process(harfang_hsl_post_process this_);
extern float  harfang_get_s_hsl_post_process(harfang_hsl_post_process this_);
extern float  harfang_get_l_hsl_post_process(harfang_hsl_post_process this_);
extern void harfang_set_h_hsl_post_process(harfang_hsl_post_process this_ ,float  h);
extern void harfang_set_s_hsl_post_process(harfang_hsl_post_process this_ ,float  s);
extern void harfang_set_l_hsl_post_process(harfang_hsl_post_process this_ ,float  l);
extern harfang_motion_blur_post_process  harfang_constructor_motion_blur_post_process();
extern void harfang_motion_blur_post_process_free(harfang_motion_blur_post_process);
extern int  harfang_get_blur_radius_motion_blur_post_process(harfang_motion_blur_post_process this_);
extern void harfang_set_blur_radius_motion_blur_post_process(harfang_motion_blur_post_process this_ ,int  radius);
extern int  harfang_get_sample_count_motion_blur_post_process(harfang_motion_blur_post_process this_);
extern void harfang_set_sample_count_motion_blur_post_process(harfang_motion_blur_post_process this_ ,int  count);
extern float  harfang_get_exposure_motion_blur_post_process(harfang_motion_blur_post_process this_);
extern void harfang_set_exposure_motion_blur_post_process(harfang_motion_blur_post_process this_ ,float  exposure);
extern harfang_sao_post_process  harfang_constructor_sao_post_process();
extern void harfang_sao_post_process_free(harfang_sao_post_process);
extern float  harfang_get_bias_sao_post_process(harfang_sao_post_process this_);
extern void harfang_set_bias_sao_post_process(harfang_sao_post_process this_ ,float  bias);
extern float  harfang_get_radius_sao_post_process(harfang_sao_post_process this_);
extern void harfang_set_radius_sao_post_process(harfang_sao_post_process this_ ,float  radius);
extern int  harfang_get_quality_sao_post_process(harfang_sao_post_process this_);
extern void harfang_set_quality_sao_post_process(harfang_sao_post_process this_ ,int  quality);
extern int  harfang_get_sample_count_sao_post_process(harfang_sao_post_process this_);
extern void harfang_set_sample_count_sao_post_process(harfang_sao_post_process this_ ,int  sample_count);
extern float  harfang_get_sharpness_sao_post_process(harfang_sao_post_process this_);
extern void harfang_set_sharpness_sao_post_process(harfang_sao_post_process this_ ,float  sharpness);
extern float  harfang_get_strength_sao_post_process(harfang_sao_post_process this_);
extern void harfang_set_strength_sao_post_process(harfang_sao_post_process this_ ,float  strength);
extern harfang_bloom_post_process  harfang_constructor_bloom_post_process();
extern void harfang_bloom_post_process_free(harfang_bloom_post_process);
extern float  harfang_get_threshold_bloom_post_process(harfang_bloom_post_process this_);
extern void harfang_set_threshold_bloom_post_process(harfang_bloom_post_process this_ ,float  threshold);
extern float  harfang_get_smoothness_bloom_post_process(harfang_bloom_post_process this_);
extern void harfang_set_smoothness_bloom_post_process(harfang_bloom_post_process this_ ,float  smoothness);
extern float  harfang_get_blur_bloom_post_process(harfang_bloom_post_process this_);
extern void harfang_set_blur_bloom_post_process(harfang_bloom_post_process this_ ,float  blur);
extern float  harfang_get_radius_bloom_post_process(harfang_bloom_post_process this_);
extern void harfang_set_radius_bloom_post_process(harfang_bloom_post_process this_ ,float  radius);
extern float  harfang_get_intensity_bloom_post_process(harfang_bloom_post_process this_);
extern void harfang_set_intensity_bloom_post_process(harfang_bloom_post_process this_ ,float  intensity);
extern int  harfang_get_quality_bloom_post_process(harfang_bloom_post_process this_);
extern void harfang_set_quality_bloom_post_process(harfang_bloom_post_process this_ ,int  quality);
extern void harfang_script_env_free(harfang_script_env);
extern harfang_render_system_async  harfang_get_render_system_async_script_env(harfang_script_env this_);
extern harfang_renderer_async  harfang_get_renderer_async_script_env(harfang_script_env this_);
extern harfang_mixer_async  harfang_get_mixer_async_script_env(harfang_script_env this_);
extern float  harfang_get_clock_dt_script_env(harfang_script_env this_);
extern void harfang_script_free(harfang_script);
extern harfang_type_value  harfang_blocking_get_script(harfang_script this_ ,const char* name);
extern harfang_type_value  harfang_get_script(harfang_script this_ ,const char* name);
extern void harfang_set_script(harfang_script this_ ,const char* name ,const harfang_type_value  value);
extern void harfang_expose_script(harfang_script this_ ,const char* name ,const harfang_type_value  value);
extern void harfang_call_script(harfang_script this_ ,const char* name ,const harfang_typevalue_list  parms);
extern harfang_scene_system  harfang_get_scene_system_script(harfang_script this_);
extern harfang_scene  harfang_get_scene_script(harfang_script this_);
extern harfang_node  harfang_get_node_script(harfang_script this_);
extern bool  harfang_is_assigned_script(harfang_script this_);
extern bool  harfang_get_enabled_script(harfang_script this_);
extern void harfang_set_enabled_script(harfang_script this_ ,bool  enable);
extern uint8_t harfang_get_state_script(harfang_script this_);
extern const char** harfang_get_name_script(harfang_script this_);
extern const char** harfang_get_aspect_script(harfang_script this_);
extern bool  harfang_get_do_not_serialize_script(harfang_script this_);
extern void harfang_set_do_not_serialize_script(harfang_script this_ ,bool  do_not_serialize);
extern bool  harfang_get_show_in_editor_script(harfang_script this_);
extern void harfang_set_show_in_editor_script(harfang_script this_ ,bool  shown_in_editor);
extern harfang_scene  harfang_get_registered_in_scene_script(harfang_script this_);
extern harfang_render_script  harfang_constructor_render_script();
extern harfang_render_script  harfang_constructor_render_script_with_path(const char* path);
extern void harfang_render_script_free(harfang_render_script);
extern harfang_type_value  harfang_blocking_get_render_script(harfang_render_script this_ ,const char* name);
extern harfang_type_value  harfang_get_render_script(harfang_render_script this_ ,const char* name);
extern void harfang_set_render_script(harfang_render_script this_ ,const char* name ,const harfang_type_value  value);
extern void harfang_expose_render_script(harfang_render_script this_ ,const char* name ,const harfang_type_value  value);
extern void harfang_call_render_script(harfang_render_script this_ ,const char* name ,const harfang_typevalue_list  parms);
extern harfang_logic_script  harfang_constructor_logic_script();
extern harfang_logic_script  harfang_constructor_logic_script_with_path(const char* path);
extern void harfang_logic_script_free(harfang_logic_script);
extern harfang_type_value  harfang_blocking_get_logic_script(harfang_logic_script this_ ,const char* name);
extern harfang_type_value  harfang_get_logic_script(harfang_logic_script this_ ,const char* name);
extern void harfang_set_logic_script(harfang_logic_script this_ ,const char* name ,const harfang_type_value  value);
extern void harfang_expose_logic_script(harfang_logic_script this_ ,const char* name ,const harfang_type_value  value);
extern void harfang_call_logic_script(harfang_logic_script this_ ,const char* name ,const harfang_typevalue_list  parms);
extern harfang_vector3_list  harfang_navigation_path_get_point(harfang_navigation_path h);
extern void harfang_navigation_path_free(harfang_navigation_path);
extern float  harfang_navigation_layer_get_radius(harfang_navigation_layer h);
extern void harfang_navigation_layer_set_radius(harfang_navigation_layer h, float  v);
extern float  harfang_navigation_layer_get_height(harfang_navigation_layer h);
extern void harfang_navigation_layer_set_height(harfang_navigation_layer h, float  v);
extern float  harfang_navigation_layer_get_slope(harfang_navigation_layer h);
extern void harfang_navigation_layer_set_slope(harfang_navigation_layer h, float  v);
extern void harfang_navigation_layer_free(harfang_navigation_layer);
extern bool  harfang_eq_navigation_layer(harfang_navigation_layer this_ ,const harfang_navigation_layer  layer);
extern bool  harfang_ne_navigation_layer(harfang_navigation_layer this_ ,const harfang_navigation_layer  layer);
extern void harfang_navigationlayer_list_free(harfang_navigationlayer_list);
extern void harfang_push_back_navigationlayer_list(harfang_navigationlayer_list this_ ,harfang_navigation_layer  v);
extern size_t  harfang_size_navigationlayer_list(harfang_navigationlayer_list this_);
extern harfang_navigation_layer  harfang_at_navigationlayer_list(harfang_navigationlayer_list this_ ,size_t  idx);
extern harfang_navigationlayer_list  harfang_navigation_config_get_layers(harfang_navigation_config h);
extern void harfang_navigation_config_set_layers(harfang_navigation_config h, harfang_navigationlayer_list  v);
extern void harfang_navigation_config_free(harfang_navigation_config);
extern harfang_navigation_system  harfang_constructor_navigation_system();
extern void harfang_navigation_system_free(harfang_navigation_system);
extern bool  harfang_find_path_to_navigation_system(harfang_navigation_system this_ ,const harfang_vector3  from ,const harfang_vector3  to ,harfang_navigation_path  path);
extern bool  harfang_find_path_to_navigation_system_with_layer_index(harfang_navigation_system this_ ,const harfang_vector3  from ,const harfang_vector3  to ,harfang_navigation_path  path ,unsigned int layer_index);
extern const harfang_navigation_config  harfang_get_config_navigation_system(harfang_navigation_system this_);
extern const char** harfang_get_aspect_navigation_system(harfang_navigation_system this_);
extern void harfang_update_navigation_system(harfang_navigation_system this_ ,int64_t  dt);
extern bool  harfang_wait_update_navigation_system(harfang_navigation_system this_);
extern bool  harfang_wait_update_navigation_system_with_blocking(harfang_navigation_system this_ ,bool  blocking);
extern void harfang_commit_navigation_system(harfang_navigation_system this_);
extern bool  harfang_wait_commit_navigation_system(harfang_navigation_system this_);
extern bool  harfang_wait_commit_navigation_system_with_blocking(harfang_navigation_system this_ ,bool  blocking);
extern void harfang_add_component_navigation_system(harfang_navigation_system this_ ,harfang_component  component);
extern void harfang_remove_component_navigation_system(harfang_navigation_system this_ ,const harfang_component  component);
extern void harfang_cleanup_navigation_system(harfang_navigation_system this_);
extern void harfang_set_debug_visuals_navigation_system(harfang_navigation_system this_ ,bool  enable);
extern bool  harfang_get_debug_visuals_navigation_system(harfang_navigation_system this_);
extern void harfang_draw_debug_panel_navigation_system(harfang_navigation_system this_ ,harfang_render_system_nobind  render_system);
extern void harfang_draw_debug_visuals_navigation_system(harfang_navigation_system this_ ,harfang_render_system_nobind  render_system);
extern void harfang_navigation_geometry_free(harfang_navigation_geometry);
extern const harfang_navigation_config  harfang_get_config_navigation_geometry(harfang_navigation_geometry this_);
extern const harfang_min_max  harfang_get_min_max_navigation_geometry(harfang_navigation_geometry this_);
extern harfang_navigation  harfang_constructor_navigation();
extern void harfang_navigation_free(harfang_navigation);
extern harfang_navigation_geometry  harfang_get_geometry_navigation(harfang_navigation this_);
extern void harfang_set_geometry_navigation(harfang_navigation this_ ,const harfang_navigation_geometry  geometry);
extern bool  harfang_find_path_to_navigation(harfang_navigation this_ ,const harfang_vector3  from ,const harfang_vector3  to ,harfang_navigation_path  path);
extern bool  harfang_find_path_to_navigation_with_layer_index(harfang_navigation this_ ,const harfang_vector3  from ,const harfang_vector3  to ,harfang_navigation_path  path ,unsigned int layer_index);
extern harfang_scene_system  harfang_get_scene_system_navigation(harfang_navigation this_);
extern harfang_scene  harfang_get_scene_navigation(harfang_navigation this_);
extern harfang_node  harfang_get_node_navigation(harfang_navigation this_);
extern bool  harfang_is_assigned_navigation(harfang_navigation this_);
extern bool  harfang_get_enabled_navigation(harfang_navigation this_);
extern void harfang_set_enabled_navigation(harfang_navigation this_ ,bool  enable);
extern uint8_t harfang_get_state_navigation(harfang_navigation this_);
extern const char** harfang_get_name_navigation(harfang_navigation this_);
extern const char** harfang_get_aspect_navigation(harfang_navigation this_);
extern bool  harfang_get_do_not_serialize_navigation(harfang_navigation this_);
extern void harfang_set_do_not_serialize_navigation(harfang_navigation this_ ,bool  do_not_serialize);
extern bool  harfang_get_show_in_editor_navigation(harfang_navigation this_);
extern void harfang_set_show_in_editor_navigation(harfang_navigation this_ ,bool  shown_in_editor);
extern harfang_scene  harfang_get_registered_in_scene_navigation(harfang_navigation this_);
extern void harfang_component_list_free(harfang_component_list);
extern void harfang_push_back_component_list(harfang_component_list this_ ,harfang_component  v);
extern size_t  harfang_size_component_list(harfang_component_list this_);
extern harfang_component  harfang_at_component_list(harfang_component_list this_ ,size_t  idx);
extern void harfang_script_system_free(harfang_script_system);
extern int harfang_get_execution_mode_script_system(harfang_script_system this_);
extern void harfang_set_execution_mode_script_system(harfang_script_system this_ ,int mode);
extern bool  harfang_test_script_is_ready_script_system(harfang_script_system this_ ,const harfang_script_nobind  script);
extern const char** harfang_get_implementation_name_script_system(harfang_script_system this_);
extern bool  harfang_open_script_system(harfang_script_system this_);
extern void harfang_close_script_system(harfang_script_system this_);
extern void harfang_reset_script_system(harfang_script_system this_);
extern const char** harfang_get_aspect_script_system(harfang_script_system this_);
extern void harfang_update_script_system(harfang_script_system this_ ,int64_t  dt);
extern bool  harfang_wait_update_script_system(harfang_script_system this_);
extern bool  harfang_wait_update_script_system_with_blocking(harfang_script_system this_ ,bool  blocking);
extern void harfang_commit_script_system(harfang_script_system this_);
extern bool  harfang_wait_commit_script_system(harfang_script_system this_);
extern bool  harfang_wait_commit_script_system_with_blocking(harfang_script_system this_ ,bool  blocking);
extern void harfang_add_component_script_system(harfang_script_system this_ ,harfang_component  component);
extern void harfang_remove_component_script_system(harfang_script_system this_ ,const harfang_component  component);
extern void harfang_cleanup_script_system(harfang_script_system this_);
extern void harfang_set_debug_visuals_script_system(harfang_script_system this_ ,bool  enable);
extern bool  harfang_get_debug_visuals_script_system(harfang_script_system this_);
extern void harfang_draw_debug_panel_script_system(harfang_script_system this_ ,harfang_render_system_nobind  render_system);
extern void harfang_draw_debug_visuals_script_system(harfang_script_system this_ ,harfang_render_system_nobind  render_system);
extern harfang_lua_system  harfang_constructor_lua_system();
extern harfang_lua_system  harfang_constructor_lua_system_with_environment(harfang_script_env  environment);
extern void harfang_lua_system_free(harfang_lua_system);
extern int harfang_get_execution_mode_lua_system(harfang_lua_system this_);
extern void harfang_set_execution_mode_lua_system(harfang_lua_system this_ ,int mode);
extern bool  harfang_test_script_is_ready_lua_system(harfang_lua_system this_ ,const harfang_script_nobind  script);
extern const char** harfang_get_implementation_name_lua_system(harfang_lua_system this_);
extern bool  harfang_open_lua_system(harfang_lua_system this_);
extern void harfang_close_lua_system(harfang_lua_system this_);
extern void harfang_reset_lua_system(harfang_lua_system this_);
extern void harfang_node_list_free(harfang_node_list);
extern void harfang_push_back_node_list(harfang_node_list this_ ,harfang_node  v);
extern size_t  harfang_size_node_list(harfang_node_list this_);
extern harfang_node  harfang_at_node_list(harfang_node_list this_ ,size_t  idx);
extern harfang_renderable_system  harfang_constructor_renderable_system(harfang_render_system  render_system);
extern harfang_renderable_system  harfang_constructor_renderable_system_with_async(harfang_render_system  render_system ,bool  async);
extern void harfang_renderable_system_free(harfang_renderable_system);
extern void harfang_set_frame_renderer_renderable_system(harfang_renderable_system this_ ,harfang_frame_renderer  renderer);
extern void harfang_draw_geometry_renderable_system(harfang_renderable_system this_ ,harfang_render_geometry  geometry ,const harfang_matrix4  world);
extern void harfang_set_use_camera_view_renderable_system(harfang_renderable_system this_ ,bool  use_camera_view);
extern const char** harfang_get_aspect_renderable_system(harfang_renderable_system this_);
extern void harfang_update_renderable_system(harfang_renderable_system this_ ,int64_t  dt);
extern bool  harfang_wait_update_renderable_system(harfang_renderable_system this_);
extern bool  harfang_wait_update_renderable_system_with_blocking(harfang_renderable_system this_ ,bool  blocking);
extern void harfang_commit_renderable_system(harfang_renderable_system this_);
extern bool  harfang_wait_commit_renderable_system(harfang_renderable_system this_);
extern bool  harfang_wait_commit_renderable_system_with_blocking(harfang_renderable_system this_ ,bool  blocking);
extern void harfang_add_component_renderable_system(harfang_renderable_system this_ ,harfang_component  component);
extern void harfang_remove_component_renderable_system(harfang_renderable_system this_ ,const harfang_component  component);
extern void harfang_cleanup_renderable_system(harfang_renderable_system this_);
extern void harfang_set_debug_visuals_renderable_system(harfang_renderable_system this_ ,bool  enable);
extern bool  harfang_get_debug_visuals_renderable_system(harfang_renderable_system this_);
extern void harfang_draw_debug_panel_renderable_system(harfang_renderable_system this_ ,harfang_render_system_nobind  render_system);
extern void harfang_draw_debug_visuals_renderable_system(harfang_renderable_system this_ ,harfang_render_system_nobind  render_system);
extern harfang_transform_system  harfang_constructor_transform_system();
extern void harfang_transform_system_free(harfang_transform_system);
extern void harfang_compute_transform_transform_system(harfang_transform_system this_ ,harfang_transform_nobind  transform);
extern void harfang_commit_transform_transform_system(harfang_transform_system this_ ,harfang_transform_nobind  transform);
extern void harfang_reset_world_matrix_transform_system(harfang_transform_system this_ ,const harfang_transform  transform ,const harfang_matrix4  m);
extern const char** harfang_get_aspect_transform_system(harfang_transform_system this_);
extern void harfang_update_transform_system(harfang_transform_system this_ ,int64_t  dt);
extern bool  harfang_wait_update_transform_system(harfang_transform_system this_);
extern bool  harfang_wait_update_transform_system_with_blocking(harfang_transform_system this_ ,bool  blocking);
extern void harfang_commit_transform_system(harfang_transform_system this_);
extern bool  harfang_wait_commit_transform_system(harfang_transform_system this_);
extern bool  harfang_wait_commit_transform_system_with_blocking(harfang_transform_system this_ ,bool  blocking);
extern void harfang_add_component_transform_system(harfang_transform_system this_ ,harfang_component  component);
extern void harfang_remove_component_transform_system(harfang_transform_system this_ ,const harfang_component  component);
extern void harfang_cleanup_transform_system(harfang_transform_system this_);
extern void harfang_set_debug_visuals_transform_system(harfang_transform_system this_ ,bool  enable);
extern bool  harfang_get_debug_visuals_transform_system(harfang_transform_system this_);
extern void harfang_draw_debug_panel_transform_system(harfang_transform_system this_ ,harfang_render_system_nobind  render_system);
extern void harfang_draw_debug_visuals_transform_system(harfang_transform_system this_ ,harfang_render_system_nobind  render_system);
extern void harfang_physic_trace_free(harfang_physic_trace);
extern harfang_vector3  harfang_get_position_physic_trace(harfang_physic_trace this_);
extern harfang_vector3  harfang_get_normal_physic_trace(harfang_physic_trace this_);
extern harfang_node  harfang_get_node_physic_trace(harfang_physic_trace this_);
extern void harfang_physic_system_free(harfang_physic_system);
extern const char** harfang_get_implementation_name_physic_system(harfang_physic_system this_);
extern float  harfang_get_timestep_physic_system(harfang_physic_system this_);
extern void harfang_set_timestep_physic_system(harfang_physic_system this_ ,const float  timestep);
extern bool  harfang_get_force_rigid_body_to_sleep_on_creation_physic_system(harfang_physic_system this_);
extern void harfang_set_force_rigid_body_to_sleep_on_creation_physic_system(harfang_physic_system this_ ,const bool  force_sleep_body);
extern unsigned int harfang_get_force_rigid_body_axis_lock_on_creation_physic_system(harfang_physic_system this_);
extern void harfang_set_force_rigid_body_axis_lock_on_creation_physic_system(harfang_physic_system this_ ,unsigned int force_axis_lock);
extern harfang_vector3  harfang_get_gravity_physic_system(harfang_physic_system this_);
extern void harfang_set_gravity_physic_system(harfang_physic_system this_ ,const harfang_vector3  G);
extern bool  harfang_raycast_physic_system(harfang_physic_system this_ ,const harfang_vector3  start ,const harfang_vector3  direction ,harfang_physic_trace  hit);
extern bool  harfang_raycast_physic_system_with_collision_layer_mask(harfang_physic_system this_ ,const harfang_vector3  start ,const harfang_vector3  direction ,harfang_physic_trace  hit ,uint8_t  collision_layer_mask);
extern bool  harfang_raycast_physic_system_with_collision_layer_mask_max_distance(harfang_physic_system this_ ,const harfang_vector3  start ,const harfang_vector3  direction ,harfang_physic_trace  hit ,uint8_t  collision_layer_mask ,float  max_distance);
extern const bool * harfang_get_rigid_body_is_sleeping_physic_system(harfang_physic_system this_ ,const harfang_rigid_body_nobind  rigid_body);
extern void harfang_set_rigid_body_is_sleeping_physic_system(harfang_physic_system this_ ,harfang_rigid_body_nobind  rigid_body ,const bool  sleeping);
extern const harfang_vector3  harfang_get_rigid_body_angular_velocity_physic_system(harfang_physic_system this_ ,const harfang_rigid_body_nobind  rigid_body);
extern void harfang_set_rigid_body_angular_velocity_physic_system(harfang_physic_system this_ ,harfang_rigid_body_nobind  rigid_body ,const harfang_vector3  W);
extern const harfang_vector3  harfang_get_rigid_body_linear_velocity_physic_system(harfang_physic_system this_ ,const harfang_rigid_body_nobind  rigid_body);
extern void harfang_set_rigid_body_linear_velocity_physic_system(harfang_physic_system this_ ,harfang_rigid_body_nobind  rigid_body ,const harfang_vector3  V);
extern const float * harfang_get_rigid_body_linear_damping_physic_system(harfang_physic_system this_ ,const harfang_rigid_body_nobind  rigid_body);
extern void harfang_set_rigid_body_linear_damping_physic_system(harfang_physic_system this_ ,harfang_rigid_body_nobind  rigid_body ,const float  k);
extern const float * harfang_get_rigid_body_angular_damping_physic_system(harfang_physic_system this_ ,const harfang_rigid_body_nobind  rigid_body);
extern void harfang_set_rigid_body_angular_damping_physic_system(harfang_physic_system this_ ,harfang_rigid_body_nobind  rigid_body ,const float  k);
extern const float * harfang_get_rigid_body_static_friction_physic_system(harfang_physic_system this_ ,const harfang_rigid_body_nobind  rigid_body);
extern void harfang_set_rigid_body_static_friction_physic_system(harfang_physic_system this_ ,harfang_rigid_body_nobind  rigid_body ,const float  static_friction);
extern const float * harfang_get_rigid_body_dynamic_friction_physic_system(harfang_physic_system this_ ,const harfang_rigid_body_nobind  rigid_body);
extern void harfang_set_rigid_body_dynamic_friction_physic_system(harfang_physic_system this_ ,harfang_rigid_body_nobind  rigid_body ,const float  dynamic_friction);
extern const float * harfang_get_rigid_body_restitution_physic_system(harfang_physic_system this_ ,const harfang_rigid_body_nobind  rigid_body);
extern void harfang_set_rigid_body_restitution_physic_system(harfang_physic_system this_ ,harfang_rigid_body_nobind  rigid_body ,const float  restitution);
extern const uint8_t * harfang_get_rigid_body_axis_lock_physic_system(harfang_physic_system this_ ,const harfang_rigid_body_nobind  rigid_body);
extern void harfang_set_rigid_body_axis_lock_physic_system(harfang_physic_system this_ ,harfang_rigid_body_nobind  rigid_body ,const uint8_t  axis_lock);
extern const uint8_t * harfang_get_rigid_body_collision_layer_physic_system(harfang_physic_system this_ ,const harfang_rigid_body_nobind  rigid_body);
extern void harfang_set_rigid_body_collision_layer_physic_system(harfang_physic_system this_ ,harfang_rigid_body_nobind  rigid_body ,const uint8_t  layer);
extern harfang_vector3  harfang_get_rigid_body_velocity_physic_system(harfang_physic_system this_ ,const harfang_rigid_body_nobind  body ,const harfang_vector3  p);
extern void harfang_set_rigid_body_velocity_physic_system(harfang_physic_system this_ ,harfang_rigid_body_nobind  body ,const harfang_vector3  V ,const harfang_vector3  p);
extern void harfang_rigid_body_apply_linear_impulse_physic_system(harfang_physic_system this_ ,harfang_rigid_body_nobind  body ,const harfang_vector3  I);
extern void harfang_rigid_body_apply_linear_force_physic_system(harfang_physic_system this_ ,harfang_rigid_body_nobind  body ,const harfang_vector3  F);
extern void harfang_rigid_body_apply_torque_physic_system(harfang_physic_system this_ ,harfang_rigid_body_nobind  body ,const harfang_vector3  T);
extern void harfang_rigid_body_apply_impulse_physic_system(harfang_physic_system this_ ,harfang_rigid_body_nobind  body ,const harfang_vector3  I ,const harfang_vector3  p);
extern void harfang_rigid_body_apply_force_physic_system(harfang_physic_system this_ ,harfang_rigid_body_nobind  body ,const harfang_vector3  F ,const harfang_vector3  p);
extern void harfang_rigid_body_reset_world_physic_system(harfang_physic_system this_ ,harfang_rigid_body_nobind  body ,const harfang_matrix4  M);
extern const harfang_collisionpair_list  harfang_get_collision_pairs_physic_system(harfang_physic_system this_);
extern harfang_collisionpair_list  harfang_get_collision_pairs_physic_system_with_node(harfang_physic_system this_ ,const harfang_node  node);
extern bool  harfang_has_collided_physic_system(harfang_physic_system this_ ,const harfang_node  node);
extern bool  harfang_has_collided_physic_system_with_node_a_node_b(harfang_physic_system this_ ,const harfang_node  node_a ,const harfang_node  node_b);
extern void harfang_set_collision_layer_pair_state_physic_system(harfang_physic_system this_ ,uint16_t  layer_a ,uint16_t  layer_b ,bool  enable_collision);
extern bool  harfang_get_collision_layer_pair_state_physic_system(harfang_physic_system this_ ,uint16_t  layer_a ,uint16_t  layer_b);
extern const char** harfang_get_aspect_physic_system(harfang_physic_system this_);
extern void harfang_update_physic_system(harfang_physic_system this_ ,int64_t  dt);
extern bool  harfang_wait_update_physic_system(harfang_physic_system this_);
extern bool  harfang_wait_update_physic_system_with_blocking(harfang_physic_system this_ ,bool  blocking);
extern void harfang_commit_physic_system(harfang_physic_system this_);
extern bool  harfang_wait_commit_physic_system(harfang_physic_system this_);
extern bool  harfang_wait_commit_physic_system_with_blocking(harfang_physic_system this_ ,bool  blocking);
extern void harfang_add_component_physic_system(harfang_physic_system this_ ,harfang_component  component);
extern void harfang_remove_component_physic_system(harfang_physic_system this_ ,const harfang_component  component);
extern void harfang_cleanup_physic_system(harfang_physic_system this_);
extern void harfang_set_debug_visuals_physic_system(harfang_physic_system this_ ,bool  enable);
extern bool  harfang_get_debug_visuals_physic_system(harfang_physic_system this_);
extern void harfang_draw_debug_panel_physic_system(harfang_physic_system this_ ,harfang_render_system_nobind  render_system);
extern void harfang_draw_debug_visuals_physic_system(harfang_physic_system this_ ,harfang_render_system_nobind  render_system);
extern void harfang_collision_pair_free(harfang_collision_pair);
extern harfang_node  harfang_get_node_a_collision_pair(harfang_collision_pair this_);
extern harfang_node  harfang_get_node_b_collision_pair(harfang_collision_pair this_);
extern uint8_t  harfang_get_contact_count_collision_pair(harfang_collision_pair this_);
extern harfang_vector3  harfang_get_contact_position_collision_pair(harfang_collision_pair this_ ,unsigned int idx);
extern harfang_vector3  harfang_get_contact_normal_collision_pair(harfang_collision_pair this_ ,unsigned int idx);
extern void harfang_collisionpair_list_free(harfang_collisionpair_list);
extern void harfang_push_back_collisionpair_list(harfang_collisionpair_list this_ ,harfang_collision_pair  v);
extern size_t  harfang_size_collisionpair_list(harfang_collisionpair_list this_);
extern harfang_collision_pair  harfang_at_collisionpair_list(harfang_collisionpair_list this_ ,size_t  idx);
extern void harfang_scene_bound_anim_free(harfang_scene_bound_anim);
extern void harfang_anim_track_free(harfang_anim_track);
extern const char* harfang_get_target_anim_track(harfang_anim_track this_);
extern void harfang_set_target_anim_track(harfang_anim_track this_ ,const char* target);
extern int64_t  harfang_get_duration_anim_track(harfang_anim_track this_);
extern bool  harfang_get_range_anim_track(harfang_anim_track this_ ,int64_t * t_start ,int64_t * t_end);
extern int64_t  harfang_anim_key_float_get_t(harfang_anim_key_float h);
extern void harfang_anim_key_float_set_t(harfang_anim_key_float h, int64_t  v);
extern float  harfang_anim_key_float_get_v(harfang_anim_key_float h);
extern void harfang_anim_key_float_set_v(harfang_anim_key_float h, float  v);
extern void harfang_anim_key_float_free(harfang_anim_key_float);
extern int64_t  harfang_anim_key_vector3_get_t(harfang_anim_key_vector3 h);
extern void harfang_anim_key_vector3_set_t(harfang_anim_key_vector3 h, int64_t  v);
extern harfang_vector3  harfang_anim_key_vector3_get_v(harfang_anim_key_vector3 h);
extern void harfang_anim_key_vector3_set_v(harfang_anim_key_vector3 h, harfang_vector3  v);
extern void harfang_anim_key_vector3_free(harfang_anim_key_vector3);
extern harfang_anim_track_float  harfang_constructor_anim_track_float(const char* target);
extern void harfang_anim_track_float_free(harfang_anim_track_float);
extern bool  harfang_get_value_anim_track_float(harfang_anim_track_float this_ ,int64_t  t ,float * value);
extern size_t  harfang_get_key_count_anim_track_float(harfang_anim_track_float this_);
extern harfang_anim_key_float  harfang_get_key_anim_track_float(harfang_anim_track_float this_ ,size_t  idx);
extern void harfang_set_key_anim_track_float(harfang_anim_track_float this_ ,int64_t  t ,const float  v);
extern bool  harfang_remove_key_anim_track_float(harfang_anim_track_float this_ ,int64_t  t);
extern bool  harfang_remove_key_anim_track_float_with_idx(harfang_anim_track_float this_ ,size_t  idx);
extern void harfang_clear_anim_track_float(harfang_anim_track_float this_);
extern const char* harfang_get_target_anim_track_float(harfang_anim_track_float this_);
extern void harfang_set_target_anim_track_float(harfang_anim_track_float this_ ,const char* target);
extern int64_t  harfang_get_duration_anim_track_float(harfang_anim_track_float this_);
extern bool  harfang_get_range_anim_track_float(harfang_anim_track_float this_ ,int64_t * t_start ,int64_t * t_end);
extern harfang_anim_track_vector3  harfang_constructor_anim_track_vector3(const char* target);
extern void harfang_anim_track_vector3_free(harfang_anim_track_vector3);
extern bool  harfang_get_value_anim_track_vector3(harfang_anim_track_vector3 this_ ,int64_t  t ,harfang_vector3  value);
extern size_t  harfang_get_key_count_anim_track_vector3(harfang_anim_track_vector3 this_);
extern harfang_anim_key_vector3  harfang_get_key_anim_track_vector3(harfang_anim_track_vector3 this_ ,size_t  idx);
extern void harfang_set_key_anim_track_vector3(harfang_anim_track_vector3 this_ ,int64_t  t ,const harfang_vector3  v);
extern bool  harfang_remove_key_anim_track_vector3(harfang_anim_track_vector3 this_ ,int64_t  t);
extern bool  harfang_remove_key_anim_track_vector3_with_idx(harfang_anim_track_vector3 this_ ,size_t  idx);
extern void harfang_clear_anim_track_vector3(harfang_anim_track_vector3 this_);
extern const char* harfang_get_target_anim_track_vector3(harfang_anim_track_vector3 this_);
extern void harfang_set_target_anim_track_vector3(harfang_anim_track_vector3 this_ ,const char* target);
extern int64_t  harfang_get_duration_anim_track_vector3(harfang_anim_track_vector3 this_);
extern bool  harfang_get_range_anim_track_vector3(harfang_anim_track_vector3 this_ ,int64_t * t_start ,int64_t * t_end);
extern harfang_anim_track_rotation  harfang_constructor_anim_track_rotation(const char* target);
extern void harfang_anim_track_rotation_free(harfang_anim_track_rotation);
extern bool  harfang_get_value_anim_track_rotation(harfang_anim_track_rotation this_ ,int64_t  t ,harfang_vector3  value);
extern size_t  harfang_get_key_count_anim_track_rotation(harfang_anim_track_rotation this_);
extern harfang_anim_key_vector3  harfang_get_key_anim_track_rotation(harfang_anim_track_rotation this_ ,size_t  idx);
extern void harfang_set_key_anim_track_rotation(harfang_anim_track_rotation this_ ,int64_t  t ,const harfang_vector3  v);
extern bool  harfang_remove_key_anim_track_rotation(harfang_anim_track_rotation this_ ,int64_t  t);
extern bool  harfang_remove_key_anim_track_rotation_with_idx(harfang_anim_track_rotation this_ ,size_t  idx);
extern void harfang_clear_anim_track_rotation(harfang_anim_track_rotation this_);
extern const char* harfang_get_target_anim_track_rotation(harfang_anim_track_rotation this_);
extern void harfang_set_target_anim_track_rotation(harfang_anim_track_rotation this_ ,const char* target);
extern int64_t  harfang_get_duration_anim_track_rotation(harfang_anim_track_rotation this_);
extern bool  harfang_get_range_anim_track_rotation(harfang_anim_track_rotation this_ ,int64_t * t_start ,int64_t * t_end);
extern harfang_anim  harfang_constructor_anim(const char* target);
extern void harfang_anim_free(harfang_anim);
extern const char** harfang_get_target_anim(harfang_anim this_);
extern void harfang_set_target_anim(harfang_anim this_ ,const char* target);
extern size_t  harfang_get_track_count_anim(harfang_anim this_);
extern void harfang_add_track_anim(harfang_anim this_ ,harfang_anim_track  track);
extern harfang_anim_track  harfang_get_track_anim(harfang_anim this_ ,size_t  idx);
extern harfang_anim_track  harfang_get_track_anim_with_target(harfang_anim this_ ,const char* target);
extern bool  harfang_remove_track_anim(harfang_anim this_ ,size_t  idx);
extern void harfang_remove_track_anim_with_target(harfang_anim this_ ,const char* target);
extern void harfang_remove_track_anim_with_track(harfang_anim this_ ,const harfang_anim_track  track);
extern bool  harfang_get_tracks_range_anim(harfang_anim this_ ,int64_t * t_start ,int64_t * t_end);
extern harfang_anim_take  harfang_constructor_anim_take(const char* name);
extern void harfang_anim_take_free(harfang_anim_take);
extern const char** harfang_get_name_anim_take(harfang_anim_take this_);
extern void harfang_set_name_anim_take(harfang_anim_take this_ ,const char* name);
extern void harfang_get_range_anim_take(harfang_anim_take this_ ,int64_t * start ,int64_t * end);
extern void harfang_set_range_anim_take(harfang_anim_take this_ ,int64_t  start ,int64_t  end);
extern size_t  harfang_get_anim_count_anim_take(harfang_anim_take this_);
extern void harfang_add_anim_anim_take(harfang_anim_take this_ ,harfang_anim  anim);
extern harfang_anim  harfang_get_anim_anim_take(harfang_anim_take this_ ,size_t  idx);
extern harfang_anim  harfang_get_anim_anim_take_with_target(harfang_anim_take this_ ,const char* target);
extern bool  harfang_remove_anim_anim_take(harfang_anim_take this_ ,size_t  idx);
extern void harfang_remove_anim_anim_take_with_target(harfang_anim_take this_ ,const char* target);
extern void harfang_remove_anim_anim_take_with_anim(harfang_anim_take this_ ,const harfang_anim  anim);
extern bool  harfang_get_anims_range_anim_take(harfang_anim_take this_ ,int64_t * t_start ,int64_t * t_end);
extern void harfang_animtake_list_free(harfang_animtake_list);
extern void harfang_push_back_animtake_list(harfang_animtake_list this_ ,harfang_anim_take  v);
extern size_t  harfang_size_animtake_list(harfang_animtake_list this_);
extern harfang_anim_take  harfang_at_animtake_list(harfang_animtake_list this_ ,size_t  idx);
extern void harfang_group_list_free(harfang_group_list);
extern harfang_scene_picking  harfang_constructor_scene_picking(harfang_render_system  render_system);
extern void harfang_scene_picking_free(harfang_scene_picking);
extern harfang_future_bool  harfang_prepare_scene_picking(harfang_scene_picking this_ ,harfang_scene  scene ,bool  prepare_node_picking ,bool  prepare_world_picking);
extern bool  harfang_pick_scene_picking_with_xy_nodes(harfang_scene_picking this_ ,const harfang_scene_nobind  scene ,int  x ,int  y ,harfang_node_list  nodes);
extern bool  harfang_pick_scene_picking(harfang_scene_picking this_ ,const harfang_scene_nobind  scene ,const harfang_int_rect  rect ,harfang_node_list  nodes);
extern bool  harfang_pick_world_scene_picking(harfang_scene_picking this_ ,const harfang_scene_nobind  scene ,float  x ,float  y ,harfang_vector3  world_pos);
extern void harfang_input_device_free(harfang_input_device);
extern int harfang_get_type_input_device(harfang_input_device this_);
extern void harfang_update_input_device(harfang_input_device this_);
extern bool  harfang_is_down_input_device(harfang_input_device this_ ,int key);
extern bool  harfang_was_down_input_device(harfang_input_device this_ ,int key);
extern bool  harfang_was_pressed_input_device(harfang_input_device this_ ,int key);
extern bool  harfang_was_released_input_device(harfang_input_device this_ ,int key);
extern bool  harfang_is_button_down_input_device(harfang_input_device this_ ,int button);
extern bool  harfang_was_button_down_input_device(harfang_input_device this_ ,int button);
extern bool  harfang_was_button_pressed_input_device(harfang_input_device this_ ,int button);
extern bool  harfang_was_button_released_input_device(harfang_input_device this_ ,int button);
extern float  harfang_get_value_input_device(harfang_input_device this_ ,int input);
extern float  harfang_get_last_value_input_device(harfang_input_device this_ ,int input);
extern bool  harfang_get_value_range_input_device(harfang_input_device this_ ,int input ,float * min ,float * max);
extern float  harfang_get_delta_input_device(harfang_input_device this_ ,int input);
extern harfang_matrix4  harfang_get_matrix_input_device(harfang_input_device this_ ,int mtx);
extern bool  harfang_set_value_input_device(harfang_input_device this_ ,int input ,float  value);
extern bool  harfang_set_effect_input_device(harfang_input_device this_ ,int effect ,float  value);
extern bool  harfang_is_connected_input_device(harfang_input_device this_);
extern void harfang_input_system_free(harfang_input_system);
extern void harfang_update_input_system(harfang_input_system this_);
extern harfang_string_list  harfang_get_devices_input_system(harfang_input_system this_);
extern harfang_input_device  harfang_get_device_input_system(harfang_input_system this_ ,const char* name);
extern harfang_window  harfang_render_window_get_window(harfang_render_window h);
extern void harfang_render_window_set_window(harfang_render_window h, harfang_window  v);
extern harfang_surface  harfang_render_window_get_surface(harfang_render_window h);
extern void harfang_render_window_set_surface(harfang_render_window h, harfang_surface  v);
extern harfang_render_window  harfang_constructor_render_window();
extern void harfang_render_window_free(harfang_render_window);
extern void harfang_plus_free(harfang_plus);
extern void harfang_create_workers_plus(harfang_plus this_);
extern void harfang_delete_workers_plus(harfang_plus this_);
extern void harfang_mount_plus(harfang_plus this_);
extern void harfang_mount_plus_with_path(harfang_plus this_ ,const char* path);
extern void harfang_mount_as_plus(harfang_plus this_ ,const char* path ,const char* prefix);
extern void harfang_unmount_plus(harfang_plus this_ ,const char* path);
extern void harfang_unmount_all_plus(harfang_plus this_);
extern harfang_renderer  harfang_get_renderer_plus(harfang_plus this_);
extern harfang_renderer_async  harfang_get_renderer_async_plus(harfang_plus this_);
extern harfang_render_system  harfang_get_render_system_plus(harfang_plus this_);
extern harfang_render_system_async  harfang_get_render_system_async_plus(harfang_plus this_);
extern bool  harfang_audio_init_plus(harfang_plus this_);
extern void harfang_audio_uninit_plus(harfang_plus this_);
extern harfang_mixer  harfang_get_mixer_plus(harfang_plus this_);
extern harfang_mixer_async  harfang_get_mixer_async_plus(harfang_plus this_);
extern bool  harfang_is_app_ended_plus(harfang_plus this_);
extern bool  harfang_is_app_ended_plus_with_flags(harfang_plus this_ ,int flags);
extern bool  harfang_render_init_plus(harfang_plus this_ ,int  width ,int  height);
extern bool  harfang_render_init_plus_with_core_path(harfang_plus this_ ,int  width ,int  height ,const char* core_path);
extern bool  harfang_render_init_plus_with_core_path_aa(harfang_plus this_ ,int  width ,int  height ,const char* core_path ,int  aa);
extern bool  harfang_render_init_plus_with_core_path_aa_visibility(harfang_plus this_ ,int  width ,int  height ,const char* core_path ,int  aa ,uint8_t visibility);
extern bool  harfang_render_init_plus_with_core_path_aa_visibility_debug(harfang_plus this_ ,int  width ,int  height ,const char* core_path ,int  aa ,uint8_t visibility ,bool  debug);
extern bool  harfang_render_init_plus_with_aa(harfang_plus this_ ,int  width ,int  height ,int  aa);
extern bool  harfang_render_init_plus_with_aa_visibility(harfang_plus this_ ,int  width ,int  height ,int  aa ,uint8_t visibility);
extern bool  harfang_render_init_plus_with_aa_visibility_debug(harfang_plus this_ ,int  width ,int  height ,int  aa ,uint8_t visibility ,bool  debug);
extern void harfang_render_uninit_plus(harfang_plus this_);
extern harfang_render_window  harfang_new_render_window_plus(harfang_plus this_ ,int  width ,int  height);
extern harfang_render_window  harfang_new_render_window_plus_with_visibility(harfang_plus this_ ,int  width ,int  height ,uint8_t visibility);
extern void harfang_free_render_window_plus(harfang_plus this_ ,harfang_render_window  window);
extern harfang_render_window  harfang_get_render_window_plus(harfang_plus this_);
extern void harfang_set_render_window_plus_with_window(harfang_plus this_ ,harfang_render_window  window);
extern void harfang_set_render_window_plus(harfang_plus this_);
extern harfang_int_vector2  harfang_get_render_window_size_plus(harfang_plus this_ ,const harfang_render_window  window);
extern void harfang_update_render_window_plus(harfang_plus this_ ,const harfang_render_window  window);
extern void harfang_set_window_title_plus(harfang_plus this_ ,const char* title);
extern void harfang_set_window_title_plus_with_window_title(harfang_plus this_ ,const harfang_render_window  window ,const char* title);
extern void harfang_init_extern_plus(harfang_plus this_ ,harfang_renderer  renderer ,harfang_renderer_async  renderer_async ,harfang_render_system  render_system ,harfang_render_system_async  render_system_async);
extern void harfang_uninit_extern_plus(harfang_plus this_);
extern void harfang_set2_d_origin_is_top_left_plus(harfang_plus this_ ,bool  top_left);
extern void harfang_set_fixed2_d_resolution_plus(harfang_plus this_ ,float  w ,float  h);
extern harfang_vector2  harfang_get_fixed2_d_resolution_plus(harfang_plus this_);
extern void harfang_commit2_d_plus(harfang_plus this_);
extern void harfang_commit3_d_plus(harfang_plus this_);
extern int  harfang_get_screen_width_plus(harfang_plus this_);
extern int  harfang_get_screen_height_plus(harfang_plus this_);
extern void harfang_flip_plus(harfang_plus this_);
extern void harfang_end_frame_plus(harfang_plus this_);
extern void harfang_wait_for_render_plus(harfang_plus this_);
extern void harfang_set_blend2_d_plus(harfang_plus this_ ,int mode);
extern int harfang_get_blend2_d_plus(harfang_plus this_);
extern void harfang_set_culling2_d_plus(harfang_plus this_ ,int mode);
extern int harfang_get_culling2_d_plus(harfang_plus this_);
extern void harfang_set_blend3_d_plus(harfang_plus this_ ,int mode);
extern int harfang_get_blend3_d_plus(harfang_plus this_);
extern void harfang_set_culling3_d_plus(harfang_plus this_ ,int mode);
extern int harfang_get_culling3_d_plus(harfang_plus this_);
extern void harfang_set_depth_test2_d_plus(harfang_plus this_ ,bool  enable);
extern bool  harfang_get_depth_test2_d_plus(harfang_plus this_);
extern void harfang_set_depth_write2_d_plus(harfang_plus this_ ,bool  enable);
extern bool  harfang_get_depth_write2_d_plus(harfang_plus this_);
extern void harfang_set_depth_test3_d_plus(harfang_plus this_ ,bool  enable);
extern bool  harfang_get_depth_test3_d_plus(harfang_plus this_);
extern void harfang_set_depth_write3_d_plus(harfang_plus this_ ,bool  enable);
extern bool  harfang_get_depth_write3_d_plus(harfang_plus this_);
extern void harfang_clear_plus(harfang_plus this_);
extern void harfang_clear_plus_with_color(harfang_plus this_ ,harfang_color  color);
extern void harfang_plot2_d_plus(harfang_plus this_ ,float  x ,float  y);
extern void harfang_plot2_d_plus_with_color(harfang_plus this_ ,float  x ,float  y ,harfang_color  color);
extern void harfang_line2_d_plus(harfang_plus this_ ,float  sx ,float  sy ,float  ex ,float  ey);
extern void harfang_line2_d_plus_with_start_color_end_color(harfang_plus this_ ,float  sx ,float  sy ,float  ex ,float  ey ,harfang_color  start_color ,harfang_color  end_color);
extern void harfang_triangle2_d_plus(harfang_plus this_ ,float  ax ,float  ay ,float  bx ,float  by ,float  cx ,float  cy);
extern void harfang_triangle2_d_plus_with_a_color_b_color_c_color(harfang_plus this_ ,float  ax ,float  ay ,float  bx ,float  by ,float  cx ,float  cy ,harfang_color  a_color ,harfang_color  b_color ,harfang_color  c_color);
extern void harfang_quad2_d_plus(harfang_plus this_ ,float  ax ,float  ay ,float  bx ,float  by ,float  cx ,float  cy ,float  dx ,float  dy);
extern void harfang_quad2_d_plus_with_a_color_b_color_c_color_d_color(harfang_plus this_ ,float  ax ,float  ay ,float  bx ,float  by ,float  cx ,float  cy ,float  dx ,float  dy ,harfang_color  a_color ,harfang_color  b_color ,harfang_color  c_color ,harfang_color  d_color);
extern void harfang_quad2_d_plus_with_a_color_b_color_c_color_d_color_texture(harfang_plus this_ ,float  ax ,float  ay ,float  bx ,float  by ,float  cx ,float  cy ,float  dx ,float  dy ,harfang_color  a_color ,harfang_color  b_color ,harfang_color  c_color ,harfang_color  d_color ,harfang_texture  texture);
extern void harfang_quad2_d_plus_with_a_color_b_color_c_color_d_color_texture_uv_sx_uv_sy_uv_ex_uv_ey(harfang_plus this_ ,float  ax ,float  ay ,float  bx ,float  by ,float  cx ,float  cy ,float  dx ,float  dy ,harfang_color  a_color ,harfang_color  b_color ,harfang_color  c_color ,harfang_color  d_color ,harfang_texture  texture ,float  uv_sx ,float  uv_sy ,float  uv_ex ,float  uv_ey);
extern void harfang_line3_d_plus(harfang_plus this_ ,float  sx ,float  sy ,float  sz ,float  ex ,float  ey ,float  ez);
extern void harfang_line3_d_plus_with_start_color_end_color(harfang_plus this_ ,float  sx ,float  sy ,float  sz ,float  ex ,float  ey ,float  ez ,harfang_color  start_color ,harfang_color  end_color);
extern void harfang_triangle3_d_plus(harfang_plus this_ ,float  ax ,float  ay ,float  az ,float  bx ,float  by ,float  bz ,float  cx ,float  cy ,float  cz);
extern void harfang_triangle3_d_plus_with_a_color_b_color_c_color(harfang_plus this_ ,float  ax ,float  ay ,float  az ,float  bx ,float  by ,float  bz ,float  cx ,float  cy ,float  cz ,harfang_color  a_color ,harfang_color  b_color ,harfang_color  c_color);
extern void harfang_quad3_d_plus(harfang_plus this_ ,float  ax ,float  ay ,float  az ,float  bx ,float  by ,float  bz ,float  cx ,float  cy ,float  cz ,float  dx ,float  dy ,float  dz);
extern void harfang_quad3_d_plus_with_a_color_b_color_c_color_d_color(harfang_plus this_ ,float  ax ,float  ay ,float  az ,float  bx ,float  by ,float  bz ,float  cx ,float  cy ,float  cz ,float  dx ,float  dy ,float  dz ,harfang_color  a_color ,harfang_color  b_color ,harfang_color  c_color ,harfang_color  d_color);
extern void harfang_quad3_d_plus_with_a_color_b_color_c_color_d_color_texture(harfang_plus this_ ,float  ax ,float  ay ,float  az ,float  bx ,float  by ,float  bz ,float  cx ,float  cy ,float  cz ,float  dx ,float  dy ,float  dz ,harfang_color  a_color ,harfang_color  b_color ,harfang_color  c_color ,harfang_color  d_color ,harfang_texture  texture);
extern void harfang_quad3_d_plus_with_a_color_b_color_c_color_d_color_texture_uv_sx_uv_sy_uv_ex_uv_ey(harfang_plus this_ ,float  ax ,float  ay ,float  az ,float  bx ,float  by ,float  bz ,float  cx ,float  cy ,float  cz ,float  dx ,float  dy ,float  dz ,harfang_color  a_color ,harfang_color  b_color ,harfang_color  c_color ,harfang_color  d_color ,harfang_texture  texture ,float  uv_sx ,float  uv_sy ,float  uv_ex ,float  uv_ey);
extern void harfang_lines2_d_plus(harfang_plus this_ ,const harfang_vector2_list  points ,const harfang_color_list  colors);
extern void harfang_quads2_d_plus(harfang_plus this_ ,const harfang_vector2_list  points ,const float  size ,const harfang_color  color ,harfang_texture  texture);
extern void harfang_set_font_plus(harfang_plus this_ ,const char* path);
extern const char** harfang_get_font_plus(harfang_plus this_);
extern void harfang_text2_d_plus(harfang_plus this_ ,float  x ,float  y ,const char* text);
extern void harfang_text2_d_plus_with_size(harfang_plus this_ ,float  x ,float  y ,const char* text ,float  size);
extern void harfang_text2_d_plus_with_size_color(harfang_plus this_ ,float  x ,float  y ,const char* text ,float  size ,harfang_color  color);
extern void harfang_text2_d_plus_with_size_color_font_path(harfang_plus this_ ,float  x ,float  y ,const char* text ,float  size ,harfang_color  color ,const char* font_path);
extern void harfang_text3_d_plus(harfang_plus this_ ,float  x ,float  y ,float  z ,const char* text);
extern void harfang_text3_d_plus_with_size(harfang_plus this_ ,float  x ,float  y ,float  z ,const char* text ,float  size);
extern void harfang_text3_d_plus_with_size_color(harfang_plus this_ ,float  x ,float  y ,float  z ,const char* text ,float  size ,harfang_color  color);
extern void harfang_text3_d_plus_with_size_color_font_path(harfang_plus this_ ,float  x ,float  y ,float  z ,const char* text ,float  size ,harfang_color  color ,const char* font_path);
extern harfang_rect  harfang_get_text_rect_plus(harfang_plus this_ ,const char* text);
extern harfang_rect  harfang_get_text_rect_plus_with_size(harfang_plus this_ ,const char* text ,float  size);
extern harfang_rect  harfang_get_text_rect_plus_with_size_font_path(harfang_plus this_ ,const char* text ,float  size ,const char* font_path);
extern void harfang_sprite2_d_plus(harfang_plus this_ ,float  x ,float  y ,float  size ,const char* image_path);
extern void harfang_sprite2_d_plus_with_tint(harfang_plus this_ ,float  x ,float  y ,float  size ,const char* image_path ,harfang_color  tint);
extern void harfang_sprite2_d_plus_with_tint_pivot_x_pivot_y(harfang_plus this_ ,float  x ,float  y ,float  size ,const char* image_path ,harfang_color  tint ,float  pivot_x ,float  pivot_y);
extern void harfang_sprite2_d_plus_with_tint_pivot_x_pivot_y_flip_h_flip_v(harfang_plus this_ ,float  x ,float  y ,float  size ,const char* image_path ,harfang_color  tint ,float  pivot_x ,float  pivot_y ,bool  flip_h ,bool  flip_v);
extern void harfang_rotated_sprite2_d_plus(harfang_plus this_ ,float  x ,float  y ,float  angle ,float  size ,const char* image_path);
extern void harfang_rotated_sprite2_d_plus_with_tint(harfang_plus this_ ,float  x ,float  y ,float  angle ,float  size ,const char* image_path ,harfang_color  tint);
extern void harfang_rotated_sprite2_d_plus_with_tint_pivot_x_pivot_y(harfang_plus this_ ,float  x ,float  y ,float  angle ,float  size ,const char* image_path ,harfang_color  tint ,float  pivot_x ,float  pivot_y);
extern void harfang_rotated_sprite2_d_plus_with_tint_pivot_x_pivot_y_flip_h_flip_v(harfang_plus this_ ,float  x ,float  y ,float  angle ,float  size ,const char* image_path ,harfang_color  tint ,float  pivot_x ,float  pivot_y ,bool  flip_h ,bool  flip_v);
extern void harfang_image2_d_plus(harfang_plus this_ ,float  x ,float  y ,float  scale ,const char* image_path);
extern void harfang_image2_d_plus_with_tint(harfang_plus this_ ,float  x ,float  y ,float  scale ,const char* image_path ,harfang_color  tint);
extern void harfang_blit2_d_plus(harfang_plus this_ ,float  src_x ,float  src_y ,float  src_w ,float  src_h ,float  dst_x ,float  dst_y ,float  dst_w ,float  dst_h ,const char* image_path);
extern void harfang_blit2_d_plus_with_tint(harfang_plus this_ ,float  src_x ,float  src_y ,float  src_w ,float  src_h ,float  dst_x ,float  dst_y ,float  dst_w ,float  dst_h ,const char* image_path ,harfang_color  tint);
extern void harfang_texture2_d_plus(harfang_plus this_ ,float  x ,float  y ,float  scale ,const harfang_texture  texture);
extern void harfang_texture2_d_plus_with_tint(harfang_plus this_ ,float  x ,float  y ,float  scale ,const harfang_texture  texture ,harfang_color  tint);
extern void harfang_texture2_d_plus_with_color_flip_h_flip_v(harfang_plus this_ ,float  x ,float  y ,float  scale ,const harfang_texture  texture ,harfang_color  color ,bool  flip_h ,bool  flip_v);
extern harfang_texture  harfang_load_texture_plus(harfang_plus this_ ,const char* path);
extern harfang_render_material  harfang_load_material_plus(harfang_plus this_ ,const char* path);
extern harfang_render_material  harfang_load_material_plus_with_source(harfang_plus this_ ,const char* path ,const char* source);
extern harfang_surface_shader  harfang_load_surface_shader_plus(harfang_plus this_ ,const char* path);
extern harfang_surface_shader  harfang_load_surface_shader_plus_with_source(harfang_plus this_ ,const char* path ,const char* source);
extern harfang_render_geometry  harfang_load_geometry_plus(harfang_plus this_ ,const char* path);
extern harfang_render_geometry  harfang_create_geometry_plus(harfang_plus this_ ,const harfang_geometry  geometry);
extern harfang_render_geometry  harfang_create_geometry_plus_with_use_cache(harfang_plus this_ ,const harfang_geometry  geometry ,bool  use_cache);
extern void harfang_geometry2_d_plus(harfang_plus this_ ,float  x ,float  y ,const harfang_render_geometry  geometry);
extern void harfang_geometry2_d_plus_with_angle_x_angle_y_angle_z(harfang_plus this_ ,float  x ,float  y ,const harfang_render_geometry  geometry ,float  angle_x ,float  angle_y ,float  angle_z);
extern void harfang_geometry2_d_plus_with_angle_x_angle_y_angle_z_scale(harfang_plus this_ ,float  x ,float  y ,const harfang_render_geometry  geometry ,float  angle_x ,float  angle_y ,float  angle_z ,float  scale);
extern void harfang_geometry3_d_plus(harfang_plus this_ ,float  x ,float  y ,float  z ,const harfang_render_geometry  geometry);
extern void harfang_geometry3_d_plus_with_angle_x_angle_y_angle_z(harfang_plus this_ ,float  x ,float  y ,float  z ,const harfang_render_geometry  geometry ,float  angle_x ,float  angle_y ,float  angle_z);
extern void harfang_geometry3_d_plus_with_angle_x_angle_y_angle_z_scale(harfang_plus this_ ,float  x ,float  y ,float  z ,const harfang_render_geometry  geometry ,float  angle_x ,float  angle_y ,float  angle_z ,float  scale);
extern void harfang_set_camera3_d_plus_with_xyz(harfang_plus this_ ,float  x ,float  y ,float  z);
extern void harfang_set_camera3_d_plus_with_xyz_angle_x_angle_y_angle_z(harfang_plus this_ ,float  x ,float  y ,float  z ,float  angle_x ,float  angle_y ,float  angle_z);
extern void harfang_set_camera3_d_plus_with_xyz_angle_x_angle_y_angle_z_fov(harfang_plus this_ ,float  x ,float  y ,float  z ,float  angle_x ,float  angle_y ,float  angle_z ,float  fov);
extern void harfang_set_camera3_d_plus_with_xyz_angle_x_angle_y_angle_z_fov_z_near_z_far(harfang_plus this_ ,float  x ,float  y ,float  z ,float  angle_x ,float  angle_y ,float  angle_z ,float  fov ,float  z_near ,float  z_far);
extern void harfang_set_camera3_d_plus(harfang_plus this_ ,const harfang_matrix4  view ,const harfang_matrix44  projection);
extern harfang_matrix4  harfang_get_camera3_d_matrix_plus(harfang_plus this_);
extern harfang_matrix44  harfang_get_camera3_d_projection_matrix_plus(harfang_plus this_);
extern harfang_geometry  harfang_create_capsule_plus(harfang_plus this_);
extern harfang_geometry  harfang_create_capsule_plus_with_radius_height(harfang_plus this_ ,float  radius ,float  height);
extern harfang_geometry  harfang_create_capsule_plus_with_radius_height_subdiv_x_subdiv_y(harfang_plus this_ ,float  radius ,float  height ,int  subdiv_x ,int  subdiv_y);
extern harfang_geometry  harfang_create_capsule_plus_with_radius_height_subdiv_x_subdiv_y_material_path(harfang_plus this_ ,float  radius ,float  height ,int  subdiv_x ,int  subdiv_y ,const char* material_path);
extern harfang_geometry  harfang_create_capsule_plus_with_radius_height_subdiv_x_subdiv_y_material_path_name(harfang_plus this_ ,float  radius ,float  height ,int  subdiv_x ,int  subdiv_y ,const char* material_path ,const char* name);
extern harfang_geometry  harfang_create_cone_plus(harfang_plus this_);
extern harfang_geometry  harfang_create_cone_plus_with_radius_height(harfang_plus this_ ,float  radius ,float  height);
extern harfang_geometry  harfang_create_cone_plus_with_radius_height_subdiv_x(harfang_plus this_ ,float  radius ,float  height ,int  subdiv_x);
extern harfang_geometry  harfang_create_cone_plus_with_radius_height_subdiv_x_material_path(harfang_plus this_ ,float  radius ,float  height ,int  subdiv_x ,const char* material_path);
extern harfang_geometry  harfang_create_cone_plus_with_radius_height_subdiv_x_material_path_name(harfang_plus this_ ,float  radius ,float  height ,int  subdiv_x ,const char* material_path ,const char* name);
extern harfang_geometry  harfang_create_cube_plus(harfang_plus this_);
extern harfang_geometry  harfang_create_cube_plus_with_width_height_length(harfang_plus this_ ,float  width ,float  height ,float  length);
extern harfang_geometry  harfang_create_cube_plus_with_width_height_length_material_path(harfang_plus this_ ,float  width ,float  height ,float  length ,const char* material_path);
extern harfang_geometry  harfang_create_cube_plus_with_width_height_length_material_path_name(harfang_plus this_ ,float  width ,float  height ,float  length ,const char* material_path ,const char* name);
extern harfang_geometry  harfang_create_cylinder_plus(harfang_plus this_);
extern harfang_geometry  harfang_create_cylinder_plus_with_radius_height(harfang_plus this_ ,float  radius ,float  height);
extern harfang_geometry  harfang_create_cylinder_plus_with_radius_height_subdiv_x(harfang_plus this_ ,float  radius ,float  height ,int  subdiv_x);
extern harfang_geometry  harfang_create_cylinder_plus_with_radius_height_subdiv_x_material_path(harfang_plus this_ ,float  radius ,float  height ,int  subdiv_x ,const char* material_path);
extern harfang_geometry  harfang_create_cylinder_plus_with_radius_height_subdiv_x_material_path_name(harfang_plus this_ ,float  radius ,float  height ,int  subdiv_x ,const char* material_path ,const char* name);
extern harfang_geometry  harfang_create_plane_plus(harfang_plus this_);
extern harfang_geometry  harfang_create_plane_plus_with_width_length(harfang_plus this_ ,float  width ,float  length);
extern harfang_geometry  harfang_create_plane_plus_with_width_length_subdiv(harfang_plus this_ ,float  width ,float  length ,int  subdiv);
extern harfang_geometry  harfang_create_plane_plus_with_width_length_subdiv_material_path(harfang_plus this_ ,float  width ,float  length ,int  subdiv ,const char* material_path);
extern harfang_geometry  harfang_create_plane_plus_with_width_length_subdiv_material_path_name(harfang_plus this_ ,float  width ,float  length ,int  subdiv ,const char* material_path ,const char* name);
extern harfang_geometry  harfang_create_sphere_plus(harfang_plus this_);
extern harfang_geometry  harfang_create_sphere_plus_with_radius(harfang_plus this_ ,float  radius);
extern harfang_geometry  harfang_create_sphere_plus_with_radius_subdiv_x_subdiv_y(harfang_plus this_ ,float  radius ,int  subdiv_x ,int  subdiv_y);
extern harfang_geometry  harfang_create_sphere_plus_with_radius_subdiv_x_subdiv_y_material_path(harfang_plus this_ ,float  radius ,int  subdiv_x ,int  subdiv_y ,const char* material_path);
extern harfang_geometry  harfang_create_sphere_plus_with_radius_subdiv_x_subdiv_y_material_path_name(harfang_plus this_ ,float  radius ,int  subdiv_x ,int  subdiv_y ,const char* material_path ,const char* name);
extern harfang_scene  harfang_new_scene_plus(harfang_plus this_);
extern harfang_scene  harfang_new_scene_plus_with_use_physics(harfang_plus this_ ,bool  use_physics);
extern harfang_scene  harfang_new_scene_plus_with_use_physics_use_lua(harfang_plus this_ ,bool  use_physics ,bool  use_lua);
extern bool  harfang_load_scene_plus(harfang_plus this_ ,harfang_scene_nobind  scene ,const char* path);
extern void harfang_update_scene_plus(harfang_plus this_ ,harfang_scene_nobind  scene);
extern void harfang_update_scene_plus_with_dt(harfang_plus this_ ,harfang_scene_nobind  scene ,int64_t  dt);
extern void harfang_render_scene_plus(harfang_plus this_ ,harfang_scene_nobind  scene);
extern harfang_node  harfang_add_dummy_plus(harfang_plus this_ ,harfang_scene_nobind  scene);
extern harfang_node  harfang_add_dummy_plus_with_world(harfang_plus this_ ,harfang_scene_nobind  scene ,harfang_matrix4  world);
extern harfang_node  harfang_add_camera_plus(harfang_plus this_ ,harfang_scene_nobind  scene);
extern harfang_node  harfang_add_camera_plus_with_matrix(harfang_plus this_ ,harfang_scene_nobind  scene ,harfang_matrix4  matrix);
extern harfang_node  harfang_add_camera_plus_with_matrix_orthographic(harfang_plus this_ ,harfang_scene_nobind  scene ,harfang_matrix4  matrix ,bool  orthographic);
extern harfang_node  harfang_add_camera_plus_with_matrix_orthographic_set_as_current(harfang_plus this_ ,harfang_scene_nobind  scene ,harfang_matrix4  matrix ,bool  orthographic ,bool  set_as_current);
extern harfang_node  harfang_add_light_plus(harfang_plus this_ ,harfang_scene_nobind  scene);
extern harfang_node  harfang_add_light_plus_with_matrix(harfang_plus this_ ,harfang_scene_nobind  scene ,harfang_matrix4  matrix);
extern harfang_node  harfang_add_light_plus_with_matrix_model(harfang_plus this_ ,harfang_scene_nobind  scene ,harfang_matrix4  matrix ,int model);
extern harfang_node  harfang_add_light_plus_with_matrix_model_range(harfang_plus this_ ,harfang_scene_nobind  scene ,harfang_matrix4  matrix ,int model ,float  range);
extern harfang_node  harfang_add_light_plus_with_matrix_model_range_shadow(harfang_plus this_ ,harfang_scene_nobind  scene ,harfang_matrix4  matrix ,int model ,float  range ,bool  shadow);
extern harfang_node  harfang_add_light_plus_with_matrix_model_range_shadow_diffuse(harfang_plus this_ ,harfang_scene_nobind  scene ,harfang_matrix4  matrix ,int model ,float  range ,bool  shadow ,harfang_color  diffuse);
extern harfang_node  harfang_add_light_plus_with_matrix_model_range_shadow_diffuse_specular(harfang_plus this_ ,harfang_scene_nobind  scene ,harfang_matrix4  matrix ,int model ,float  range ,bool  shadow ,harfang_color  diffuse ,harfang_color  specular);
extern harfang_node  harfang_add_object_plus(harfang_plus this_ ,harfang_scene_nobind  scene ,harfang_render_geometry  geometry);
extern harfang_node  harfang_add_object_plus_with_matrix(harfang_plus this_ ,harfang_scene_nobind  scene ,harfang_render_geometry  geometry ,harfang_matrix4  matrix);
extern harfang_node  harfang_add_object_plus_with_matrix_is_static(harfang_plus this_ ,harfang_scene_nobind  scene ,harfang_render_geometry  geometry ,harfang_matrix4  matrix ,bool  is_static);
extern harfang_node  harfang_add_geometry_plus(harfang_plus this_ ,harfang_scene_nobind  scene ,const char* geometry_path);
extern harfang_node  harfang_add_geometry_plus_with_matrix(harfang_plus this_ ,harfang_scene_nobind  scene ,const char* geometry_path ,harfang_matrix4  matrix);
extern harfang_node  harfang_add_plane_plus(harfang_plus this_ ,harfang_scene_nobind  scene);
extern harfang_node  harfang_add_plane_plus_with_matrix(harfang_plus this_ ,harfang_scene_nobind  scene ,harfang_matrix4  matrix);
extern harfang_node  harfang_add_plane_plus_with_matrix_size_x_size_z(harfang_plus this_ ,harfang_scene_nobind  scene ,harfang_matrix4  matrix ,float  size_x ,float  size_z);
extern harfang_node  harfang_add_plane_plus_with_matrix_size_x_size_z_material_path(harfang_plus this_ ,harfang_scene_nobind  scene ,harfang_matrix4  matrix ,float  size_x ,float  size_z ,const char* material_path);
extern harfang_node  harfang_add_plane_plus_with_matrix_size_x_size_z_material_path_use_geometry_cache(harfang_plus this_ ,harfang_scene_nobind  scene ,harfang_matrix4  matrix ,float  size_x ,float  size_z ,const char* material_path ,bool  use_geometry_cache);
extern harfang_node  harfang_add_cube_plus(harfang_plus this_ ,harfang_scene_nobind  scene);
extern harfang_node  harfang_add_cube_plus_with_matrix(harfang_plus this_ ,harfang_scene_nobind  scene ,harfang_matrix4  matrix);
extern harfang_node  harfang_add_cube_plus_with_matrix_size_x_size_y_size_z(harfang_plus this_ ,harfang_scene_nobind  scene ,harfang_matrix4  matrix ,float  size_x ,float  size_y ,float  size_z);
extern harfang_node  harfang_add_cube_plus_with_matrix_size_x_size_y_size_z_material_path(harfang_plus this_ ,harfang_scene_nobind  scene ,harfang_matrix4  matrix ,float  size_x ,float  size_y ,float  size_z ,const char* material_path);
extern harfang_node  harfang_add_cube_plus_with_matrix_size_x_size_y_size_z_material_path_use_geometry_cache(harfang_plus this_ ,harfang_scene_nobind  scene ,harfang_matrix4  matrix ,float  size_x ,float  size_y ,float  size_z ,const char* material_path ,bool  use_geometry_cache);
extern harfang_node  harfang_add_sphere_plus(harfang_plus this_ ,harfang_scene_nobind  scene);
extern harfang_node  harfang_add_sphere_plus_with_matrix(harfang_plus this_ ,harfang_scene_nobind  scene ,harfang_matrix4  matrix);
extern harfang_node  harfang_add_sphere_plus_with_matrix_radius(harfang_plus this_ ,harfang_scene_nobind  scene ,harfang_matrix4  matrix ,float  radius);
extern harfang_node  harfang_add_sphere_plus_with_matrix_radius_subdiv_x_subdiv_y(harfang_plus this_ ,harfang_scene_nobind  scene ,harfang_matrix4  matrix ,float  radius ,int  subdiv_x ,int  subdiv_y);
extern harfang_node  harfang_add_sphere_plus_with_matrix_radius_subdiv_x_subdiv_y_material_path(harfang_plus this_ ,harfang_scene_nobind  scene ,harfang_matrix4  matrix ,float  radius ,int  subdiv_x ,int  subdiv_y ,const char* material_path);
extern harfang_node  harfang_add_sphere_plus_with_matrix_radius_subdiv_x_subdiv_y_material_path_use_geometry_cache(harfang_plus this_ ,harfang_scene_nobind  scene ,harfang_matrix4  matrix ,float  radius ,int  subdiv_x ,int  subdiv_y ,const char* material_path ,bool  use_geometry_cache);
extern harfang_environment  harfang_add_environment_plus(harfang_plus this_ ,harfang_scene_nobind  scene);
extern harfang_environment  harfang_add_environment_plus_with_background_color_ambient_color(harfang_plus this_ ,harfang_scene_nobind  scene ,harfang_color  background_color ,harfang_color  ambient_color);
extern harfang_environment  harfang_add_environment_plus_with_background_color_ambient_color_fog_color_fog_near_fog_far(harfang_plus this_ ,harfang_scene_nobind  scene ,harfang_color  background_color ,harfang_color  ambient_color ,harfang_color  fog_color ,float  fog_near ,float  fog_far);
extern harfang_node  harfang_add_physic_cube_plus(harfang_plus this_ ,harfang_rigid_body  rigid_body ,harfang_scene_nobind  scene);
extern harfang_node  harfang_add_physic_cube_plus_with_m(harfang_plus this_ ,harfang_rigid_body  rigid_body ,harfang_scene_nobind  scene ,harfang_matrix4  m);
extern harfang_node  harfang_add_physic_cube_plus_with_m_width_height_depth(harfang_plus this_ ,harfang_rigid_body  rigid_body ,harfang_scene_nobind  scene ,harfang_matrix4  m ,float  width ,float  height ,float  depth);
extern harfang_node  harfang_add_physic_cube_plus_with_m_width_height_depth_mass(harfang_plus this_ ,harfang_rigid_body  rigid_body ,harfang_scene_nobind  scene ,harfang_matrix4  m ,float  width ,float  height ,float  depth ,float  mass);
extern harfang_node  harfang_add_physic_cube_plus_with_m_width_height_depth_mass_material_path(harfang_plus this_ ,harfang_rigid_body  rigid_body ,harfang_scene_nobind  scene ,harfang_matrix4  m ,float  width ,float  height ,float  depth ,float  mass ,const char* material_path);
extern harfang_node  harfang_add_physic_plane_plus(harfang_plus this_ ,harfang_rigid_body  rigid_body ,harfang_scene_nobind  scene);
extern harfang_node  harfang_add_physic_plane_plus_with_m(harfang_plus this_ ,harfang_rigid_body  rigid_body ,harfang_scene_nobind  scene ,harfang_matrix4  m);
extern harfang_node  harfang_add_physic_plane_plus_with_m_width_length(harfang_plus this_ ,harfang_rigid_body  rigid_body ,harfang_scene_nobind  scene ,harfang_matrix4  m ,float  width ,float  length);
extern harfang_node  harfang_add_physic_plane_plus_with_m_width_length_mass(harfang_plus this_ ,harfang_rigid_body  rigid_body ,harfang_scene_nobind  scene ,harfang_matrix4  m ,float  width ,float  length ,float  mass);
extern harfang_node  harfang_add_physic_plane_plus_with_m_width_length_mass_material_path(harfang_plus this_ ,harfang_rigid_body  rigid_body ,harfang_scene_nobind  scene ,harfang_matrix4  m ,float  width ,float  length ,float  mass ,const char* material_path);
extern harfang_node  harfang_add_physic_sphere_plus(harfang_plus this_ ,harfang_rigid_body  rigid_body ,harfang_scene_nobind  scene);
extern harfang_node  harfang_add_physic_sphere_plus_with_m(harfang_plus this_ ,harfang_rigid_body  rigid_body ,harfang_scene_nobind  scene ,harfang_matrix4  m);
extern harfang_node  harfang_add_physic_sphere_plus_with_m_radius_subdiv_x_subdiv_y(harfang_plus this_ ,harfang_rigid_body  rigid_body ,harfang_scene_nobind  scene ,harfang_matrix4  m ,float  radius ,int  subdiv_x ,int  subdiv_y);
extern harfang_node  harfang_add_physic_sphere_plus_with_m_radius_subdiv_x_subdiv_y_mass(harfang_plus this_ ,harfang_rigid_body  rigid_body ,harfang_scene_nobind  scene ,harfang_matrix4  m ,float  radius ,int  subdiv_x ,int  subdiv_y ,float  mass);
extern harfang_node  harfang_add_physic_sphere_plus_with_m_radius_subdiv_x_subdiv_y_mass_material_path(harfang_plus this_ ,harfang_rigid_body  rigid_body ,harfang_scene_nobind  scene ,harfang_matrix4  m ,float  radius ,int  subdiv_x ,int  subdiv_y ,float  mass ,const char* material_path);
extern harfang_input_device  harfang_get_mouse_plus(harfang_plus this_);
extern harfang_input_device  harfang_get_keyboard_plus(harfang_plus this_);
extern void harfang_get_mouse_pos_plus(harfang_plus this_ ,float * x ,float * y);
extern void harfang_get_mouse_dt_plus(harfang_plus this_ ,float * x ,float * y);
extern bool  harfang_mouse_button_down_plus(harfang_plus this_);
extern bool  harfang_mouse_button_down_plus_with_button(harfang_plus this_ ,int button);
extern bool  harfang_key_down_plus(harfang_plus this_ ,int key);
extern bool  harfang_key_press_plus(harfang_plus this_ ,int key);
extern bool  harfang_key_released_plus(harfang_plus this_ ,int key);
extern void harfang_reset_clock_plus(harfang_plus this_);
extern int64_t  harfang_update_clock_plus(harfang_plus this_);
extern int64_t  harfang_get_clock_dt_plus(harfang_plus this_);
extern int64_t  harfang_get_clock_plus(harfang_plus this_);
extern harfang_fps_controller  harfang_constructor_fps_controller();
extern harfang_fps_controller  harfang_constructor_fps_controller_with_xyz(float  x ,float  y ,float  z);
extern harfang_fps_controller  harfang_constructor_fps_controller_with_xyz_speed_turbo(float  x ,float  y ,float  z ,float  speed ,float  turbo);
extern void harfang_fps_controller_free(harfang_fps_controller);
extern void harfang_reset_fps_controller(harfang_fps_controller this_ ,harfang_vector3  position ,harfang_vector3  rotation);
extern void harfang_set_smooth_factor_fps_controller(harfang_fps_controller this_ ,float  k_pos ,float  k_rot);
extern void harfang_apply_to_node_fps_controller(harfang_fps_controller this_ ,harfang_node_nobind  node);
extern void harfang_update_fps_controller(harfang_fps_controller this_ ,int64_t  dt);
extern void harfang_update_and_apply_to_node_fps_controller(harfang_fps_controller this_ ,harfang_node_nobind  node ,int64_t  dt);
extern harfang_vector3  harfang_get_pos_fps_controller(harfang_fps_controller this_);
extern harfang_vector3  harfang_get_rot_fps_controller(harfang_fps_controller this_);
extern void harfang_set_pos_fps_controller(harfang_fps_controller this_ ,const harfang_vector3  position);
extern void harfang_set_rot_fps_controller(harfang_fps_controller this_ ,const harfang_vector3  rotation);
extern float  harfang_get_speed_fps_controller(harfang_fps_controller this_);
extern void harfang_set_speed_fps_controller(harfang_fps_controller this_ ,float  speed);
extern float  harfang_get_turbo_fps_controller(harfang_fps_controller this_);
extern void harfang_set_turbo_fps_controller(harfang_fps_controller this_ ,float  turbo);
extern void harfang_im_font_free(harfang_im_font);
extern void harfang_im_draw_list_free(harfang_im_draw_list);
extern void harfang_push_clip_rect_im_draw_list(harfang_im_draw_list this_ ,harfang_vector2  clip_rect_min ,harfang_vector2  clip_rect_min);
extern void harfang_push_clip_rect_im_draw_list_with_intersect_with_curent_clip_rect(harfang_im_draw_list this_ ,harfang_vector2  clip_rect_min ,harfang_vector2  clip_rect_min ,bool  intersect_with_curent_clip_rect);
extern void harfang_push_clip_rect_full_screen_im_draw_list(harfang_im_draw_list this_);
extern void harfang_pop_clip_rect_im_draw_list(harfang_im_draw_list this_);
extern void harfang_push_texture_id_im_draw_list(harfang_im_draw_list this_ ,harfang_texture_nobind  texture);
extern void harfang_pop_texture_id_im_draw_list(harfang_im_draw_list this_);
extern harfang_vector2  harfang_get_clip_rect_min_im_draw_list(harfang_im_draw_list this_);
extern harfang_vector2  harfang_get_clip_rect_max_im_draw_list(harfang_im_draw_list this_);
extern void harfang_add_line_im_draw_list(harfang_im_draw_list this_ ,const harfang_vector2  a ,const harfang_vector2  b ,unsigned int col);
extern void harfang_add_line_im_draw_list_with_thickness(harfang_im_draw_list this_ ,const harfang_vector2  a ,const harfang_vector2  b ,unsigned int col ,float  thickness);
extern void harfang_add_rect_im_draw_list(harfang_im_draw_list this_ ,const harfang_vector2  a ,const harfang_vector2  b ,unsigned int col);
extern void harfang_add_rect_im_draw_list_with_rounding(harfang_im_draw_list this_ ,const harfang_vector2  a ,const harfang_vector2  b ,unsigned int col ,float  rounding);
extern void harfang_add_rect_im_draw_list_with_rounding_rounding_corner_flags(harfang_im_draw_list this_ ,const harfang_vector2  a ,const harfang_vector2  b ,unsigned int col ,float  rounding ,int  rounding_corner_flags);
extern void harfang_add_rect_im_draw_list_with_rounding_rounding_corner_flags_thickness(harfang_im_draw_list this_ ,const harfang_vector2  a ,const harfang_vector2  b ,unsigned int col ,float  rounding ,int  rounding_corner_flags ,float  thickness);
extern void harfang_add_rect_filled_im_draw_list(harfang_im_draw_list this_ ,const harfang_vector2  a ,const harfang_vector2  b ,unsigned int col);
extern void harfang_add_rect_filled_im_draw_list_with_rounding(harfang_im_draw_list this_ ,const harfang_vector2  a ,const harfang_vector2  b ,unsigned int col ,float  rounding);
extern void harfang_add_rect_filled_im_draw_list_with_rounding_rounding_corner_flags(harfang_im_draw_list this_ ,const harfang_vector2  a ,const harfang_vector2  b ,unsigned int col ,float  rounding ,int  rounding_corner_flags);
extern void harfang_add_rect_filled_multi_color_im_draw_list(harfang_im_draw_list this_ ,const harfang_vector2  a ,const harfang_vector2  b ,unsigned int col_upr_left ,unsigned int col_upr_right ,unsigned int col_bot_right ,unsigned int col_bot_left);
extern void harfang_add_quad_im_draw_list(harfang_im_draw_list this_ ,const harfang_vector2  a ,const harfang_vector2  b ,const harfang_vector2  c ,const harfang_vector2  d ,unsigned int col);
extern void harfang_add_quad_im_draw_list_with_thickness(harfang_im_draw_list this_ ,const harfang_vector2  a ,const harfang_vector2  b ,const harfang_vector2  c ,const harfang_vector2  d ,unsigned int col ,float  thickness);
extern void harfang_add_quad_filled_im_draw_list(harfang_im_draw_list this_ ,const harfang_vector2  a ,const harfang_vector2  b ,const harfang_vector2  c ,const harfang_vector2  d ,unsigned int col);
extern void harfang_add_triangle_im_draw_list(harfang_im_draw_list this_ ,const harfang_vector2  a ,const harfang_vector2  b ,const harfang_vector2  c ,unsigned int col);
extern void harfang_add_triangle_im_draw_list_with_thickness(harfang_im_draw_list this_ ,const harfang_vector2  a ,const harfang_vector2  b ,const harfang_vector2  c ,unsigned int col ,float  thickness);
extern void harfang_add_triangle_filled_im_draw_list(harfang_im_draw_list this_ ,const harfang_vector2  a ,const harfang_vector2  b ,const harfang_vector2  c ,unsigned int col);
extern void harfang_add_circle_im_draw_list(harfang_im_draw_list this_ ,const harfang_vector2  centre ,float  radius ,unsigned int col);
extern void harfang_add_circle_im_draw_list_with_num_segments(harfang_im_draw_list this_ ,const harfang_vector2  centre ,float  radius ,unsigned int col ,int  num_segments);
extern void harfang_add_circle_im_draw_list_with_num_segments_thickness(harfang_im_draw_list this_ ,const harfang_vector2  centre ,float  radius ,unsigned int col ,int  num_segments ,float  thickness);
extern void harfang_add_circle_filled_im_draw_list(harfang_im_draw_list this_ ,const harfang_vector2  centre ,float  radius ,unsigned int col);
extern void harfang_add_circle_filled_im_draw_list_with_num_segments(harfang_im_draw_list this_ ,const harfang_vector2  centre ,float  radius ,unsigned int col ,int  num_segments);
extern void harfang_add_text_im_draw_list(harfang_im_draw_list this_ ,const harfang_vector2  pos ,unsigned int col ,const char * text);
extern void harfang_add_text_im_draw_list_with_font_font_size_pos_col_text(harfang_im_draw_list this_ ,const harfang_im_font  font ,float  font_size ,const harfang_vector2  pos ,unsigned int col ,const char * text);
extern void harfang_add_text_im_draw_list_with_font_font_size_pos_col_text_wrap_width(harfang_im_draw_list this_ ,const harfang_im_font  font ,float  font_size ,const harfang_vector2  pos ,unsigned int col ,const char * text ,float  wrap_width);
extern void harfang_add_text_im_draw_list_with_font_font_size_pos_col_text_wrap_width_cpu_fine_clip_rect(harfang_im_draw_list this_ ,const harfang_im_font  font ,float  font_size ,const harfang_vector2  pos ,unsigned int col ,const char * text ,float  wrap_width ,const harfang_vector4  cpu_fine_clip_rect);
extern void harfang_add_image_im_draw_list(harfang_im_draw_list this_ ,harfang_texture_nobind  texture ,const harfang_vector2  a ,const harfang_vector2  b);
extern void harfang_add_image_im_draw_list_with_uv_a_uv_b(harfang_im_draw_list this_ ,harfang_texture_nobind  texture ,const harfang_vector2  a ,const harfang_vector2  b ,const harfang_vector2  uv_a ,const harfang_vector2  uv_b);
extern void harfang_add_image_im_draw_list_with_uv_a_uv_b_col(harfang_im_draw_list this_ ,harfang_texture_nobind  texture ,const harfang_vector2  a ,const harfang_vector2  b ,const harfang_vector2  uv_a ,const harfang_vector2  uv_b ,unsigned int col);
extern void harfang_add_image_quad_im_draw_list(harfang_im_draw_list this_ ,harfang_texture_nobind  texture ,const harfang_vector2  a ,const harfang_vector2  b ,const harfang_vector2  c ,const harfang_vector2  d);
extern void harfang_add_image_quad_im_draw_list_with_uv_a_uv_b_uv_c_uv_d(harfang_im_draw_list this_ ,harfang_texture_nobind  texture ,const harfang_vector2  a ,const harfang_vector2  b ,const harfang_vector2  c ,const harfang_vector2  d ,const harfang_vector2  uv_a ,const harfang_vector2  uv_b ,const harfang_vector2  uv_c ,const harfang_vector2  uv_d);
extern void harfang_add_image_quad_im_draw_list_with_uv_a_uv_b_uv_c_uv_d_col(harfang_im_draw_list this_ ,harfang_texture_nobind  texture ,const harfang_vector2  a ,const harfang_vector2  b ,const harfang_vector2  c ,const harfang_vector2  d ,const harfang_vector2  uv_a ,const harfang_vector2  uv_b ,const harfang_vector2  uv_c ,const harfang_vector2  uv_d ,unsigned int col);
extern void harfang_add_image_rounded_im_draw_list(harfang_im_draw_list this_ ,harfang_texture_nobind  texture ,const harfang_vector2  a ,const harfang_vector2  b ,const harfang_vector2  uv_a ,const harfang_vector2  uv_b ,unsigned int col ,float  rounding);
extern void harfang_add_image_rounded_im_draw_list_with_rounding_corners(harfang_im_draw_list this_ ,harfang_texture_nobind  texture ,const harfang_vector2  a ,const harfang_vector2  b ,const harfang_vector2  uv_a ,const harfang_vector2  uv_b ,unsigned int col ,float  rounding ,int rounding_corners);
extern void harfang_add_polyline_im_draw_list(harfang_im_draw_list this_ ,const harfang_vector2_list  points ,unsigned int col ,bool  closed ,float  thickness);
extern void harfang_add_convex_poly_filled_im_draw_list(harfang_im_draw_list this_ ,const harfang_vector2_list  points ,unsigned int col);
extern void harfang_add_bezier_curve_im_draw_list(harfang_im_draw_list this_ ,const harfang_vector2  pos0 ,const harfang_vector2  cp0 ,const harfang_vector2  cp1 ,const harfang_vector2  pos1 ,unsigned int col ,float  thickness);
extern void harfang_add_bezier_curve_im_draw_list_with_num_segments(harfang_im_draw_list this_ ,const harfang_vector2  pos0 ,const harfang_vector2  cp0 ,const harfang_vector2  cp1 ,const harfang_vector2  pos1 ,unsigned int col ,float  thickness ,int  num_segments);
extern void harfang_path_clear_im_draw_list(harfang_im_draw_list this_);
extern void harfang_path_line_to_im_draw_list(harfang_im_draw_list this_ ,const harfang_vector2  pos);
extern void harfang_path_line_to_merge_duplicate_im_draw_list(harfang_im_draw_list this_ ,const harfang_vector2  pos);
extern void harfang_path_fill_convex_im_draw_list(harfang_im_draw_list this_ ,unsigned int col);
extern void harfang_path_stroke_im_draw_list(harfang_im_draw_list this_ ,unsigned int col ,bool  closed);
extern void harfang_path_stroke_im_draw_list_with_thickness(harfang_im_draw_list this_ ,unsigned int col ,bool  closed ,float  thickness);
extern void harfang_path_arc_to_im_draw_list(harfang_im_draw_list this_ ,const harfang_vector2  centre ,float  radius ,float  a_min ,float  a_max);
extern void harfang_path_arc_to_im_draw_list_with_num_segments(harfang_im_draw_list this_ ,const harfang_vector2  centre ,float  radius ,float  a_min ,float  a_max ,int  num_segments);
extern void harfang_path_arc_to_fast_im_draw_list(harfang_im_draw_list this_ ,const harfang_vector2  centre ,float  radius ,int  a_min_of_12 ,int  a_max_of_12);
extern void harfang_path_bezier_curve_to_im_draw_list(harfang_im_draw_list this_ ,const harfang_vector2  p1 ,const harfang_vector2  p2 ,const harfang_vector2  p3);
extern void harfang_path_bezier_curve_to_im_draw_list_with_num_segments(harfang_im_draw_list this_ ,const harfang_vector2  p1 ,const harfang_vector2  p2 ,const harfang_vector2  p3 ,int  num_segments);
extern void harfang_path_rect_im_draw_list(harfang_im_draw_list this_ ,const harfang_vector2  rect_min ,const harfang_vector2  rect_max);
extern void harfang_path_rect_im_draw_list_with_rounding(harfang_im_draw_list this_ ,const harfang_vector2  rect_min ,const harfang_vector2  rect_max ,float  rounding);
extern void harfang_path_rect_im_draw_list_with_rounding_rounding_corners_flags(harfang_im_draw_list this_ ,const harfang_vector2  rect_min ,const harfang_vector2  rect_max ,float  rounding ,int rounding_corners_flags);
extern void harfang_channels_split_im_draw_list(harfang_im_draw_list this_ ,int  channels_count);
extern void harfang_channels_merge_im_draw_list(harfang_im_draw_list this_);
extern void harfang_channels_set_current_im_draw_list(harfang_im_draw_list this_ ,int  channel_index);
extern void harfang_lua_task_handle_free(harfang_lua_task_handle);
extern int harfang_get_state_lua_task_handle(harfang_lua_task_handle this_);
extern bool  harfang_is_complete_or_failed_lua_task_handle(harfang_lua_task_handle this_);
extern harfang_typevalue_list  harfang_get_results_lua_task_handle(harfang_lua_task_handle this_);
extern void harfang_lua_task_free(harfang_lua_task);
extern harfang_lua_task_system  harfang_constructor_lua_task_system();
extern void harfang_lua_task_system_free(harfang_lua_task_system);
extern bool  harfang_start_lua_task_system(harfang_lua_task_system this_);
extern bool  harfang_start_lua_task_system_with_worker_count(harfang_lua_task_system this_ ,size_t  worker_count);
extern void harfang_stop_lua_task_system(harfang_lua_task_system this_);
extern harfang_lua_task  harfang_prepare_task_lua_task_system(harfang_lua_task_system this_ ,const char* source ,const char* name);
extern harfang_lua_task_handle  harfang_run_task_lua_task_system(harfang_lua_task_system this_ ,harfang_lua_task  task ,const harfang_typevalue_list  args);
extern size_t  harfang_get_worker_count_lua_task_system(harfang_lua_task_system this_);
extern harfang_fast_noise  harfang_constructor_fast_noise();
extern harfang_fast_noise  harfang_constructor_fast_noise_with_seed(int  seed);
extern void harfang_fast_noise_free(harfang_fast_noise);
extern void harfang_set_seed_fast_noise(harfang_fast_noise this_ ,int  seed);
extern int  harfang_get_seed_fast_noise(harfang_fast_noise this_);
extern void harfang_set_frequency_fast_noise(harfang_fast_noise this_ ,float  fq);
extern void harfang_set_interp_fast_noise(harfang_fast_noise this_ ,int interp);
extern void harfang_set_noise_type_fast_noise(harfang_fast_noise this_ ,int type);
extern void harfang_set_fractal_octaves_fast_noise(harfang_fast_noise this_ ,unsigned int octaves);
extern void harfang_set_fractal_lacunarity_fast_noise(harfang_fast_noise this_ ,float  lacunarity);
extern void harfang_set_fractal_gain_fast_noise(harfang_fast_noise this_ ,float  gain);
extern void harfang_set_fractal_type_fast_noise(harfang_fast_noise this_ ,int type);
extern void harfang_set_cellular_distance_function_fast_noise(harfang_fast_noise this_ ,int function);
extern void harfang_set_cellular_return_type_fast_noise(harfang_fast_noise this_ ,int type);
extern float  harfang_get_value_fast_noise(harfang_fast_noise this_ ,float  x ,float  y);
extern float  harfang_get_value_fast_noise_with_z(harfang_fast_noise this_ ,float  x ,float  y ,float  z);
extern float  harfang_get_value_fractal_fast_noise(harfang_fast_noise this_ ,float  x ,float  y);
extern float  harfang_get_value_fractal_fast_noise_with_z(harfang_fast_noise this_ ,float  x ,float  y ,float  z);
extern float  harfang_get_gradient_fast_noise(harfang_fast_noise this_ ,float  x ,float  y);
extern float  harfang_get_gradient_fast_noise_with_z(harfang_fast_noise this_ ,float  x ,float  y ,float  z);
extern float  harfang_get_gradient_fractal_fast_noise(harfang_fast_noise this_ ,float  x ,float  y);
extern float  harfang_get_gradient_fractal_fast_noise_with_z(harfang_fast_noise this_ ,float  x ,float  y ,float  z);
extern float  harfang_get_simplex_fast_noise(harfang_fast_noise this_ ,float  x ,float  y);
extern float  harfang_get_simplex_fast_noise_with_z(harfang_fast_noise this_ ,float  x ,float  y ,float  z);
extern float  harfang_get_simplex_fast_noise_with_zw(harfang_fast_noise this_ ,float  x ,float  y ,float  z ,float  w);
extern float  harfang_get_simplex_fractal_fast_noise(harfang_fast_noise this_ ,float  x ,float  y);
extern float  harfang_get_simplex_fractal_fast_noise_with_z(harfang_fast_noise this_ ,float  x ,float  y ,float  z);
extern float  harfang_get_cellular_fast_noise(harfang_fast_noise this_ ,float  x ,float  y);
extern float  harfang_get_cellular_fast_noise_with_z(harfang_fast_noise this_ ,float  x ,float  y ,float  z);
extern float  harfang_get_white_noise_fast_noise(harfang_fast_noise this_ ,float  x ,float  y);
extern float  harfang_get_white_noise_fast_noise_with_z(harfang_fast_noise this_ ,float  x ,float  y ,float  z);
extern float  harfang_get_white_noise_fast_noise_with_zw(harfang_fast_noise this_ ,float  x ,float  y ,float  z ,float  w);
extern float  harfang_get_white_noise_int_fast_noise(harfang_fast_noise this_ ,int  x ,int  y);
extern float  harfang_get_white_noise_int_fast_noise_with_z(harfang_fast_noise this_ ,int  x ,int  y ,int  z);
extern float  harfang_get_white_noise_int_fast_noise_with_zw(harfang_fast_noise this_ ,int  x ,int  y ,int  z ,int  w);
extern float  harfang_get_noise_fast_noise(harfang_fast_noise this_ ,float  x ,float  y);
extern float  harfang_get_noise_fast_noise_with_z(harfang_fast_noise this_ ,float  x ,float  y ,float  z);
extern void harfang_set_log_level(unsigned int mask);
extern void harfang_set_log_is_detailed(bool  is_detailed);
extern void harfang_flush_log();
extern void harfang_binary_data_blur3d(harfang_binary_data  data ,unsigned int width ,unsigned int height ,unsigned int depth);
extern float  harfang_time_to_sec_f(int64_t  t);
extern float  harfang_time_to_ms_f(int64_t  t);
extern float  harfang_time_to_us_f(int64_t  t);
extern int64_t  harfang_time_to_day(int64_t  t);
extern int64_t  harfang_time_to_hour(int64_t  t);
extern int64_t  harfang_time_to_min(int64_t  t);
extern int64_t  harfang_time_to_sec(int64_t  t);
extern int64_t  harfang_time_to_ms(int64_t  t);
extern int64_t  harfang_time_to_us(int64_t  t);
extern int64_t  harfang_time_to_ns(int64_t  t);
extern int64_t  harfang_time_from_sec_f(float  sec);
extern int64_t  harfang_time_from_ms_f(float  ms);
extern int64_t  harfang_time_from_us_f(float  us);
extern int64_t  harfang_time_from_day(int64_t  day);
extern int64_t  harfang_time_from_hour(int64_t  hour);
extern int64_t  harfang_time_from_min(int64_t  min);
extern int64_t  harfang_time_from_sec(int64_t  sec);
extern int64_t  harfang_time_from_ms(int64_t  ms);
extern int64_t  harfang_time_from_us(int64_t  us);
extern int64_t  harfang_time_from_ns(int64_t  ns);
extern int64_t  harfang_time_now();
extern const char* harfang_time_to_string(int64_t  t);
extern float  harfang_linear_interpolateltfloatgt(float  y0 ,float  y1 ,float  t);
extern float  harfang_cosine_interpolateltfloatgt(float  y0 ,float  y1 ,float  t);
extern float  harfang_cubic_interpolateltfloatgt(float  y0 ,float  y1 ,float  y2 ,float  y3 ,float  t);
extern float  harfang_hermite_interpolateltfloatgt(float  y0 ,float  y1 ,float  y2 ,float  y3 ,float  t ,float  tension ,float  bias);
extern uint8_t harfang_reverse_rotation_order(uint8_t rotation_order);
extern void harfang_compute_min_max_bounding_sphere(const harfang_min_max  minmax ,harfang_vector3  origin ,float * radius);
extern bool  harfang_overlap(const harfang_min_max  minmax_a ,const harfang_min_max  minmax_b);
extern bool  harfang_overlap_with_axis(const harfang_min_max  minmax_a ,const harfang_min_max  minmax_b ,uint8_t axis);
extern bool  harfang_contains(const harfang_min_max  minmax ,const harfang_vector3  position);
extern harfang_min_max  harfang_union(const harfang_min_max  minmax_a ,const harfang_min_max  minmax_b);
extern harfang_min_max  harfang_union_with_minmax_position(const harfang_min_max  minmax ,const harfang_vector3  position);
extern bool  harfang_intersect_ray(const harfang_min_max  minmax ,const harfang_vector3  origin ,const harfang_vector3  direction ,float * t_min ,float * t_max);
extern bool  harfang_classify_line(const harfang_min_max  minmax ,const harfang_vector3  position ,const harfang_vector3  direction ,harfang_vector3  intersection ,harfang_vector3  normal);
extern bool  harfang_classify_segment(const harfang_min_max  minmax ,const harfang_vector3  p0 ,const harfang_vector3  p1 ,harfang_vector3  intersection ,harfang_vector3  normal);
extern harfang_min_max  harfang_min_max_from_position_size(const harfang_vector3  position ,const harfang_vector3  size);
extern harfang_matrix3  harfang_rotation_matrix_xzy(float  x ,float  y ,float  z);
extern harfang_matrix3  harfang_rotation_matrix_zyx(float  x ,float  y ,float  z);
extern harfang_matrix3  harfang_rotation_matrix_xyz(float  x ,float  y ,float  z);
extern harfang_matrix3  harfang_rotation_matrix_zxy(float  x ,float  y ,float  z);
extern harfang_matrix3  harfang_rotation_matrix_yzx(float  x ,float  y ,float  z);
extern harfang_matrix3  harfang_rotation_matrix_yxz(float  x ,float  y ,float  z);
extern harfang_matrix3  harfang_rotation_matrix_xy(float  x ,float  y);
extern harfang_vector3  harfang_vector3_from_vector4(const harfang_vector4  v);
extern float  harfang_dot(const harfang_vector3  u ,const harfang_vector3  v);
extern harfang_vector3  harfang_cross(const harfang_vector3  u ,const harfang_vector3  v);
extern harfang_vector3  harfang_reflect(const harfang_vector3  v ,const harfang_vector3  normal);
extern harfang_vector3  harfang_refract(const harfang_vector3  v ,const harfang_vector3  normal);
extern harfang_vector3  harfang_refract_with_index_of_refraction_in_index_of_refraction_out(const harfang_vector3  v ,const harfang_vector3  normal ,float  index_of_refraction_in ,float  index_of_refraction_out);
extern harfang_vector3  harfang_random_vector3(float  min ,float  max);
extern harfang_vector3  harfang_random_vector3_with_min_max(const harfang_vector3  min ,const harfang_vector3  max);
extern harfang_rect  harfang_to_float_rect(const harfang_int_rect  rect);
extern harfang_int_rect  harfang_to_int_rect(const harfang_rect  rect);
extern float  harfang_dist(const harfang_vector3  a ,const harfang_vector3  b);
extern float  harfang_dist2(const harfang_vector3  a ,const harfang_vector3  b);
extern harfang_frustum  harfang_make_perspective_frustum(float  znear ,float  zfar ,float  fov ,const harfang_vector2  ar ,const harfang_matrix4  m);
extern harfang_frustum  harfang_make_orthographic_frustum(float  znear ,float  zfar ,float  size ,const harfang_vector2  ar ,const harfang_matrix4  m);
extern harfang_frustum_planes  harfang_build_frustum_planes(const harfang_frustum  frustum);
extern void harfang_build_frustum_vertices(const harfang_frustum  frustum ,harfang_vector3  v0 ,harfang_vector3  v1 ,harfang_vector3  v2 ,harfang_vector3  v3 ,harfang_vector3  v4 ,harfang_vector3  v5 ,harfang_vector3  v6 ,harfang_vector3  v7);
extern harfang_frustum_planes  harfang_build_frustum_planes_from_projection_matrix(const harfang_matrix44  projection);
extern uint8_t harfang_classify_point(const harfang_frustum_planes  frustum ,unsigned int count ,const harfang_vector3  points);
extern uint8_t harfang_classify_point_with_distance(const harfang_frustum_planes  frustum ,unsigned int count ,const harfang_vector3  points ,float  distance);
extern uint8_t harfang_classify_sphere(const harfang_frustum_planes  frustum ,const harfang_vector3  origin ,float  radius);
extern uint8_t harfang_classify_min_max(const harfang_frustum_planes  frustum ,const harfang_min_max  minmax);
extern harfang_monitor_list  harfang_get_monitors();
extern harfang_int_rect  harfang_get_monitor_rect(const harfang_monitor  monitor);
extern bool  harfang_is_primary_monitor(const harfang_monitor  monitor);
extern bool  harfang_is_monitor_connected(const harfang_monitor  monitor);
extern const char* harfang_get_monitor_name(const harfang_monitor  monitor);
extern harfang_int_vector2  harfang_get_monitor_size_mm(const harfang_monitor  monitor);
extern harfang_vector2  harfang_get_monitor_content_scale(const harfang_monitor  monitor);
extern bool  harfang_get_monitor_modes(const harfang_monitor  monitor ,harfang_monitormode_list  modes);
extern harfang_window  harfang_new_window(int  width ,int  height);
extern harfang_window  harfang_new_window_with_bpp(int  width ,int  height ,int  bpp);
extern harfang_window  harfang_new_window_with_bpp_visibility(int  width ,int  height ,int  bpp ,uint8_t visibility);
extern harfang_window  harfang_new_window_from(harfang_void_pointer  handle);
extern harfang_window  harfang_new_fullscreen_window(const harfang_monitor  monitor ,int  mode_index);
extern harfang_window  harfang_new_fullscreen_window_with_rotation(const harfang_monitor  monitor ,int  mode_index ,uint8_t rotation);
extern harfang_void_pointer  harfang_get_window_handle(const harfang_window  window);
extern bool  harfang_update_window(const harfang_window  window);
extern bool  harfang_destroy_window(const harfang_window  window);
extern bool  harfang_get_window_client_size(const harfang_window  window ,int * width ,int * height);
extern bool  harfang_set_window_client_size(const harfang_window  window ,int  width ,int  height);
extern bool  harfang_get_window_content_scale(const harfang_window  window ,float * xscale ,float * yscale);
extern bool  harfang_get_window_title(const harfang_window  window ,const char** title);
extern bool  harfang_set_window_title(const harfang_window  window ,const char* title);
extern bool  harfang_window_has_focus(const harfang_window  window);
extern harfang_window  harfang_get_window_in_focus();
extern harfang_int_vector2  harfang_get_window_pos(const harfang_window  window);
extern bool  harfang_set_window_pos(const harfang_window  window ,const harfang_int_vector2  position);
extern bool  harfang_is_window_open(const harfang_window  window);
extern void harfang_show_cursor();
extern void harfang_hide_cursor();
extern float  harfang_color_to_grayscale(const harfang_color  color);
extern unsigned int harfang_color_to_rgba32(const harfang_color  color);
extern harfang_color  harfang_color_from_rgba32(unsigned int rgba32);
extern unsigned int harfang_argb32_to_rgba32(unsigned int argb);
extern harfang_color  harfang_chroma_scale(const harfang_color  color ,float  k);
extern harfang_color  harfang_alpha_scale(const harfang_color  color ,float  k);
extern harfang_color  harfang_color_from_vector3(const harfang_vector3  v);
extern harfang_color  harfang_color_from_vector4(const harfang_vector4  v);
extern bool  harfang_load_picture(harfang_picture  picture ,const char * path);
extern bool  harfang_save_picture(harfang_picture  picture ,const char* path ,const char* codec_name);
extern bool  harfang_save_picture_with_parm(harfang_picture  picture ,const char* path ,const char* codec_name ,const char* parm);
extern harfang_string_list  harfang_get_supported_picture_ext();
extern harfang_document_reader  harfang_create_binary_document_reader();
extern harfang_document_reader  harfang_create_json_document_reader();
extern harfang_document_reader  harfang_create_xml_document_reader();
extern harfang_document_writer  harfang_create_binary_document_writer();
extern harfang_document_writer  harfang_create_json_document_writer();
extern harfang_document_writer  harfang_create_xml_document_writer();
extern int harfang_get_document_read_format(const char* path);
extern int harfang_get_document_write_format(const char* path);
extern int harfang_get_document_format_from_string(const char* document);
extern const char* harfang_get_executable_path();
extern void harfang_end_frame();
extern int64_t  harfang_get_last_frame_duration();
extern float  harfang_get_last_frame_duration_sec();
extern void harfang_reset_last_frame_duration();
extern void harfang__debug_halt();
extern float  harfang_zoom_factor_to_fov(float  zoom_factor);
extern float  harfang_fov_to_zoom_factor(float  fov);
extern harfang_matrix44  harfang_compute_orthographic_projection_matrix(float  znear ,float  zfar ,float  size ,const harfang_vector2  aspect_ratio);
extern harfang_matrix44  harfang_compute_perspective_projection_matrix(float  znear ,float  zfar ,float  zoom_factor ,const harfang_vector2  aspect_ratio);
extern unsigned int harfang_load_plugins();
extern unsigned int harfang_load_plugins_with_path(const char* path);
extern void harfang_unload_plugins();
extern bool  harfang_mount_file_driver(harfang_file_driver  driver);
extern bool  harfang_mount_file_driver_with_prefix(harfang_file_driver  driver ,const char* prefix);
extern harfang_filesystem  harfang_get_filesystem();
extern bool  harfang_load_material(harfang_material_nobind  mat ,const char* path);
extern bool  harfang_save_material(const harfang_material  material ,const char* path);
extern bool  harfang_save_material_with_format(const harfang_material  material ,const char* path ,int format);
extern void harfang_geometry_smooth_rgb(harfang_geometry_nobind  geo ,unsigned int pass_count ,float  max_smoothing_angle);
extern bool  harfang_geometry_merge(const char* name ,const harfang_geometry_list  geos ,const harfang_matrix4_list  mtxs ,harfang_geometry  out);
extern bool  harfang_load_geometry(harfang_geometry_nobind  geo ,const char* path);
extern bool  harfang_save_geometry(const harfang_geometry  geo ,const char* path);
extern bool  harfang_save_geometry_with_format(const harfang_geometry  geo ,const char* path ,int format);
extern harfang_geometry  harfang_create_capsule();
extern harfang_geometry  harfang_create_capsule_with_radius(float  radius);
extern harfang_geometry  harfang_create_capsule_with_radius_height(float  radius ,float  height);
extern harfang_geometry  harfang_create_capsule_with_radius_height_subdiv_x_subdiv_y(float  radius ,float  height ,int  subdiv_x ,int  subdiv_y);
extern harfang_geometry  harfang_create_capsule_with_radius_height_subdiv_x_subdiv_y_material_path(float  radius ,float  height ,int  subdiv_x ,int  subdiv_y ,const char* material_path);
extern harfang_geometry  harfang_create_capsule_with_radius_height_subdiv_x_subdiv_y_material_path_name(float  radius ,float  height ,int  subdiv_x ,int  subdiv_y ,const char* material_path ,const char* name);
extern harfang_geometry  harfang_create_cone();
extern harfang_geometry  harfang_create_cone_with_radius(float  radius);
extern harfang_geometry  harfang_create_cone_with_radius_height(float  radius ,float  height);
extern harfang_geometry  harfang_create_cone_with_radius_height_subdiv_x(float  radius ,float  height ,int  subdiv_x);
extern harfang_geometry  harfang_create_cone_with_radius_height_subdiv_x_material_path(float  radius ,float  height ,int  subdiv_x ,const char* material_path);
extern harfang_geometry  harfang_create_cone_with_radius_height_subdiv_x_material_path_name(float  radius ,float  height ,int  subdiv_x ,const char* material_path ,const char* name);
extern harfang_geometry  harfang_create_cube();
extern harfang_geometry  harfang_create_cube_with_width(float  width);
extern harfang_geometry  harfang_create_cube_with_width_height(float  width ,float  height);
extern harfang_geometry  harfang_create_cube_with_width_height_length(float  width ,float  height ,float  length);
extern harfang_geometry  harfang_create_cube_with_width_height_length_material_path(float  width ,float  height ,float  length ,const char* material_path);
extern harfang_geometry  harfang_create_cube_with_width_height_length_material_path_name(float  width ,float  height ,float  length ,const char* material_path ,const char* name);
extern harfang_geometry  harfang_create_cylinder();
extern harfang_geometry  harfang_create_cylinder_with_radius(float  radius);
extern harfang_geometry  harfang_create_cylinder_with_radius_height(float  radius ,float  height);
extern harfang_geometry  harfang_create_cylinder_with_radius_height_subdiv_x(float  radius ,float  height ,int  subdiv_x);
extern harfang_geometry  harfang_create_cylinder_with_radius_height_subdiv_x_material_path(float  radius ,float  height ,int  subdiv_x ,const char* material_path);
extern harfang_geometry  harfang_create_cylinder_with_radius_height_subdiv_x_material_path_name(float  radius ,float  height ,int  subdiv_x ,const char* material_path ,const char* name);
extern harfang_geometry  harfang_create_plane();
extern harfang_geometry  harfang_create_plane_with_width(float  width);
extern harfang_geometry  harfang_create_plane_with_width_length(float  width ,float  length);
extern harfang_geometry  harfang_create_plane_with_width_length_subdiv_x(float  width ,float  length ,int  subdiv_x);
extern harfang_geometry  harfang_create_plane_with_width_length_subdiv_x_material_path(float  width ,float  length ,int  subdiv_x ,const char* material_path);
extern harfang_geometry  harfang_create_plane_with_width_length_subdiv_x_material_path_name(float  width ,float  length ,int  subdiv_x ,const char* material_path ,const char* name);
extern harfang_geometry  harfang_create_sphere();
extern harfang_geometry  harfang_create_sphere_with_radius(float  radius);
extern harfang_geometry  harfang_create_sphere_with_radius_subdiv_x_subdiv_y(float  radius ,int  subdiv_x ,int  subdiv_y);
extern harfang_geometry  harfang_create_sphere_with_radius_subdiv_x_subdiv_y_material_path(float  radius ,int  subdiv_x ,int  subdiv_y ,const char* material_path);
extern harfang_geometry  harfang_create_sphere_with_radius_subdiv_x_subdiv_y_material_path_name(float  radius ,int  subdiv_x ,int  subdiv_y ,const char* material_path ,const char* name);
extern harfang_renderer  harfang_create_renderer();
extern harfang_renderer  harfang_create_renderer_with_name(const char* name);
extern void harfang_draw_buffers(harfang_renderer_nobind  renderer ,unsigned int index_count ,harfang_buffer_nobind  idx ,harfang_buffer_nobind  vtx ,harfang_vertex_layout  layout);
extern void harfang_draw_buffers_with_idx_type(harfang_renderer_nobind  renderer ,unsigned int index_count ,harfang_buffer_nobind  idx ,harfang_buffer_nobind  vtx ,harfang_vertex_layout  layout ,uint8_t idx_type);
extern void harfang_draw_buffers_with_idx_type_primitive_type(harfang_renderer_nobind  renderer ,unsigned int index_count ,harfang_buffer_nobind  idx ,harfang_buffer_nobind  vtx ,harfang_vertex_layout  layout ,uint8_t idx_type ,uint8_t primitive_type);
extern void harfang_set_shader_engine_values(harfang_render_system_nobind  render_system);
extern void harfang_polygonise_iso_surface(unsigned int width ,unsigned int height ,unsigned int depth ,const harfang_binary_data  field ,float  isolevel ,harfang_iso_surface_nobind  iso);
extern void harfang_polygonise_iso_surface_with_unit(unsigned int width ,unsigned int height ,unsigned int depth ,const harfang_binary_data  field ,float  isolevel ,harfang_iso_surface_nobind  iso ,const harfang_vector3  unit);
extern void harfang_iso_surface_to_geometry(const harfang_iso_surface_nobind  iso ,harfang_geometry_nobind  out);
extern harfang_future_void  harfang_iso_surface_to_render_geometry(harfang_render_system  render_system ,harfang_iso_surface  iso ,harfang_render_geometry  geo ,harfang_render_material  mat);
extern harfang_future_void  harfang_polygonise_iso_surface_to_render_geometry(const harfang_render_system  render_system ,const harfang_render_geometry  geo ,const harfang_render_material  mat ,unsigned int width ,unsigned int height ,unsigned int depth ,const harfang_binary_data  field ,float  isolevel ,const harfang_iso_surface  iso);
extern harfang_future_void  harfang_polygonise_iso_surface_to_render_geometry_with_unit(const harfang_render_system  render_system ,const harfang_render_geometry  geo ,const harfang_render_material  mat ,unsigned int width ,unsigned int height ,unsigned int depth ,const harfang_binary_data  field ,float  isolevel ,const harfang_iso_surface  iso ,const harfang_vector3  unit);
extern harfang_frame_renderer  harfang_create_frame_renderer();
extern harfang_frame_renderer  harfang_create_frame_renderer_with_name(const char* name);
extern size_t  harfang_extract_audio_data(harfang_audio_data_nobind  source ,harfang_binary_data  data);
extern harfang_audio_io  harfang_get_audio_io();
extern harfang_mixer  harfang_create_mixer();
extern harfang_mixer  harfang_create_mixer_with_name(const char* name);
extern harfang_movie  harfang_create_movie();
extern harfang_movie  harfang_create_movie_with_name(const char* name);
extern bool  harfang_project(const harfang_matrix4  camera_world ,float  zoom_factor ,const harfang_vector2  aspect_ratio ,const harfang_vector3  position ,harfang_vector3  out);
extern bool  harfang_unproject(const harfang_matrix4  camera_world ,float  zoom_factor ,const harfang_vector2  aspect_ratio ,const harfang_vector3  position ,harfang_vector3  out);
extern float  harfang_extract_zoom_factor_from_projection_matrix(const harfang_matrix44  projection_matrix);
extern void harfang_extract_z_range_from_projection_matrix(const harfang_matrix44  projection_matrix ,float * znear ,float * zfar);
extern harfang_navigation_geometry  harfang_create_navigation_geometry(const harfang_geometry_nobind  geo ,const harfang_navigation_config  cfg);
extern harfang_physic_system  harfang_create_physic_system();
extern harfang_physic_system  harfang_create_physic_system_with_name(const char* name);
extern int64_t  harfang_time_repeat(int64_t  t ,int64_t  start ,int64_t  end);
extern int64_t  harfang_time_ping_pong(int64_t  t ,int64_t  start ,int64_t  end);
extern harfang_scene  harfang_new_default_scene(harfang_render_system  render_system);
extern void harfang_scene_setup_core_systems_and_components(harfang_scene  scene ,harfang_render_system  render_system);
extern harfang_input_system  harfang_get_input_system();
extern harfang_plus  harfang_get_plus();
extern void harfang_im_gui_new_frame();
extern void harfang_im_gui_render();
extern bool  harfang_im_gui_begin(const char * name);
extern bool  harfang_im_gui_begin_with_open_flags(const char * name ,bool * open ,int flags);
extern void harfang_im_gui_end();
extern bool  harfang_im_gui_begin_child(const char * id);
extern bool  harfang_im_gui_begin_child_with_size(const char * id ,const harfang_vector2  size);
extern bool  harfang_im_gui_begin_child_with_size_border(const char * id ,const harfang_vector2  size ,bool  border);
extern bool  harfang_im_gui_begin_child_with_size_border_extra_flags(const char * id ,const harfang_vector2  size ,bool  border ,int extra_flags);
extern void harfang_im_gui_end_child();
extern harfang_vector2  harfang_im_gui_get_content_region_max();
extern harfang_vector2  harfang_im_gui_get_content_region_avail();
extern float  harfang_im_gui_get_content_region_avail_width();
extern harfang_vector2  harfang_im_gui_get_window_content_region_min();
extern harfang_vector2  harfang_im_gui_get_window_content_region_max();
extern float  harfang_im_gui_get_window_content_region_width();
extern harfang_im_draw_list  harfang_im_gui_get_window_draw_list();
extern harfang_vector2  harfang_im_gui_get_window_pos();
extern harfang_vector2  harfang_im_gui_get_window_size();
extern float  harfang_im_gui_get_window_width();
extern float  harfang_im_gui_get_window_height();
extern bool  harfang_im_gui_is_window_collapsed();
extern void harfang_im_gui_set_window_font_scale(float  scale);
extern void harfang_im_gui_set_window_global_font_scale(float  scale);
extern void harfang_im_gui_set_next_window_pos(const harfang_vector2  pos);
extern void harfang_im_gui_set_next_window_pos_with_condition(const harfang_vector2  pos ,int condition);
extern void harfang_im_gui_set_next_window_pos_center();
extern void harfang_im_gui_set_next_window_pos_center_with_condition(int condition);
extern void harfang_im_gui_set_next_window_size(const harfang_vector2  size);
extern void harfang_im_gui_set_next_window_size_with_condition(const harfang_vector2  size ,int condition);
extern void harfang_im_gui_set_next_window_size_constraints(const harfang_vector2  size_min ,const harfang_vector2  size_max);
extern void harfang_im_gui_set_next_window_content_size(const harfang_vector2  size);
extern void harfang_im_gui_set_next_window_content_width(float  width);
extern void harfang_im_gui_set_next_window_collapsed(bool  collapsed ,int condition);
extern void harfang_im_gui_set_next_window_focus();
extern void harfang_im_gui_set_window_pos(const harfang_vector2  pos);
extern void harfang_im_gui_set_window_pos_with_condition(const harfang_vector2  pos ,int condition);
extern void harfang_im_gui_set_window_size(const harfang_vector2  size);
extern void harfang_im_gui_set_window_size_with_condition(const harfang_vector2  size ,int condition);
extern void harfang_im_gui_set_window_collapsed(bool  collapsed);
extern void harfang_im_gui_set_window_collapsed_with_condition(bool  collapsed ,int condition);
extern void harfang_im_gui_set_window_focus();
extern void harfang_im_gui_set_window_focus_with_name(const char * name);
extern float  harfang_im_gui_get_scroll_x();
extern float  harfang_im_gui_get_scroll_y();
extern float  harfang_im_gui_get_scroll_max_x();
extern float  harfang_im_gui_get_scroll_max_y();
extern void harfang_im_gui_set_scroll_x(float  scroll_x);
extern void harfang_im_gui_set_scroll_y(float  scroll_y);
extern void harfang_im_gui_set_scroll_here_y();
extern void harfang_im_gui_set_scroll_here_y_with_center_y_ratio(float  center_y_ratio);
extern void harfang_im_gui_set_scroll_from_pos_y(float  pos_y);
extern void harfang_im_gui_set_scroll_from_pos_y_with_center_y_ratio(float  pos_y ,float  center_y_ratio);
extern void harfang_im_gui_set_keyboard_focus_here();
extern void harfang_im_gui_set_keyboard_focus_here_with_offset(int  offset);
extern void harfang_im_gui_push_font(harfang_im_font  font);
extern void harfang_im_gui_pop_font();
extern void harfang_im_gui_push_style_color(int idx ,const harfang_color  color);
extern void harfang_im_gui_pop_style_color();
extern void harfang_im_gui_pop_style_color_with_count(int  count);
extern void harfang_im_gui_push_style_var(int idx ,float  value);
extern void harfang_im_gui_push_style_var_with_value(int idx ,const harfang_vector2  value);
extern void harfang_im_gui_pop_style_var();
extern void harfang_im_gui_pop_style_var_with_count(int  count);
extern harfang_im_font  harfang_im_gui_get_font();
extern float  harfang_im_gui_get_font_size();
extern harfang_vector2  harfang_im_gui_get_font_tex_uv_white_pixel();
extern unsigned int harfang_im_gui_get_color_u32(int idx);
extern unsigned int harfang_im_gui_get_color_u32_with_alpha_multiplier(int idx ,float  alpha_multiplier);
extern unsigned int harfang_im_gui_get_color_u32_with_color(const harfang_color  color);
extern void harfang_im_gui_push_item_width(float  item_width);
extern void harfang_im_gui_pop_item_width();
extern float  harfang_im_gui_calc_item_width();
extern void harfang_im_gui_push_text_wrap_pos();
extern void harfang_im_gui_push_text_wrap_pos_with_wrap_pos_x(float  wrap_pos_x);
extern void harfang_im_gui_pop_text_wrap_pos();
extern void harfang_im_gui_push_allow_keyboard_focus(bool  v);
extern void harfang_im_gui_pop_allow_keyboard_focus();
extern void harfang_im_gui_push_button_repeat(bool  repeat);
extern void harfang_im_gui_pop_button_repeat();
extern void harfang_im_gui_separator();
extern void harfang_im_gui_same_line();
extern void harfang_im_gui_same_line_with_pos_x(float  pos_x);
extern void harfang_im_gui_same_line_with_pos_x_spacing_w(float  pos_x ,float  spacing_w);
extern void harfang_im_gui_new_line();
extern void harfang_im_gui_spacing();
extern void harfang_im_gui_dummy(const harfang_vector2  size);
extern void harfang_im_gui_indent();
extern void harfang_im_gui_indent_with_width(float  width);
extern void harfang_im_gui_unindent();
extern void harfang_im_gui_unindent_with_width(float  width);
extern void harfang_im_gui_begin_group();
extern void harfang_im_gui_end_group();
extern harfang_vector2  harfang_im_gui_get_cursor_pos();
extern float  harfang_im_gui_get_cursor_pos_x();
extern float  harfang_im_gui_get_cursor_pos_y();
extern void harfang_im_gui_set_cursor_pos(const harfang_vector2  local_pos);
extern void harfang_im_gui_set_cursor_pos_x(float  x);
extern void harfang_im_gui_set_cursor_pos_y(float  y);
extern harfang_vector2  harfang_im_gui_get_cursor_start_pos();
extern harfang_vector2  harfang_im_gui_get_cursor_screen_pos();
extern void harfang_im_gui_set_cursor_screen_pos(const harfang_vector2  pos);
extern void harfang_im_gui_align_text_to_frame_padding();
extern float  harfang_im_gui_get_text_line_height();
extern float  harfang_im_gui_get_text_line_height_with_spacing();
extern float  harfang_im_gui_get_frame_height_with_spacing();
extern void harfang_im_gui_columns();
extern void harfang_im_gui_columns_with_count(int  count);
extern void harfang_im_gui_columns_with_count_id(int  count ,const char * id);
extern void harfang_im_gui_columns_with_count_id_with_border(int  count ,const char * id ,bool  with_border);
extern void harfang_im_gui_next_column();
extern int  harfang_im_gui_get_column_index();
extern float  harfang_im_gui_get_column_offset();
extern float  harfang_im_gui_get_column_offset_with_column_index(int  column_index);
extern void harfang_im_gui_set_column_offset(int  column_index ,float  offset_x);
extern float  harfang_im_gui_get_column_width();
extern float  harfang_im_gui_get_column_width_with_column_index(int  column_index);
extern void harfang_im_gui_set_column_width(int  column_index ,float  width);
extern int  harfang_im_gui_get_columns_count();
extern void harfang_im_gui_push_id(const char * id);
extern void harfang_im_gui_push_id_with_id(int  id);
extern void harfang_im_gui_pop_id();
extern unsigned int harfang_im_gui_get_id(const char * id);
extern bool  harfang_im_gui_input_time_ns(const char * label ,int64_t * t);
extern void harfang_im_gui_text(const char * text);
extern void harfang_im_gui_text_colored(const harfang_color  color ,const char * text);
extern void harfang_im_gui_text_disabled(const char * text);
extern void harfang_im_gui_text_wrapped(const char * text);
extern void harfang_im_gui_text_unformatted(const char * text);
extern void harfang_im_gui_label_text(const char * label ,const char * text);
extern void harfang_im_gui_bullet();
extern void harfang_im_gui_bullet_text(const char * label);
extern bool  harfang_im_gui_button(const char * label);
extern bool  harfang_im_gui_button_with_size(const char * label ,const harfang_vector2  size);
extern bool  harfang_im_gui_small_button(const char * label);
extern bool  harfang_im_gui_invisible_button(const char * text ,const harfang_vector2  size);
extern void harfang_im_gui_image(harfang_texture_nobind  texture ,const harfang_vector2  size);
extern void harfang_im_gui_image_with_uv0(harfang_texture_nobind  texture ,const harfang_vector2  size ,const harfang_vector2  uv0);
extern void harfang_im_gui_image_with_uv0_uv1(harfang_texture_nobind  texture ,const harfang_vector2  size ,const harfang_vector2  uv0 ,const harfang_vector2  uv1);
extern void harfang_im_gui_image_with_uv0_uv1_tint_col(harfang_texture_nobind  texture ,const harfang_vector2  size ,const harfang_vector2  uv0 ,const harfang_vector2  uv1 ,const harfang_color  tint_col);
extern void harfang_im_gui_image_with_uv0_uv1_tint_col_border_col(harfang_texture_nobind  texture ,const harfang_vector2  size ,const harfang_vector2  uv0 ,const harfang_vector2  uv1 ,const harfang_color  tint_col ,const harfang_color  border_col);
extern bool  harfang_im_gui_image_button(harfang_texture_nobind  texture ,const harfang_vector2  size);
extern bool  harfang_im_gui_image_button_with_uv0(harfang_texture_nobind  texture ,const harfang_vector2  size ,const harfang_vector2  uv0);
extern bool  harfang_im_gui_image_button_with_uv0_uv1(harfang_texture_nobind  texture ,const harfang_vector2  size ,const harfang_vector2  uv0 ,const harfang_vector2  uv1);
extern bool  harfang_im_gui_image_button_with_uv0_uv1_frame_padding(harfang_texture_nobind  texture ,const harfang_vector2  size ,const harfang_vector2  uv0 ,const harfang_vector2  uv1 ,int  frame_padding);
extern bool  harfang_im_gui_image_button_with_uv0_uv1_frame_padding_bg_col(harfang_texture_nobind  texture ,const harfang_vector2  size ,const harfang_vector2  uv0 ,const harfang_vector2  uv1 ,int  frame_padding ,const harfang_color  bg_col);
extern bool  harfang_im_gui_image_button_with_uv0_uv1_frame_padding_bg_col_tint_col(harfang_texture_nobind  texture ,const harfang_vector2  size ,const harfang_vector2  uv0 ,const harfang_vector2  uv1 ,int  frame_padding ,const harfang_color  bg_col ,const harfang_color  tint_col);
extern bool  harfang_im_gui_input_text(const char * label ,const char * text ,size_t  max_size ,const char** out);
extern bool  harfang_im_gui_input_text_with_flags(const char * label ,const char * text ,size_t  max_size ,const char** out ,int flags);
extern bool  harfang_im_gui_checkbox(const char * label ,bool * value);
extern bool  harfang_im_gui_radio_button(const char * label ,bool  active);
extern bool  harfang_im_gui_radio_button_with_vv_button(const char * label ,int * v ,int  v_button);
extern bool  harfang_im_gui_begin_combo(const char * label ,const char * preview_value);
extern bool  harfang_im_gui_begin_combo_with_flags(const char * label ,const char * preview_value ,int flags);
extern void harfang_im_gui_end_combo();
extern bool  harfang_im_gui_combo(const char * label ,int * current_item ,const harfang_string_list  items);
extern bool  harfang_im_gui_combo_with_height_in_items(const char * label ,int * current_item ,const harfang_string_list  items ,int  height_in_items);
extern bool  harfang_im_gui_color_button(const char * id ,harfang_color  color);
extern bool  harfang_im_gui_color_button_with_flags(const char * id ,harfang_color  color ,int flags);
extern bool  harfang_im_gui_color_button_with_flags_size(const char * id ,harfang_color  color ,int flags ,const harfang_vector2  size);
extern bool  harfang_im_gui_color_edit(const char * label ,harfang_color  color);
extern bool  harfang_im_gui_color_edit_with_flags(const char * label ,harfang_color  color ,int flags);
extern void harfang_im_gui_progress_bar(float  fraction);
extern void harfang_im_gui_progress_bar_with_size(float  fraction ,const harfang_vector2  size);
extern void harfang_im_gui_progress_bar_with_size_overlay(float  fraction ,const harfang_vector2  size ,const char * overlay);
extern bool  harfang_im_gui_drag_float(const char * label ,float * v);
extern bool  harfang_im_gui_drag_float_with_v_speed(const char * label ,float * v ,float  v_speed);
extern bool  harfang_im_gui_drag_float_with_v_speed_v_min_v_max(const char * label ,float * v ,float  v_speed ,float  v_min ,float  v_max);
extern bool  harfang_im_gui_drag_vector2(const char * label ,harfang_vector2  v);
extern bool  harfang_im_gui_drag_vector2_with_v_speed(const char * label ,harfang_vector2  v ,float  v_speed);
extern bool  harfang_im_gui_drag_vector2_with_v_speed_v_min_v_max(const char * label ,harfang_vector2  v ,float  v_speed ,float  v_min ,float  v_max);
extern bool  harfang_im_gui_drag_vector3(const char * label ,harfang_vector3  v);
extern bool  harfang_im_gui_drag_vector3_with_v_speed(const char * label ,harfang_vector3  v ,float  v_speed);
extern bool  harfang_im_gui_drag_vector3_with_v_speed_v_min_v_max(const char * label ,harfang_vector3  v ,float  v_speed ,float  v_min ,float  v_max);
extern bool  harfang_im_gui_drag_vector4(const char * label ,harfang_vector4  v);
extern bool  harfang_im_gui_drag_vector4_with_v_speed(const char * label ,harfang_vector4  v ,float  v_speed);
extern bool  harfang_im_gui_drag_vector4_with_v_speed_v_min_v_max(const char * label ,harfang_vector4  v ,float  v_speed ,float  v_min ,float  v_max);
extern bool  harfang_im_gui_drag_int_vector2(const char * label ,harfang_int_vector2  v);
extern bool  harfang_im_gui_drag_int_vector2_with_v_speed(const char * label ,harfang_int_vector2  v ,float  v_speed);
extern bool  harfang_im_gui_drag_int_vector2_with_v_speed_v_min_v_max(const char * label ,harfang_int_vector2  v ,float  v_speed ,int  v_min ,int  v_max);
extern bool  harfang_im_gui_input_int(const char * label ,int * v);
extern bool  harfang_im_gui_input_int_with_step_step_fast(const char * label ,int * v ,int  step ,int  step_fast);
extern bool  harfang_im_gui_input_int_with_step_step_fast_extra_flags(const char * label ,int * v ,int  step ,int  step_fast ,int extra_flags);
extern bool  harfang_im_gui_input_float(const char * label ,float * v);
extern bool  harfang_im_gui_input_float_with_step_step_fast(const char * label ,float * v ,float  step ,float  step_fast);
extern bool  harfang_im_gui_input_float_with_step_step_fast_decimal_precision(const char * label ,float * v ,float  step ,float  step_fast ,int  decimal_precision);
extern bool  harfang_im_gui_input_float_with_step_step_fast_decimal_precision_extra_flags(const char * label ,float * v ,float  step ,float  step_fast ,int  decimal_precision ,int extra_flags);
extern bool  harfang_im_gui_input_vector2(const char * label ,harfang_vector2  v);
extern bool  harfang_im_gui_input_vector2_with_decimal_precision(const char * label ,harfang_vector2  v ,int  decimal_precision);
extern bool  harfang_im_gui_input_vector2_with_decimal_precision_extra_flags(const char * label ,harfang_vector2  v ,int  decimal_precision ,int extra_flags);
extern bool  harfang_im_gui_input_vector3(const char * label ,harfang_vector3  v);
extern bool  harfang_im_gui_input_vector3_with_decimal_precision(const char * label ,harfang_vector3  v ,int  decimal_precision);
extern bool  harfang_im_gui_input_vector3_with_decimal_precision_extra_flags(const char * label ,harfang_vector3  v ,int  decimal_precision ,int extra_flags);
extern bool  harfang_im_gui_input_vector4(const char * label ,harfang_vector4  v);
extern bool  harfang_im_gui_input_vector4_with_decimal_precision(const char * label ,harfang_vector4  v ,int  decimal_precision);
extern bool  harfang_im_gui_input_vector4_with_decimal_precision_extra_flags(const char * label ,harfang_vector4  v ,int  decimal_precision ,int extra_flags);
extern bool  harfang_im_gui_input_int_vector2(const char * label ,harfang_int_vector2  v);
extern bool  harfang_im_gui_input_int_vector2_with_extra_flags(const char * label ,harfang_int_vector2  v ,int extra_flags);
extern bool  harfang_im_gui_slider_int(const char * label ,int * v ,int  v_min ,int  v_max);
extern bool  harfang_im_gui_slider_int_with_format(const char * label ,int * v ,int  v_min ,int  v_max ,const char * format);
extern bool  harfang_im_gui_slider_int_vector2(const char * label ,harfang_int_vector2  v ,int  v_min ,int  v_max);
extern bool  harfang_im_gui_slider_int_vector2_with_format(const char * label ,harfang_int_vector2  v ,int  v_min ,int  v_max ,const char * format);
extern bool  harfang_im_gui_slider_float(const char * label ,float * v ,float  v_min ,float  v_max);
extern bool  harfang_im_gui_slider_float_with_format(const char * label ,float * v ,float  v_min ,float  v_max ,const char * format);
extern bool  harfang_im_gui_slider_vector2(const char * label ,harfang_vector2  v ,float  v_min ,float  v_max);
extern bool  harfang_im_gui_slider_vector2_with_format(const char * label ,harfang_vector2  v ,float  v_min ,float  v_max ,const char * format);
extern bool  harfang_im_gui_slider_vector3(const char * label ,harfang_vector3  v ,float  v_min ,float  v_max);
extern bool  harfang_im_gui_slider_vector3_with_format(const char * label ,harfang_vector3  v ,float  v_min ,float  v_max ,const char * format);
extern bool  harfang_im_gui_slider_vector4(const char * label ,harfang_vector4  v ,float  v_min ,float  v_max);
extern bool  harfang_im_gui_slider_vector4_with_format(const char * label ,harfang_vector4  v ,float  v_min ,float  v_max ,const char * format);
extern bool  harfang_im_gui_tree_node(const char * label);
extern bool  harfang_im_gui_tree_node_ex(const char * label ,int flags);
extern void harfang_im_gui_tree_push(const char * id);
extern void harfang_im_gui_tree_pop();
extern void harfang_im_gui_tree_advance_to_label_pos();
extern float  harfang_im_gui_get_tree_node_to_label_spacing();
extern void harfang_im_gui_set_next_tree_node_open(bool  is_open);
extern void harfang_im_gui_set_next_tree_node_open_with_condition(bool  is_open ,int condition);
extern bool  harfang_im_gui_collapsing_header(const char * label);
extern bool  harfang_im_gui_collapsing_header_with_flags(const char * label ,int flags);
extern bool  harfang_im_gui_collapsing_header_with_p_open(const char * label ,bool * p_open);
extern bool  harfang_im_gui_collapsing_header_with_p_open_flags(const char * label ,bool * p_open ,int flags);
extern bool  harfang_im_gui_selectable(const char * label);
extern bool  harfang_im_gui_selectable_with_selected(const char * label ,bool  selected);
extern bool  harfang_im_gui_selectable_with_selected_flags(const char * label ,bool  selected ,int flags);
extern bool  harfang_im_gui_selectable_with_selected_flags_size(const char * label ,bool  selected ,int flags ,const harfang_vector2  size);
extern bool  harfang_im_gui_list_box(const char * label ,int * current_item ,const harfang_string_list  items);
extern bool  harfang_im_gui_list_box_with_height_in_items(const char * label ,int * current_item ,const harfang_string_list  items ,int  height_in_items);
extern void harfang_im_gui_set_tooltip(const char * text);
extern void harfang_im_gui_begin_tooltip();
extern void harfang_im_gui_end_tooltip();
extern bool  harfang_im_gui_begin_main_menu_bar();
extern void harfang_im_gui_end_main_menu_bar();
extern bool  harfang_im_gui_begin_menu_bar();
extern void harfang_im_gui_end_menu_bar();
extern bool  harfang_im_gui_begin_menu(const char * label);
extern bool  harfang_im_gui_begin_menu_with_enabled(const char * label ,bool  enabled);
extern void harfang_im_gui_end_menu();
extern bool  harfang_im_gui_menu_item(const char * label);
extern bool  harfang_im_gui_menu_item_with_shortcut(const char * label ,const char * shortcut);
extern bool  harfang_im_gui_menu_item_with_shortcut_selected(const char * label ,const char * shortcut ,bool  selected);
extern bool  harfang_im_gui_menu_item_with_shortcut_selected_enabled(const char * label ,const char * shortcut ,bool  selected ,bool  enabled);
extern void harfang_im_gui_open_popup(const char * id);
extern bool  harfang_im_gui_begin_popup(const char * id);
extern bool  harfang_im_gui_begin_popup_modal(const char * name);
extern bool  harfang_im_gui_begin_popup_modal_with_open(const char * name ,bool * open);
extern bool  harfang_im_gui_begin_popup_modal_with_open_extra_flags(const char * name ,bool * open ,int extra_flags);
extern bool  harfang_im_gui_begin_popup_context_item(const char * id);
extern bool  harfang_im_gui_begin_popup_context_item_with_mouse_button(const char * id ,int  mouse_button);
extern bool  harfang_im_gui_begin_popup_context_window();
extern bool  harfang_im_gui_begin_popup_context_window_with_id(const char * id);
extern bool  harfang_im_gui_begin_popup_context_window_with_id_mouse_button(const char * id ,int  mouse_button);
extern bool  harfang_im_gui_begin_popup_context_window_with_id_mouse_button_also_over_items(const char * id ,int  mouse_button ,bool  also_over_items);
extern bool  harfang_im_gui_begin_popup_context_void();
extern bool  harfang_im_gui_begin_popup_context_void_with_id(const char * id);
extern bool  harfang_im_gui_begin_popup_context_void_with_id_mouse_button(const char * id ,int  mouse_button);
extern void harfang_im_gui_end_popup();
extern void harfang_im_gui_close_current_popup();
extern void harfang_im_gui_push_clip_rect(const harfang_vector2  clip_rect_min ,const harfang_vector2  clip_rect_max ,bool  intersect_with_current_clip_rect);
extern void harfang_im_gui_pop_clip_rect();
extern bool  harfang_im_gui_is_item_hovered();
extern bool  harfang_im_gui_is_item_hovered_with_flags(int flags);
extern bool  harfang_im_gui_is_item_active();
extern bool  harfang_im_gui_is_item_clicked();
extern bool  harfang_im_gui_is_item_clicked_with_mouse_button(int  mouse_button);
extern bool  harfang_im_gui_is_item_visible();
extern bool  harfang_im_gui_is_any_item_hovered();
extern bool  harfang_im_gui_is_any_item_active();
extern harfang_vector2  harfang_im_gui_get_item_rect_min();
extern harfang_vector2  harfang_im_gui_get_item_rect_max();
extern harfang_vector2  harfang_im_gui_get_item_rect_size();
extern void harfang_im_gui_set_item_allow_overlap();
extern bool  harfang_im_gui_is_window_hovered();
extern bool  harfang_im_gui_is_window_hovered_with_flags(int flags);
extern bool  harfang_im_gui_is_window_focused();
extern bool  harfang_im_gui_is_window_focused_with_flags(int flags);
extern bool  harfang_im_gui_is_rect_visible(const harfang_vector2  size);
extern bool  harfang_im_gui_is_rect_visible_with_rect_min_rect_max(const harfang_vector2  rect_min ,const harfang_vector2  rect_max);
extern float  harfang_im_gui_get_time();
extern int  harfang_im_gui_get_frame_count();
extern harfang_vector2  harfang_im_gui_calc_text_size(const char * text);
extern harfang_vector2  harfang_im_gui_calc_text_size_with_hide_text_after_double_dash(const char * text ,bool  hide_text_after_double_dash);
extern harfang_vector2  harfang_im_gui_calc_text_size_with_hide_text_after_double_dash_wrap_width(const char * text ,bool  hide_text_after_double_dash ,float  wrap_width);
extern bool  harfang_im_gui_is_key_down(int  key_index);
extern bool  harfang_im_gui_is_key_pressed(int  key_index);
extern bool  harfang_im_gui_is_key_pressed_with_repeat(int  key_index ,bool  repeat);
extern bool  harfang_im_gui_is_key_released(int  key_index);
extern bool  harfang_im_gui_is_mouse_down(int  button);
extern bool  harfang_im_gui_is_mouse_clicked(int  button);
extern bool  harfang_im_gui_is_mouse_clicked_with_repeat(int  button ,bool  repeat);
extern bool  harfang_im_gui_is_mouse_double_clicked(int  button);
extern bool  harfang_im_gui_is_mouse_released(int  button);
extern bool  harfang_im_gui_is_mouse_hovering_rect(const harfang_vector2  rect_min ,const harfang_vector2  rect_max);
extern bool  harfang_im_gui_is_mouse_hovering_rect_with_clip(const harfang_vector2  rect_min ,const harfang_vector2  rect_max ,bool  clip);
extern bool  harfang_im_gui_is_mouse_dragging();
extern bool  harfang_im_gui_is_mouse_dragging_with_button(int  button);
extern bool  harfang_im_gui_is_mouse_dragging_with_button_lock_threshold(int  button ,float  lock_threshold);
extern harfang_vector2  harfang_im_gui_get_mouse_pos();
extern harfang_vector2  harfang_im_gui_get_mouse_pos_on_opening_current_popup();
extern harfang_vector2  harfang_im_gui_get_mouse_drag_delta();
extern harfang_vector2  harfang_im_gui_get_mouse_drag_delta_with_button(int  button);
extern harfang_vector2  harfang_im_gui_get_mouse_drag_delta_with_button_lock_threshold(int  button ,float  lock_threshold);
extern void harfang_im_gui_reset_mouse_drag_delta();
extern void harfang_im_gui_reset_mouse_drag_delta_with_button(int  button);
extern void harfang_im_gui_capture_keyboard_from_app(bool  capture);
extern void harfang_im_gui_capture_mouse_from_app(bool  capture);
extern bool  harfang_im_gui_want_capture_mouse();
extern void harfang_im_gui_mouse_draw_cursor(const bool  draw_cursor);
extern void harfang_im_gui_set_output_surface(const harfang_surface  surface);
extern harfang_im_font  harfang_im_gui_add_font(harfang_renderer_async_nobind  renderer_async ,const char* font_path ,const float  font_size);
extern void harfang_im_gui_lock();
extern void harfang_im_gui_unlock();
extern bool  harfang_open_folder_dialog(const char* title ,const char** folder_name);
extern bool  harfang_open_folder_dialog_with_initial_dir(const char* title ,const char** folder_name ,const char* initial_dir);
extern bool  harfang_open_file_dialog(const char* title ,const char* filter ,const char** file_name);
extern bool  harfang_open_file_dialog_with_initial_dir(const char* title ,const char* filter ,const char** file_name ,const char* initial_dir);
extern bool  harfang_save_file_dialog(const char* title ,const char* filter ,const char** file_name);
extern bool  harfang_save_file_dialog_with_initial_dir(const char* title ,const char* filter ,const char** file_name ,const char* initial_dir);
extern void harfang_sleep(int64_t  duration);
extern harfang_std_file_driver  harfang_cast_file_driver_to_std_file_driver(harfang_file_driver  o);
extern harfang_zip_file_driver  harfang_cast_file_driver_to_zip_file_driver(harfang_file_driver  o);
extern harfang_buffer_file_driver  harfang_cast_file_driver_to_buffer_file_driver(harfang_file_driver  o);
extern harfang_material_value  harfang_cast_shader_value_to_material_value(harfang_shader_value  o);
extern harfang_texture  harfang_cast_gpu_resource_to_texture(harfang_gpu_resource  o);
extern harfang_gpu_shader  harfang_cast_gpu_resource_to_gpu_shader(harfang_gpu_resource  o);
extern harfang_surface_shader  harfang_cast_gpu_resource_to_surface_shader(harfang_gpu_resource  o);
extern harfang_render_material  harfang_cast_gpu_resource_to_render_material(harfang_gpu_resource  o);
extern harfang_render_geometry  harfang_cast_gpu_resource_to_render_geometry(harfang_gpu_resource  o);
extern harfang_instance  harfang_cast_component_to_instance(harfang_component  o);
extern harfang_metadata  harfang_cast_component_to_metadata(harfang_component  o);
extern harfang_target  harfang_cast_component_to_target(harfang_component  o);
extern harfang_environment  harfang_cast_component_to_environment(harfang_component  o);
extern harfang_simple_graphic_scene_overlay  harfang_cast_component_to_simple_graphic_scene_overlay(harfang_component  o);
extern harfang_transform  harfang_cast_component_to_transform(harfang_component  o);
extern harfang_camera  harfang_cast_component_to_camera(harfang_component  o);
extern harfang_object  harfang_cast_component_to_object(harfang_component  o);
extern harfang_light  harfang_cast_component_to_light(harfang_component  o);
extern harfang_decorator  harfang_cast_component_to_decorator(harfang_component  o);
extern harfang_rigid_body  harfang_cast_component_to_rigid_body(harfang_component  o);
extern harfang_collision  harfang_cast_component_to_collision(harfang_component  o);
extern harfang_box_collision  harfang_cast_component_to_box_collision(harfang_component  o);
extern harfang_box_collision  harfang_cast_collision_to_box_collision(harfang_collision  o);
extern harfang_mesh_collision  harfang_cast_component_to_mesh_collision(harfang_component  o);
extern harfang_mesh_collision  harfang_cast_collision_to_mesh_collision(harfang_collision  o);
extern harfang_sphere_collision  harfang_cast_component_to_sphere_collision(harfang_component  o);
extern harfang_sphere_collision  harfang_cast_collision_to_sphere_collision(harfang_collision  o);
extern harfang_capsule_collision  harfang_cast_component_to_capsule_collision(harfang_component  o);
extern harfang_capsule_collision  harfang_cast_collision_to_capsule_collision(harfang_collision  o);
extern harfang_convex_collision  harfang_cast_component_to_convex_collision(harfang_component  o);
extern harfang_convex_collision  harfang_cast_collision_to_convex_collision(harfang_collision  o);
extern harfang_joint  harfang_cast_component_to_joint(harfang_component  o);
extern harfang_spherical_joint  harfang_cast_component_to_spherical_joint(harfang_component  o);
extern harfang_spherical_joint  harfang_cast_joint_to_spherical_joint(harfang_joint  o);
extern harfang_d6_joint  harfang_cast_component_to_d6_joint(harfang_component  o);
extern harfang_d6_joint  harfang_cast_joint_to_d6_joint(harfang_joint  o);
extern harfang_terrain  harfang_cast_component_to_terrain(harfang_component  o);
extern harfang_post_process_component  harfang_cast_component_to_post_process_component(harfang_component  o);
extern harfang_sharpen_post_process  harfang_cast_post_process_component_to_sharpen_post_process(harfang_post_process_component  o);
extern harfang_sharpen_post_process  harfang_cast_component_to_sharpen_post_process(harfang_component  o);
extern harfang_radial_blur_post_process  harfang_cast_post_process_component_to_radial_blur_post_process(harfang_post_process_component  o);
extern harfang_radial_blur_post_process  harfang_cast_component_to_radial_blur_post_process(harfang_component  o);
extern harfang_chromatic_dispersion_post_process  harfang_cast_post_process_component_to_chromatic_dispersion_post_process(harfang_post_process_component  o);
extern harfang_chromatic_dispersion_post_process  harfang_cast_component_to_chromatic_dispersion_post_process(harfang_component  o);
extern harfang_hsl_post_process  harfang_cast_post_process_component_to_hsl_post_process(harfang_post_process_component  o);
extern harfang_hsl_post_process  harfang_cast_component_to_hsl_post_process(harfang_component  o);
extern harfang_motion_blur_post_process  harfang_cast_post_process_component_to_motion_blur_post_process(harfang_post_process_component  o);
extern harfang_motion_blur_post_process  harfang_cast_component_to_motion_blur_post_process(harfang_component  o);
extern harfang_sao_post_process  harfang_cast_post_process_component_to_sao_post_process(harfang_post_process_component  o);
extern harfang_sao_post_process  harfang_cast_component_to_sao_post_process(harfang_component  o);
extern harfang_bloom_post_process  harfang_cast_post_process_component_to_bloom_post_process(harfang_post_process_component  o);
extern harfang_bloom_post_process  harfang_cast_component_to_bloom_post_process(harfang_component  o);
extern harfang_script  harfang_cast_component_to_script(harfang_component  o);
extern harfang_render_script  harfang_cast_script_to_render_script(harfang_script  o);
extern harfang_render_script  harfang_cast_component_to_render_script(harfang_component  o);
extern harfang_logic_script  harfang_cast_script_to_logic_script(harfang_script  o);
extern harfang_logic_script  harfang_cast_component_to_logic_script(harfang_component  o);
extern harfang_navigation_system  harfang_cast_scene_system_to_navigation_system(harfang_scene_system  o);
extern harfang_navigation  harfang_cast_component_to_navigation(harfang_component  o);
extern harfang_script_system  harfang_cast_scene_system_to_script_system(harfang_scene_system  o);
extern harfang_lua_system  harfang_cast_script_system_to_lua_system(harfang_script_system  o);
extern harfang_lua_system  harfang_cast_scene_system_to_lua_system(harfang_scene_system  o);
extern harfang_renderable_system  harfang_cast_scene_system_to_renderable_system(harfang_scene_system  o);
extern harfang_transform_system  harfang_cast_scene_system_to_transform_system(harfang_scene_system  o);
extern harfang_physic_system  harfang_cast_scene_system_to_physic_system(harfang_scene_system  o);
extern harfang_anim_track_float  harfang_cast_anim_track_to_anim_track_float(harfang_anim_track  o);
extern harfang_anim_track_vector3  harfang_cast_anim_track_to_anim_track_vector3(harfang_anim_track  o);
extern harfang_anim_track_rotation  harfang_cast_anim_track_to_anim_track_rotation(harfang_anim_track  o);
extern harfang_frame_renderer  harfang_get_null_frame_renderer();
extern harfang_node  harfang_get_null_node();
#ifdef __cplusplus
}
#endif
